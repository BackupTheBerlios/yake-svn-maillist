From codeandroid at berlios.de  Tue Oct  4 01:18:17 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 01:18:17 +0200
Subject: [Yake-svn] r986 - in trunk/yake/src/yake: physics plugins/physicsNX plugins/physicsODE
Message-ID: <200510032318.j93NIHu2007527@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 01:18:09 +0200 (Tue, 04 Oct 2005)
New Revision: 986

Modified:
   trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp
   trunk/yake/src/yake/physics/yakePhysicsSystem.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeJoint.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
Log:
patch 1309131 (slightly modified)

Modified: trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp
===================================================================
--- trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -40,8 +40,7 @@
 		if (!mNeedsUpdate)
 			return;
 
-		YAKE_ASSERT( mWorld );
-		_determineAffectedBodies( mWorld );
+		_determineAffectedBodies();
 		
 		VectorIterator<AffectorList> itAff( mAffectors.begin(), mAffectors.end() );
 		while (itAff.hasMoreElements())
@@ -49,10 +48,50 @@
 			itAff.getNext()->applyTo( mAffectedBodies, timeElapsed );
 		}
 	}
-	void AffectorZone::_determineAffectedBodies( const SharedPtr<IWorld>& pWorld )
+
+	void AffectorZone::setEnabled(bool enabled)
 	{
-		YAKE_ASSERT( pWorld );
+		mEnabled = enabled;
 	}
 
+	bool AffectorZone::isEnabled() const
+	{
+		return mEnabled;
+	}
+
+	void AffectorZone::addAffector(SharedPtr<IBodyAffector> &pAffector)
+	{
+		YAKE_ASSERT(pAffector);
+		mAffectors.push_back(pAffector);
+	}
+
+	void AffectorZoneManager::addAffectorZone(SharedPtr<AffectorZone> &pSpace)
+	{
+		mZones.push_back(pSpace);
+	}
+
+	AffectorZoneManager::AffectorZoneManager(SharedPtr<physics::IWorld>& pWorld) : mWorld(pWorld)
+	{
+		mStepSigConn = mWorld->subscribeToPreStepInternal( boost::bind(AffectorZoneManager::update, this, _1) );
+	}
+
+	AffectorZoneManager::~AffectorZoneManager()
+	{
+		mStepSigConn.disconnect();
+		mZones.clear();
+	}
+
+	void AffectorZoneManager::update(const real timeElapsed)
+	{
+		VectorIterator<ZoneList> itZone(mZones.begin(), mZones.end());
+		SharedPtr<AffectorZone> pZone;
+		while (itZone.hasMoreElements())
+		{
+			pZone = itZone.getNext();
+			if (pZone->isEnabled())
+				pZone->update(timeElapsed);
+		}
+	}
+
 }
 }

Modified: trunk/yake/src/yake/physics/yakePhysicsSystem.cpp
===================================================================
--- trunk/yake/src/yake/physics/yakePhysicsSystem.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/physics/yakePhysicsSystem.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -46,12 +46,12 @@
 	BodyGroup::~BodyGroup()
 	{
 	}
-	BodyGroup& BodyGroup::operator += (SharedPtr<IBody> & rBody)
+	BodyGroup& BodyGroup::operator += (IBodyPtr rBody)
 	{
 		mBodies.push_back( rBody );
 		return *this;
 	}
-	BodyGroup& BodyGroup::operator -= (SharedPtr<IBody> & rBody)
+	BodyGroup& BodyGroup::operator -= (IBodyPtr rBody)
 	{
 		BodyVector::iterator itFind = std::find(mBodies.begin(), mBodies.end(), rBody );
 		if (itFind != mBodies.end())

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -154,7 +154,7 @@
 		}
 		return out;
 	}
-	IShape* ActorNx::createShape( const IShape::Desc & rkShapeDesc )
+	IShape* ActorNx::createShape( const IShape::Desc & rkShapeDesc, real massOrDensity, IBody::quantityType type )
 	{
 		YAKE_ASSERT( mpNxActor ).error("Actor is invalid! Cannot create shape without a valid actor.");
 		if (!mpNxActor)
@@ -228,8 +228,18 @@
 			mpNxDefaultShape = 0;
 		}
 
+		YAKE_ASSERT( mpBody || !(massOrDensity) ).warning( "Attempt to set mass on nonexistant body!" );
+
 		if (mpBody)
-			mpNxActor->updateMassFromShapes( 1, 0 );
+		{
+			if (type == IBody::QT_MASS)
+				mpNxActor->updateMassFromShapes( 0.0f, mpBody->getMass() + massOrDensity );
+			else
+			{
+				YAKE_LOG_WARNING( "Adding density in Novodex doesn't work very well." );
+				mpNxActor->updateMassFromShapes(  massOrDensity, 1.0f /*@fixme should be 0., not?*/ );
+			}
+		}
 
 		return mShapes.back().get();
 	}

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -175,6 +175,31 @@
 	}
 
 	//-----------------------------------------------------
+	IBody::MassDesc* OdeActor::createMassDescFromShapeDesc( IShape::Desc const& rShapeDesc, real massOrDensity, IBody::quantityType qType )
+	{
+		IShape::Desc* pShapeDesc = &const_cast<IShape::Desc&>( rShapeDesc );
+		IBody::MassDesc* result;
+		
+		if ( IShape::SphereDesc* pSphereDesc = dynamic_cast<IShape::SphereDesc*>( pShapeDesc ) )
+		{
+			result = new IBody::SphereMassDesc( pSphereDesc->radius, massOrDensity, pSphereDesc->position, qType );
+		}
+		else if ( IShape::BoxDesc* pBoxDesc = dynamic_cast<IShape::BoxDesc*>( pShapeDesc ) )
+		{
+			result = new IBody::BoxMassDesc( pBoxDesc->dimensions.x, pBoxDesc->dimensions.y, pBoxDesc->dimensions.z, massOrDensity,
+				pBoxDesc->position, qType );
+		}
+		else if ( IShape::CapsuleDesc* pCapsuleDesc = dynamic_cast<IShape::CapsuleDesc*>( pShapeDesc ) )
+		{
+			result = new IBody::CapsuleMassDesc( pCapsuleDesc->radius, pCapsuleDesc->height, massOrDensity, pCapsuleDesc->position, qType );
+		}
+
+		YAKE_ASSERT( result != 0 ).warning( "Unsupported shape type!" );
+
+		return result;
+	}
+
+	//-----------------------------------------------------
 	bool operator == (const SharedPtr<OdeGeom>& lhs, const OdeGeom* rhs)
 	{
 		return (lhs.get() == rhs);
@@ -365,16 +390,28 @@
 	}
 	
 	//-----------------------------------------------------
-	IShape* OdeActor::createShape( const IShape::Desc& rShapeDesc )
+	IShape* OdeActor::createShape( const IShape::Desc& rShapeDesc, real massOrDensity, IBody::quantityType type )
 	{
 		if ( mBody && dynamic_cast<const IShape::PlaneDesc*>( &rShapeDesc ) )
 			YAKE_ASSERT( false ).error( "Attempted to attach immovable plane shape to movable actor!" );
 			
 		OdeGeom* pShape = createShapeFromDesc( rShapeDesc );
 		YAKE_ASSERT( pShape );
+
+		YAKE_ASSERT( mBody || !(massOrDensity) ).warning( "Attempt to set mass on nonexistant body!" );
 		
 		if (mBody)
+		{
 			dGeomSetBody( pShape->_getOdeGeomID(), mBody->_getOdeBody()->id() );
+
+			if (massOrDensity)
+			{
+//@todo clean up! avoid new/delete either by using caches/pools or ...
+				IBody::MassDesc* desc = createMassDescFromShapeDesc( rShapeDesc, massOrDensity, type );
+				mBody->addMass( *desc );
+				delete desc;
+			}
+		}
 		
 		return pShape;
 	}

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -93,27 +93,47 @@
 		{
 			if ( const IBody::SphereMassDesc* sphereMassDesc = dynamic_cast<const IBody::SphereMassDesc*>( &desc ) )
 			{
-				dMassSetSphere( mass, sphereMassDesc->density, sphereMassDesc->radius );
+				if ( sphereMassDesc->qType == IBody::QT_DENSITY )
+					dMassSetSphere( mass, sphereMassDesc->quantity, sphereMassDesc->radius );
+				else
+					dMassSetSphereTotal( mass, sphereMassDesc->quantity, sphereMassDesc->radius );
 			}
 			else if ( const IBody::BoxMassDesc* boxMassDesc = dynamic_cast<const IBody::BoxMassDesc*>( &desc ) )
 			{
-				dMassSetBox( mass, boxMassDesc->density, boxMassDesc->sizeX, boxMassDesc->sizeY, boxMassDesc->sizeZ );
+				if ( boxMassDesc->qType == IBody::QT_DENSITY )
+					dMassSetBox( mass, boxMassDesc->quantity, boxMassDesc->sizeX, boxMassDesc->sizeY, boxMassDesc->sizeZ );
+				else
+					dMassSetBoxTotal( mass, boxMassDesc->quantity, boxMassDesc->sizeX, boxMassDesc->sizeY, boxMassDesc->sizeZ );
 			}
 			else if ( const IBody::CapsuleMassDesc* capsuleMassDesc = dynamic_cast<const IBody::CapsuleMassDesc*>( &desc ) )
 			{
-				dMassSetCappedCylinder( mass,
-												capsuleMassDesc->density,
+				if ( capsuleMassDesc->qType == IBody::QT_DENSITY )
+					dMassSetCappedCylinder( mass,
+												capsuleMassDesc->quantity,
 												2, 							// along Y axis
 												capsuleMassDesc->radius,
 												capsuleMassDesc->length );
+				else
+					dMassSetCappedCylinderTotal( mass,
+												capsuleMassDesc->quantity,
+												2, 							// along Y axis
+												capsuleMassDesc->radius,
+												capsuleMassDesc->length );
 			}
 			else if ( const IBody::CylinderMassDesc* cylMassDesc = dynamic_cast<const IBody::CylinderMassDesc*>( &desc ) )
 			{
-				dMassSetCylinder( mass,
-										cylMassDesc->density,
+				if ( cylMassDesc->qType == IBody::QT_DENSITY )
+					dMassSetCylinder( mass,
+										cylMassDesc->quantity,
 										2,							// along Y axis
 										cylMassDesc->radius,
 										cylMassDesc->length );
+				else
+					dMassSetCylinderTotal( mass,
+										cylMassDesc->quantity,
+										2,							// along Y axis
+										cylMassDesc->radius,
+										cylMassDesc->length );
 			}
 			else
 			{

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeJoint.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeJoint.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeJoint.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -141,9 +141,28 @@
 		case dJointTypeUniversal:
 		case dJointTypeBall:
 		default:
+			YAKE_ASSERT( 1==0 )(mOdeJoint->getType()).warning("OdeJoint::_applySpring() not implemented for this type!");
 			break;
 		}
 	}
+	void OdeJoint::setSpring(real spring)
+	{
+		mSpringConstant = spring;
+		_applySpring();
+	}
+	real OdeJoint::getSpring() const
+	{
+		return mSpringConstant;
+	}
+	void OdeJoint::setDamping(real damping)
+	{
+		mDampingConstant = damping;
+		_applySpring();
+	}
+	real OdeJoint::getDamping() const
+	{
+		return mDampingConstant;
+	}
 
 } // physics
 } // yake

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-09-30 21:56:08 UTC (rev 985)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-03 23:18:09 UTC (rev 986)
@@ -310,6 +310,9 @@
 
 				//mOdeWorld->step( mStepSize );
 				//mOdeWorld->stepFast1( mStepSize, 4 );
+
+				firePreStepInternal(mStepSize);
+
 				dWorldQuickStep( mOdeWorld->id(), mStepSize );
 				//dWorldStepFast1( mOdeWorld->id(), mStepSize, 4 );
 



From codeandroid at berlios.de  Tue Oct  4 01:18:57 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 01:18:57 +0200
Subject: [Yake-svn] r987 - in trunk/yake/yake: physics plugins/physicsNX plugins/physicsODE
Message-ID: <200510032318.j93NIvH5007859@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 01:18:46 +0200 (Tue, 04 Oct 2005)
New Revision: 987

Modified:
   trunk/yake/yake/physics/yakeAffectorZone.h
   trunk/yake/yake/physics/yakePhysics.h
   trunk/yake/yake/physics/yakePhysicsActor.h
   trunk/yake/yake/physics/yakePhysicsAffectors.h
   trunk/yake/yake/physics/yakePhysicsBody.h
   trunk/yake/yake/physics/yakePhysicsBodyGroup.h
   trunk/yake/yake/physics/yakePhysicsWorld.h
   trunk/yake/yake/plugins/physicsNX/yakeActorNx.h
   trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h
   trunk/yake/yake/plugins/physicsODE/OdeActor.h
   trunk/yake/yake/plugins/physicsODE/OdeJoint.h
   trunk/yake/yake/plugins/physicsODE/OdeWorld.h
Log:
patch 1309131 (slightly modified)

Modified: trunk/yake/yake/physics/yakeAffectorZone.h
===================================================================
--- trunk/yake/yake/physics/yakeAffectorZone.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakeAffectorZone.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -96,22 +96,16 @@
 	};
 	*/
 
-	class AffectorZone
+	class YAKE_PHYSICS_API AffectorZone
 	{
 	protected:
-		typedef Vector< SharedPtr<BoundingVolume> > VolumeList;
-		VolumeList				mVolumes;
-
 		typedef Vector< SharedPtr<physics::IBodyAffector> > AffectorList;
 		AffectorList			mAffectors;
 
-		SharedPtr<IWorld>		mWorld;
 		BodyGroup				mAffectedBodies;
 	public:
 		AffectorZone();
-		void addVolume( SharedPtr<BoundingVolume>& pVolume );
 		void addAffector( SharedPtr<IBodyAffector>& pAffector );
-		void setWorld( SharedPtr<IWorld>& pWorld );
 
 		void setEnabled( bool enabled );
 		bool isEnabled() const;
@@ -119,25 +113,27 @@
 		virtual void update( const real timeElapsed );
 
 	protected:
-		void _determineAffectedBodies( const SharedPtr<IWorld> & pWorld );
+		virtual void _determineAffectedBodies() = 0;
 	private:
 		bool		mEnabled;
 		bool		mNeedsUpdate;
 	};
 
-	class AffectorZoneManager
+	class YAKE_PHYSICS_API AffectorZoneManager
 	{
 	public:
+		AffectorZoneManager( SharedPtr<physics::IWorld>& pWorld );
+		~AffectorZoneManager();
+
 		void addAffectorZone( SharedPtr<AffectorZone> & pSpace );
 
-		virtual void update( const real timeElapsed )
-		{
-			/**@todo
-			foreach forceSpace
-				if ((*it)->isEnabled())
-					(*it)->update( upd );
-			*/
-		}
+		virtual void update( const real timeElapsed );
+
+	protected:
+		typedef Vector< SharedPtr<AffectorZone> > ZoneList;
+		ZoneList mZones;
+		SharedPtr<physics::IWorld> mWorld;
+		SignalConnection mStepSigConn;
 	};
 
 }

Modified: trunk/yake/yake/physics/yakePhysics.h
===================================================================
--- trunk/yake/yake/physics/yakePhysics.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakePhysics.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -40,8 +40,8 @@
 #include <yake/physics/yakePhysicsActor.h>
 #include <yake/physics/yakePhysicsBodyGroup.h>
 #include <yake/physics/yakePhysicsAffectors.h>
-//#include <yake/physics/yakeAffectorZone.h>
 #include <yake/physics/yakePhysicsWorld.h>
+#include <yake/physics/yakeAffectorZone.h>
 #include <yake/physics/yakePhysicsSystem.h>
 
 #endif

Modified: trunk/yake/yake/physics/yakePhysicsActor.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsActor.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakePhysicsActor.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -78,18 +78,18 @@
 
 		virtual IWorld* getCreator() const = 0;
 
-		virtual IShape* createShape( const IShape::Desc& rShapeDesc ) = 0;
+		virtual IShape* createShape( const IShape::Desc& rShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_DENSITY ) = 0;
 		virtual void destroyShape( IShape* pShape ) = 0;
 		virtual IShapePtrList getShapes() const = 0;
 
 		virtual IBody* getBodyPtr() const = 0;
 		virtual IBody& getBody() const = 0;
 
-		//virtual void setPosition(const Vector3& position) = 0;
-		//virtual Vector3 getPosition() const = 0;
+		virtual void setPosition(const Vector3& position) = 0;
+		virtual Vector3 getPosition() const = 0;
 
-		//virtual void setOrientation( const Quaternion & rkOrientation ) = 0;
-		//virtual Quaternion getOrientation() const = 0;
+		virtual void setOrientation( const Quaternion & rkOrientation ) = 0;
+		virtual Quaternion getOrientation() const = 0;
 
 		virtual void setEnabled(const bool enabled) = 0;
 		virtual bool isEnabled() const = 0;

Modified: trunk/yake/yake/physics/yakePhysicsAffectors.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsAffectors.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakePhysicsAffectors.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -38,7 +38,7 @@
 	/** A generic body affector. Basically defines the interface, factory and implements
 		some basic and usually common functionality.
 	*/
-	class IBodyAffector
+	class YAKE_PHYSICS_API IBodyAffector
 	{
 		YAKE_DECLARE_REGISTRY_0( IBodyAffector, String )
 	public:

Modified: trunk/yake/yake/physics/yakePhysicsBody.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsBody.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakePhysicsBody.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -85,11 +85,14 @@
 		
 		virtual void onSleeping(const bool sleeping);
 	};
+	class IBody;
+	YAKE_PHYSICS_COMMON_POINTERS( IBody );
 
 	class IActor;
 	class IBody : public ListenerManager<IBodyListener>
 	{
 	public:
+		enum quantityType { QT_MASS, QT_DENSITY };
 		struct Desc
 		{
 			Desc()
@@ -111,23 +114,26 @@
 
 		struct MassDesc
 		{
-			MassDesc( real shapeDensity, const Vector3& rOffset = Vector3::kZero ) :
-					density( shapeDensity ),
-					offset( rOffset )
+			MassDesc( real massOrDensity, const Vector3& rOffset = Vector3::kZero, quantityType type = QT_DENSITY ) :
+					quantity( massOrDensity ),
+					offset( rOffset ),
+					qType( type )
 			{}
 
 			virtual ~MassDesc() {}
 
-			real 			density; /// For all of them. You can set total mass via setMass
+			real 			quantity; /// For all of them. You can set total mass via setMass
 			Vector3		offset; /// Mass can be offseted. TODO Add rotation "offset"?
+			quantityType qType;
 		};
 
 		struct SphereMassDesc : public MassDesc
 		{
 			SphereMassDesc(	real radiusValue,
 								real shapeDensity,
-								const Vector3& rOffset = Vector3::kZero ) :
-									MassDesc( shapeDensity, rOffset ),
+								const Vector3& rOffset = Vector3::kZero,
+								quantityType type = QT_DENSITY ) :
+									MassDesc( shapeDensity, rOffset, type ),
 							 		radius( radiusValue )
 			{}
 
@@ -140,8 +146,9 @@
 							real boxSizeY,
 							real boxSizeZ,
 							real shapeDensity,
-							const Vector3& rOffset = Vector3::kZero  ) :
-								MassDesc( shapeDensity, rOffset ),
+							const Vector3& rOffset = Vector3::kZero,
+							quantityType type = QT_DENSITY ) :
+								MassDesc( shapeDensity, rOffset, type ),
 								sizeX( boxSizeX ),
 								sizeY( boxSizeY ),
 								sizeZ( boxSizeZ )
@@ -157,8 +164,9 @@
 			CapsuleMassDesc(	real capRadius,
 								real capLength,
 								real shapeDensity,
-								const Vector3& rOffset = Vector3::kZero ) :
-									MassDesc( shapeDensity, rOffset ),
+								const Vector3& rOffset = Vector3::kZero,
+								quantityType type = QT_DENSITY ) :
+									MassDesc( shapeDensity, rOffset, type ),
 									radius( capRadius ),
 									length( capLength )
 			{}
@@ -172,8 +180,9 @@
 			CylinderMassDesc(	real cylRadius,
 								real cylLength,
 								real shapeDensity,
-								const Vector3& rOffset = Vector3::kZero ) :
-									MassDesc( shapeDensity, rOffset ),
+								const Vector3& rOffset = Vector3::kZero,
+								quantityType type = QT_DENSITY ) :
+									MassDesc( shapeDensity, rOffset, type ),
 									radius( cylRadius ),
 									length( cylLength )
 			{}
@@ -271,6 +280,7 @@
 		*/
 		virtual void addLocalTorque( const Vector3& rTorque ) = 0;
 	};
+	YAKE_PHYSICS_COMMON_POINTERS( IBody );
 
 }
 }

Modified: trunk/yake/yake/physics/yakePhysicsBodyGroup.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsBodyGroup.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakePhysicsBodyGroup.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -39,10 +39,10 @@
 
 	class IBody;
 
-	class BodyGroup
+	class YAKE_PHYSICS_API BodyGroup
 	{
 	public:
-        typedef Vector<SharedPtr<IBody> > BodyVector;
+        typedef Vector<IBodyPtr> BodyVector;
 		typedef BodyVector::iterator iterator;
 		typedef BodyVector::const_iterator const_iterator;
 		typedef BodyVector::value_type value_type;
@@ -52,8 +52,8 @@
 		BodyGroup();
 		~BodyGroup();
 
-		BodyGroup& operator += (SharedPtr<IBody> & rBody);
-		BodyGroup& operator -= (SharedPtr<IBody> & rBody);
+		BodyGroup& operator += (IBodyPtr rBody);
+		BodyGroup& operator -= (IBodyPtr rBody);
 
 		iterator begin();
 		const_iterator begin() const;

Modified: trunk/yake/yake/physics/yakePhysicsWorld.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsWorld.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/physics/yakePhysicsWorld.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -85,6 +85,7 @@
 
 		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(void), PreStep )
 		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(real), PostStep )
+		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(const real), PreStepInternal )
 	};
 
 }

Modified: trunk/yake/yake/plugins/physicsNX/yakeActorNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeActorNx.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/plugins/physicsNX/yakeActorNx.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -44,7 +44,7 @@
 
 		virtual IWorld* getCreator() const;
 
-		virtual IShape* createShape( const IShape::Desc & rkShapeDesc );
+		virtual IShape* createShape( const IShape::Desc & rkShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_DENSITY );
 		virtual void destroyShape( IShape* pShape );
 		virtual IShapePtrList getShapes() const;
 

Modified: trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -99,7 +99,7 @@
 		void regActor_(NxActor* pNxActor, ActorNx* pActor);
 		void unregActor_(NxActor* pNxActor);
 
-		YAKE_MEMBERSIGNAL( public, void(const real), PreStepInternal )
+		YAKE_MEMBERSIGNAL_VIRTUALIMPL( public, void(const real), PreStepInternal )
 		YAKE_MEMBERSIGNAL_FIRE_FN1( public, PreStepInternal, const real dt, dt )
 
 	private:

Modified: trunk/yake/yake/plugins/physicsODE/OdeActor.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -24,7 +24,7 @@
 		virtual Vector3 getPosition() const;
 		virtual Quaternion getOrientation() const;
 		
-		virtual IShape* createShape( const IShape::Desc& rShapeDesc );
+		virtual IShape* createShape( const IShape::Desc& rShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_DENSITY );
 		virtual void destroyShape( IShape* pShape );
 		virtual IShapePtrList getShapes() const;
 
@@ -43,6 +43,7 @@
 	protected:	
 		OdeGeom* createShapeFromDesc( const IShape::Desc& rShapeDesc );
 		OdeGeom* createTransformGeomIfNeeded( OdeGeom* pGeom, const Vector3& rOffset, const Quaternion& rRelOrientation );
+		IBody::MassDesc* createMassDescFromShapeDesc( const IShape::Desc& rShapeDesc, real massOrDensity, IBody::quantityType qType );
 
 		Vector3							mPosition;
 		Quaternion						mOrientation;

Modified: trunk/yake/yake/plugins/physicsODE/OdeJoint.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeJoint.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/plugins/physicsODE/OdeJoint.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -61,6 +61,11 @@
 			virtual void setBreakableTorque( real torque );
 			virtual void setConnectedBodiesCollide( bool enabled );
 		
+			virtual void setSpring(real);
+			virtual real getSpring() const;
+			virtual void setDamping(real);
+			virtual real getDamping() const;
+
 			YAKE_MEMBERSIGNAL_VIRTUALIMPL( public, void, OnBreaking )
 			YAKE_MEMBERSIGNAL_FIRE_FN0( public, OnBreaking )
 		protected:

Modified: trunk/yake/yake/plugins/physicsODE/OdeWorld.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-10-03 23:18:09 UTC (rev 986)
+++ trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-10-03 23:18:46 UTC (rev 987)
@@ -79,6 +79,8 @@
 			YAKE_MEMBERSIGNAL_FIRE_FN0( public, PreStep )
 			YAKE_MEMBERSIGNAL_VIRTUALIMPL( public, void, PostStep )
 			YAKE_MEMBERSIGNAL_FIRE_FN1( public, PostStep, real t, t )
+			YAKE_MEMBERSIGNAL_VIRTUALIMPL( public, void, PreStepInternal )
+			YAKE_MEMBERSIGNAL_FIRE_FN1( public, PreStepInternal, const real dt, dt )
 		public:
 
 			///TODO what are these for?



From codeandroid at berlios.de  Tue Oct  4 21:01:31 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 21:01:31 +0200
Subject: [Yake-svn] r988 - trunk/yake/yake/physics
Message-ID: <200510041901.j94J1Vfb022744@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 21:01:31 +0200 (Tue, 04 Oct 2005)
New Revision: 988

Modified:
   trunk/yake/yake/physics/yakePhysicsBody.h
Log:
modified default to QT_MASS

Modified: trunk/yake/yake/physics/yakePhysicsBody.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsBody.h	2005-10-03 23:18:46 UTC (rev 987)
+++ trunk/yake/yake/physics/yakePhysicsBody.h	2005-10-04 19:01:31 UTC (rev 988)
@@ -114,7 +114,7 @@
 
 		struct MassDesc
 		{
-			MassDesc( real massOrDensity, const Vector3& rOffset = Vector3::kZero, quantityType type = QT_DENSITY ) :
+			MassDesc( real massOrDensity, const Vector3& rOffset = Vector3::kZero, quantityType type = QT_MASS ) :
 					quantity( massOrDensity ),
 					offset( rOffset ),
 					qType( type )
@@ -132,7 +132,7 @@
 			SphereMassDesc(	real radiusValue,
 								real shapeDensity,
 								const Vector3& rOffset = Vector3::kZero,
-								quantityType type = QT_DENSITY ) :
+								quantityType type = QT_MASS ) :
 									MassDesc( shapeDensity, rOffset, type ),
 							 		radius( radiusValue )
 			{}
@@ -147,7 +147,7 @@
 							real boxSizeZ,
 							real shapeDensity,
 							const Vector3& rOffset = Vector3::kZero,
-							quantityType type = QT_DENSITY ) :
+							quantityType type = QT_MASS ) :
 								MassDesc( shapeDensity, rOffset, type ),
 								sizeX( boxSizeX ),
 								sizeY( boxSizeY ),
@@ -165,7 +165,7 @@
 								real capLength,
 								real shapeDensity,
 								const Vector3& rOffset = Vector3::kZero,
-								quantityType type = QT_DENSITY ) :
+								quantityType type = QT_MASS ) :
 									MassDesc( shapeDensity, rOffset, type ),
 									radius( capRadius ),
 									length( capLength )
@@ -181,7 +181,7 @@
 								real cylLength,
 								real shapeDensity,
 								const Vector3& rOffset = Vector3::kZero,
-								quantityType type = QT_DENSITY ) :
+								quantityType type = QT_MASS ) :
 									MassDesc( shapeDensity, rOffset, type ),
 									radius( cylRadius ),
 									length( cylLength )



From codeandroid at berlios.de  Tue Oct  4 21:01:59 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 21:01:59 +0200
Subject: [Yake-svn] r989 - trunk/yake/yake/physics
Message-ID: <200510041901.j94J1xb0022779@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 21:01:59 +0200 (Tue, 04 Oct 2005)
New Revision: 989

Modified:
   trunk/yake/yake/physics/yakePhysicsActor.h
Log:


Modified: trunk/yake/yake/physics/yakePhysicsActor.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsActor.h	2005-10-04 19:01:31 UTC (rev 988)
+++ trunk/yake/yake/physics/yakePhysicsActor.h	2005-10-04 19:01:59 UTC (rev 989)
@@ -78,7 +78,7 @@
 
 		virtual IWorld* getCreator() const = 0;
 
-		virtual IShape* createShape( const IShape::Desc& rShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_DENSITY ) = 0;
+		virtual IShape* createShape( const IShape::Desc& rShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_MASS ) = 0;
 		virtual void destroyShape( IShape* pShape ) = 0;
 		virtual IShapePtrList getShapes() const = 0;
 



From codeandroid at berlios.de  Tue Oct  4 21:02:17 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 21:02:17 +0200
Subject: [Yake-svn] r990 - trunk/yake/yake/plugins/physicsNX
Message-ID: <200510041902.j94J2HcG022842@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 21:02:17 +0200 (Tue, 04 Oct 2005)
New Revision: 990

Modified:
   trunk/yake/yake/plugins/physicsNX/yakeActorNx.h
Log:
modified default to QT_MASS

Modified: trunk/yake/yake/plugins/physicsNX/yakeActorNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeActorNx.h	2005-10-04 19:01:59 UTC (rev 989)
+++ trunk/yake/yake/plugins/physicsNX/yakeActorNx.h	2005-10-04 19:02:17 UTC (rev 990)
@@ -44,7 +44,7 @@
 
 		virtual IWorld* getCreator() const;
 
-		virtual IShape* createShape( const IShape::Desc & rkShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_DENSITY );
+		virtual IShape* createShape( const IShape::Desc & rkShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_MASS );
 		virtual void destroyShape( IShape* pShape );
 		virtual IShapePtrList getShapes() const;
 



From codeandroid at berlios.de  Tue Oct  4 21:02:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 21:02:45 +0200
Subject: [Yake-svn] r991 - trunk/yake/yake/plugins/physicsODE
Message-ID: <200510041902.j94J2j1T022884@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 21:02:45 +0200 (Tue, 04 Oct 2005)
New Revision: 991

Modified:
   trunk/yake/yake/plugins/physicsODE/OdeActor.h
   trunk/yake/yake/plugins/physicsODE/OdeBody.h
Log:
modified default to QT_MASS,
refactored setting masses

Modified: trunk/yake/yake/plugins/physicsODE/OdeActor.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-10-04 19:02:17 UTC (rev 990)
+++ trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-10-04 19:02:45 UTC (rev 991)
@@ -24,7 +24,7 @@
 		virtual Vector3 getPosition() const;
 		virtual Quaternion getOrientation() const;
 		
-		virtual IShape* createShape( const IShape::Desc& rShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_DENSITY );
+		virtual IShape* createShape( const IShape::Desc& rShapeDesc, real massOrDensity = 0.0f, IBody::quantityType type = IBody::QT_MASS );
 		virtual void destroyShape( IShape* pShape );
 		virtual IShapePtrList getShapes() const;
 
@@ -43,7 +43,6 @@
 	protected:	
 		OdeGeom* createShapeFromDesc( const IShape::Desc& rShapeDesc );
 		OdeGeom* createTransformGeomIfNeeded( OdeGeom* pGeom, const Vector3& rOffset, const Quaternion& rRelOrientation );
-		IBody::MassDesc* createMassDescFromShapeDesc( const IShape::Desc& rShapeDesc, real massOrDensity, IBody::quantityType qType );
 
 		Vector3							mPosition;
 		Quaternion						mOrientation;

Modified: trunk/yake/yake/plugins/physicsODE/OdeBody.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeBody.h	2005-10-04 19:02:17 UTC (rev 990)
+++ trunk/yake/yake/plugins/physicsODE/OdeBody.h	2005-10-04 19:02:45 UTC (rev 991)
@@ -85,6 +85,8 @@
 			dBody* _getOdeBody() const;
 			//OdeWorld* _getWorld() const;
 			//bool _isValid() const { return mValid; }*/
+
+			void _applyMassDescFromShapeDesc( const IShape::Desc& rShapeDesc, real massOrDensity, IBody::quantityType qType );
 		protected:
 			OdeWorld* 				mOdeWorld;
 			OdeActor&				mOwner;



From codeandroid at berlios.de  Tue Oct  4 21:03:01 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 21:03:01 +0200
Subject: [Yake-svn] r992 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200510041903.j94J31Qw022934@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 21:03:01 +0200 (Tue, 04 Oct 2005)
New Revision: 992

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
Log:
modified default to QT_MASS,
refactored setting masses

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-04 19:02:45 UTC (rev 991)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-04 19:03:01 UTC (rev 992)
@@ -175,31 +175,6 @@
 	}
 
 	//-----------------------------------------------------
-	IBody::MassDesc* OdeActor::createMassDescFromShapeDesc( IShape::Desc const& rShapeDesc, real massOrDensity, IBody::quantityType qType )
-	{
-		IShape::Desc* pShapeDesc = &const_cast<IShape::Desc&>( rShapeDesc );
-		IBody::MassDesc* result;
-		
-		if ( IShape::SphereDesc* pSphereDesc = dynamic_cast<IShape::SphereDesc*>( pShapeDesc ) )
-		{
-			result = new IBody::SphereMassDesc( pSphereDesc->radius, massOrDensity, pSphereDesc->position, qType );
-		}
-		else if ( IShape::BoxDesc* pBoxDesc = dynamic_cast<IShape::BoxDesc*>( pShapeDesc ) )
-		{
-			result = new IBody::BoxMassDesc( pBoxDesc->dimensions.x, pBoxDesc->dimensions.y, pBoxDesc->dimensions.z, massOrDensity,
-				pBoxDesc->position, qType );
-		}
-		else if ( IShape::CapsuleDesc* pCapsuleDesc = dynamic_cast<IShape::CapsuleDesc*>( pShapeDesc ) )
-		{
-			result = new IBody::CapsuleMassDesc( pCapsuleDesc->radius, pCapsuleDesc->height, massOrDensity, pCapsuleDesc->position, qType );
-		}
-
-		YAKE_ASSERT( result != 0 ).warning( "Unsupported shape type!" );
-
-		return result;
-	}
-
-	//-----------------------------------------------------
 	bool operator == (const SharedPtr<OdeGeom>& lhs, const OdeGeom* rhs)
 	{
 		return (lhs.get() == rhs);
@@ -406,10 +381,7 @@
 
 			if (massOrDensity)
 			{
-//@todo clean up! avoid new/delete either by using caches/pools or ...
-				IBody::MassDesc* desc = createMassDescFromShapeDesc( rShapeDesc, massOrDensity, type );
-				mBody->addMass( *desc );
-				delete desc;
+				mBody->_applyMassDescFromShapeDesc( rShapeDesc, massOrDensity, type );
 			}
 		}
 		

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-10-04 19:02:45 UTC (rev 991)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-10-04 19:03:01 UTC (rev 992)
@@ -143,6 +143,30 @@
 			dMassTranslate( mass, desc.offset.x, desc.offset.y, desc.offset.z );
 		}
 		
+		//-----------------------------------------------------
+		void OdeBody::_applyMassDescFromShapeDesc( IShape::Desc const& rShapeDesc, real massOrDensity, IBody::quantityType qType )
+		{
+			const IShape::Desc* pShapeDesc = &( rShapeDesc );
+			
+			if ( const IShape::SphereDesc* pSphereDesc = dynamic_cast<const IShape::SphereDesc*>( pShapeDesc ) )
+			{
+				this->addMass( IBody::SphereMassDesc( pSphereDesc->radius, massOrDensity, pSphereDesc->position, qType ) );
+			}
+			else if ( const IShape::BoxDesc* pBoxDesc = dynamic_cast<const IShape::BoxDesc*>( pShapeDesc ) )
+			{
+				this->addMass( IBody::BoxMassDesc( pBoxDesc->dimensions.x, pBoxDesc->dimensions.y, pBoxDesc->dimensions.z, massOrDensity,
+					pBoxDesc->position, qType ) );
+			}
+			else if ( const IShape::CapsuleDesc* pCapsuleDesc = dynamic_cast<const IShape::CapsuleDesc*>( pShapeDesc ) )
+			{
+				this->addMass( IBody::CapsuleMassDesc( pCapsuleDesc->radius, pCapsuleDesc->height, massOrDensity, pCapsuleDesc->position, qType ) );
+			}
+			else
+			{
+				YAKE_ASSERT( 1 == 0 ).warning( "Unsupported shape type!" );
+			}
+		}
+
 		//---------------------------------------------------
 		void OdeBody::setMass( const MassDesc& rDesc )
 		{



From codeandroid at berlios.de  Tue Oct  4 21:03:31 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 21:03:31 +0200
Subject: [Yake-svn] r993 - trunk/yake/src/yake/plugins/physicsNX
Message-ID: <200510041903.j94J3VBN023023@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 21:03:31 +0200 (Tue, 04 Oct 2005)
New Revision: 993

Modified:
   trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
Log:
fixed parameter to Nx function

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-10-04 19:03:01 UTC (rev 992)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-10-04 19:03:31 UTC (rev 993)
@@ -237,7 +237,7 @@
 			else
 			{
 				YAKE_LOG_WARNING( "Adding density in Novodex doesn't work very well." );
-				mpNxActor->updateMassFromShapes(  massOrDensity, 1.0f /*@fixme should be 0., not?*/ );
+				mpNxActor->updateMassFromShapes(  massOrDensity, 0.0f );
 			}
 		}
 



From codeandroid at berlios.de  Tue Oct  4 22:43:34 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 4 Oct 2005 22:43:34 +0200
Subject: [Yake-svn] r994 - trunk/yake/src/yake/samples/physics/demo
Message-ID: <200510042043.j94KhY1J004438@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-04 22:43:34 +0200 (Tue, 04 Oct 2005)
New Revision: 994

Modified:
   trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp
Log:
patch 1309131 (slightly modified)

Modified: trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp	2005-10-04 19:03:31 UTC (rev 993)
+++ trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp	2005-10-04 20:43:34 UTC (rev 994)
@@ -10,7 +10,7 @@
 class MiniApp
 {
 public:
-	MiniApp() {}
+	MiniApp() : mBouncyPhysicsMaterial1(0), mBouncyPhysicsMaterial2(0) {}
 	~MiniApp() {}
 
 	void init();



From codeandroid at berlios.de  Thu Oct  6 19:34:56 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 6 Oct 2005 19:34:56 +0200
Subject: [Yake-svn] r995 - trunk/yake/yapp/vehicle
Message-ID: <200510061734.j96HYupI029688@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-06 19:34:54 +0200 (Thu, 06 Oct 2005)
New Revision: 995

Added:
   trunk/yake/yapp/vehicle/yakeMountPoint.h
   trunk/yake/yapp/vehicle/yakeTemplates.h
   trunk/yake/yapp/vehicle/yakeVehicleSystem.h
Modified:
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeVehicle.h
Log:
slight reorganization

Modified: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-04 20:43:34 UTC (rev 994)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-06 17:34:54 UTC (rev 995)
@@ -28,219 +28,21 @@
 #define YAKE_VEHICLE_INTERFACES_H
 
 #include "yakePrerequisites.h"
+#include "yakeTemplates.h"
 
 namespace yake {
 namespace vehicle {
 
-	const size_t MPID_NO_PARENT = 0xffffffff;
-	struct VehicleTemplate
-	{
-		struct MountPointTpl
-		{
-			Vector3		mPosition;
-			Quaternion	mOrientation;
-			Vector3		mDirection;
-			size_t		mParentMountPointIdx;
-			bool		mUseDirection;
-			MountPointTpl(
-				const Vector3& pos = Vector3::kZero,
-				const Quaternion rot = Quaternion::kIdentity,
-				size_t parentMountPoint = MPID_NO_PARENT) :
-				mPosition(pos),
-				mOrientation(rot),
-				mParentMountPointIdx(parentMountPoint),
-				mUseDirection(false)
-			{}
-			MountPointTpl(
-				const Vector3& pos,
-				const Vector3& dir,
-				size_t parentMountPoint = MPID_NO_PARENT) :
-				mPosition(pos),
-				mDirection(dir),
-				mParentMountPointIdx(parentMountPoint),
-				mUseDirection(true)
-			{}
-		};
-		typedef Deque< MountPointTpl > MountPointTplList;
-		enum GearMode
-		{
-			GM_FORWARD,
-			GM_NEUTRAL,
-			GM_REVERSE
-		};
-		struct GearTpl
-		{
-			real				ratio_;
-			GearMode			mode_;
-			GearTpl() : ratio_(1.), mode_(GM_FORWARD) {}
-		};
-		typedef Vector<GearTpl> GearTplList;
-		struct EngineTpl
-		{
-			virtual ~EngineTpl() {}
-		};
-		struct ThrusterTpl : public EngineTpl
-		{
-			real				minForce;
-			real				maxForce;
-			size_t				mountPtIdx;
-			ThrusterTpl(real minF = 0., real maxF = 1., size_t mtPt = 0) : minForce(minF), maxForce(maxF), mountPtIdx(mtPt) {}
-		};
-		struct CarEngineTpl : public EngineTpl
-		{
-			real				rpmMin_;
-			real				rpmMax_;
-			real				rpmRedline_;
-			real				rpmDieOff_;
-			real				rpmRise_;
-			real				minShiftingTime_;
-			GearTplList			gears_;
-			//Curve*			torqueCurve_;
-			real				differentialRatio;
-			CarEngineTpl() :
-				rpmMin_(0.),
-				rpmMax_(8000.),
-				rpmRedline_(6000.),
-				rpmDieOff_(800.),
-				rpmRise_(2000.),
-				minShiftingTime_(0.15),
-				differentialRatio(3.14)
-			{}
-		};
-
-		typedef Deque<EngineTpl*> EngineTplList;
-
-		typedef Deque<physics::IShape::Desc*> ShapeTplList;
-
-		struct ChassisTpl
-		{
-			Vector3			mPosition; // initial position
-			real			mMass;
-			ShapeTplList	mChassisShapes;
-			String			mGfxReference; // e.g. dotScene file
-			ChassisTpl() : 
-				mPosition(Vector3::kZero),
-				mMass(1.6)
-			{}
-		};
-
-		struct WheelTpl
-		{
-			Vector3			mPosition;
-			Quaternion		mOrientation;
-			uint32			mSteeringGroup;
-			real			mRadius;
-			real			mMass;
-			bool			mMassRelativeToChassis;
-			real			mSuspensionSpring;
-			real			mSuspensionDamping;
-			String			mGfxReference; // e.g. dotScene file
-			String			mGfxReferenceType; // e.g. "dotscene"
-			WheelTpl() :
-				mPosition(Vector3::kZero),
-				mOrientation(Quaternion::kIdentity),
-				mSteeringGroup(0),
-				mRadius(0.8),
-				mMass(0.015),
-				mMassRelativeToChassis(true),
-				mSuspensionSpring(1),
-				mSuspensionDamping(0.9)
-			{}
-		};
-
-		typedef Deque< WheelTpl > WheelTplList;
-
-		//
-
-		ChassisTpl		mChassis;
-		MountPointTplList	mMountPoints;
-		EngineTplList	mEngines;
-		uint32			mSteeringGroups;
-		WheelTplList	mWheels;
-
-		VehicleTemplate() : mSteeringGroups(0)
-		{}
-		~VehicleTemplate()
-		{
-			ConstVectorIterator< EngineTplList > itEngine( mEngines );
-			while (itEngine.hasMoreElements())
-				delete itEngine.getNext();
-			mEngines.clear();
-			ConstVectorIterator< ShapeTplList > itShape( mChassis.mChassisShapes );
-			while (itShape.hasMoreElements())
-				delete itShape.getNext();
-			mChassis.mChassisShapes.clear();
-		}
-	};
-
-	/** Base class for objects that can be attached to mount points (MountPoint).
-		@see MountPoint
-	*/
-	class YAKE_VEH_API Mountable
-	{
-		friend class MountPoint;
-	protected:
-		virtual ~Mountable();
-		Mountable();
-	public:
-		MountPoint* getMountPoint() const;
-	protected:
-		void onAttached( MountPoint* mountpoint );
-		void onDetached();
-	private:
-		MountPoint*	mPt;
-	};
-
-	/** Base class for mount points. Mountable objects can be attached to it.
-		@see Mountable
-	*/
-	class YAKE_VEH_API MountPoint : public Mountable, public Movable
-	{
-	public:
-		MountPoint();
-		virtual ~MountPoint();
-
-		void setParent(MountPoint*);
-		void setOverrideParentMovable(Movable*);
-
-		void addChild(MountPoint*,bool transferOwnership = true);
-		MountPoint* createChild() const;
-
-		virtual bool isSuitableFor( const Mountable* mountable ) const;
-		void attach( Mountable* mountable );
-		void detach( Mountable* mountable );
-		void setDirection( const Vector3& dir );
-		Vector3 getDirection() const;
-		virtual void setOrientation( const Quaternion& );
-		virtual Quaternion getOrientation() const;
-		virtual void setPosition(const Vector3& rPosition );
-		virtual Vector3 getPosition() const;
-		Vector3 getDerivedPosition() const;
-		Quaternion getDerivedOrientation() const;
-		void lookAt(const Vector3&);
-	private:
-		typedef Deque< Mountable* > MountablePtrList;
-		MountablePtrList	mMountables;
-		Quaternion			mOrientation;
-		Vector3				mPosition;
-		typedef Deque< std::pair<MountPoint*,bool> > MountPointList;
-		MountPointList		mChildren;
-		MountPoint*			mParent;
-		Movable*			mOverrideParent;
-	};
-
-	class IVehicle;
-	class YAKE_VEH_API IVehicleSystem
-	{
-		YAKE_DECLARE_REGISTRY_0(IVehicleSystem,String);
-	public:
-		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld) = 0;
-	};
-
 	class IEngine;
 	class IWheel;
+	class MountPoint;
+	class Mountable;
 	class YAKE_VEH_API IVehicle
 	{
+		IVehicle(const IVehicle&);
+		IVehicle& operator=(const IVehicle&);
+	protected:
+		IVehicle() {}
 	public:
 		virtual ~IVehicle() {}
 

Added: trunk/yake/yapp/vehicle/yakeMountPoint.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeMountPoint.h	2005-10-04 20:43:34 UTC (rev 994)
+++ trunk/yake/yapp/vehicle/yakeMountPoint.h	2005-10-06 17:34:54 UTC (rev 995)
@@ -0,0 +1,99 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_MOUNTPOINT_H
+#define YAKE_VEHICLE_MOUNTPOINT_H
+
+#include "yakePrerequisites.h"
+
+namespace yake {
+namespace vehicle {
+
+	/** Base class for objects that can be attached to mount points (MountPoint).
+		@see MountPoint
+	*/
+	class YAKE_VEH_API Mountable
+	{
+		friend class MountPoint;
+		Mountable(const Mountable&);
+		Mountable& operator=(const Mountable&);
+	protected:
+		virtual ~Mountable();
+		Mountable();
+	public:
+		MountPoint* getMountPoint() const;
+	protected:
+		void onAttached( MountPoint* mountpoint );
+		void onDetached();
+	private:
+		MountPoint*	mPt;
+	};
+
+	/** Base class for mount points. Mountable objects can be attached to it.
+		@see Mountable
+	*/
+	class YAKE_VEH_API MountPoint : public Mountable, public Movable
+	{
+		MountPoint(const MountPoint&);
+		MountPoint& operator=(const MountPoint&);
+	public:
+		MountPoint();
+		virtual ~MountPoint();
+
+		void setParent(MountPoint*);
+		void setOverrideParentMovable(Movable*);
+
+		void addChild(MountPoint*,bool transferOwnership = true);
+		MountPoint* createChild() const;
+
+		virtual bool isSuitableFor( const Mountable* mountable ) const;
+		void attach( Mountable* mountable );
+		void detach( Mountable* mountable );
+		void setDirection( const Vector3& dir );
+		Vector3 getDirection() const;
+		virtual void setOrientation( const Quaternion& );
+		virtual Quaternion getOrientation() const;
+		virtual void setPosition(const Vector3& rPosition );
+		virtual Vector3 getPosition() const;
+		Vector3 getDerivedPosition() const;
+		Quaternion getDerivedOrientation() const;
+		void lookAt(const Vector3&);
+	private:
+		typedef Deque< Mountable* > MountablePtrList;
+		MountablePtrList	mMountables;
+		Quaternion			mOrientation;
+		Vector3				mPosition;
+		typedef Deque< std::pair<MountPoint*,bool> > MountPointList;
+		MountPointList		mChildren;
+		MountPoint*			mParent;
+		Movable*			mOverrideParent;
+	};
+
+} // namespace vehicle
+} // namespace yake
+
+
+#endif

Added: trunk/yake/yapp/vehicle/yakeTemplates.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-04 20:43:34 UTC (rev 994)
+++ trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-06 17:34:54 UTC (rev 995)
@@ -0,0 +1,180 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_TEMPLATES_H
+#define YAKE_VEHICLE_TEMPLATES_H
+
+#include "yakePrerequisites.h"
+
+namespace yake {
+namespace vehicle {
+
+	const size_t MPID_NO_PARENT = 0xffffffff;
+	struct VehicleTemplate
+	{
+		struct MountPointTpl
+		{
+			Vector3		mPosition;
+			Quaternion	mOrientation;
+			Vector3		mDirection;
+			size_t		mParentMountPointIdx;
+			bool		mUseDirection;
+			MountPointTpl(
+				const Vector3& pos = Vector3::kZero,
+				const Quaternion rot = Quaternion::kIdentity,
+				size_t parentMountPoint = MPID_NO_PARENT) :
+				mPosition(pos),
+				mOrientation(rot),
+				mParentMountPointIdx(parentMountPoint),
+				mUseDirection(false)
+			{}
+			MountPointTpl(
+				const Vector3& pos,
+				const Vector3& dir,
+				size_t parentMountPoint = MPID_NO_PARENT) :
+				mPosition(pos),
+				mDirection(dir),
+				mParentMountPointIdx(parentMountPoint),
+				mUseDirection(true)
+			{}
+		};
+		typedef Deque< MountPointTpl > MountPointTplList;
+		enum GearMode
+		{
+			GM_FORWARD,
+			GM_NEUTRAL,
+			GM_REVERSE
+		};
+		struct GearTpl
+		{
+			real				ratio_;
+			GearMode			mode_;
+			GearTpl() : ratio_(1.), mode_(GM_FORWARD) {}
+		};
+		typedef Vector<GearTpl> GearTplList;
+		struct EngineTpl
+		{
+			virtual ~EngineTpl() {}
+		};
+		struct ThrusterTpl : public EngineTpl
+		{
+			real				minForce;
+			real				maxForce;
+			size_t				mountPtIdx;
+			ThrusterTpl(real minF = 0., real maxF = 1., size_t mtPt = 0) : minForce(minF), maxForce(maxF), mountPtIdx(mtPt) {}
+		};
+		struct CarEngineTpl : public EngineTpl
+		{
+			real				rpmMin_;
+			real				rpmMax_;
+			real				rpmRedline_;
+			real				rpmDieOff_;
+			real				rpmRise_;
+			real				minShiftingTime_;
+			GearTplList			gears_;
+			//Curve*			torqueCurve_;
+			real				differentialRatio;
+			CarEngineTpl() :
+				rpmMin_(real(0.)),
+				rpmMax_(real(8000.)),
+				rpmRedline_(real(6000.)),
+				rpmDieOff_(real(800.)),
+				rpmRise_(real(2000.)),
+				minShiftingTime_(real(0.15)),
+				differentialRatio(real(3.14))
+			{}
+		};
+
+		typedef Deque<EngineTpl*> EngineTplList;
+
+		typedef Deque<physics::IShape::Desc*> ShapeTplList;
+
+		struct ChassisTpl
+		{
+			Vector3			mPosition; // initial position
+			real			mMass;
+			ShapeTplList	mChassisShapes;
+			String			mGfxReference; // e.g. dotScene file
+			ChassisTpl() : 
+				mPosition(Vector3::kZero),
+				mMass(real(1.6))
+			{}
+		};
+
+		struct WheelTpl
+		{
+			Vector3			mPosition;
+			Quaternion		mOrientation;
+			uint32			mSteeringGroup;
+			real			mRadius;
+			real			mMass;
+			bool			mMassRelativeToChassis;
+			real			mSuspensionSpring;
+			real			mSuspensionDamping;
+			String			mGfxReference; // e.g. dotScene file
+			String			mGfxReferenceType; // e.g. "dotscene"
+			WheelTpl() :
+				mPosition(Vector3::kZero),
+				mOrientation(Quaternion::kIdentity),
+				mSteeringGroup(0),
+				mRadius(real(0.8)),
+				mMass(real(0.015)),
+				mMassRelativeToChassis(true),
+				mSuspensionSpring(real(1)),
+				mSuspensionDamping(real(0.9))
+			{}
+		};
+
+		typedef Deque< WheelTpl > WheelTplList;
+
+		//
+
+		ChassisTpl		mChassis;
+		MountPointTplList	mMountPoints;
+		EngineTplList	mEngines;
+		uint32			mSteeringGroups;
+		WheelTplList	mWheels;
+
+		VehicleTemplate() : mSteeringGroups(0)
+		{}
+		~VehicleTemplate()
+		{
+			ConstVectorIterator< EngineTplList > itEngine( mEngines );
+			while (itEngine.hasMoreElements())
+				delete itEngine.getNext();
+			mEngines.clear();
+			ConstVectorIterator< ShapeTplList > itShape( mChassis.mChassisShapes );
+			while (itShape.hasMoreElements())
+				delete itShape.getNext();
+			mChassis.mChassisShapes.clear();
+		}
+	};
+
+} // namespace vehicle
+} // namespace yake
+
+
+#endif

Modified: trunk/yake/yapp/vehicle/yakeVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeVehicle.h	2005-10-04 20:43:34 UTC (rev 994)
+++ trunk/yake/yapp/vehicle/yakeVehicle.h	2005-10-06 17:34:54 UTC (rev 995)
@@ -35,6 +35,9 @@
 
 #include <yake/base/yake.h>
 #include <yapp/base/yapp.h>
+#include <yapp/vehicle/yakeTemplates.h>
+#include <yapp/vehicle/yakeMountPoint.h>
 #include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeVehicleSystem.h>
 
 #endif

Added: trunk/yake/yapp/vehicle/yakeVehicleSystem.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeVehicleSystem.h	2005-10-04 20:43:34 UTC (rev 994)
+++ trunk/yake/yapp/vehicle/yakeVehicleSystem.h	2005-10-06 17:34:54 UTC (rev 995)
@@ -0,0 +1,47 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_SYSTEM_H
+#define YAKE_VEHICLE_SYSTEM_H
+
+#include "yakePrerequisites.h"
+
+namespace yake {
+namespace vehicle {
+
+	class IVehicle;
+	class YAKE_VEH_API IVehicleSystem
+	{
+		YAKE_DECLARE_REGISTRY_0(IVehicleSystem,String);
+	public:
+		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld) = 0;
+	};
+
+} // namespace vehicle
+} // namespace yake
+
+
+#endif



From codeandroid at berlios.de  Thu Oct  6 20:10:34 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 6 Oct 2005 20:10:34 +0200
Subject: [Yake-svn] r997 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200510061810.j96IAYi5031990@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-06 20:10:33 +0200 (Thu, 06 Oct 2005)
New Revision: 997

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
Log:
fixed destruction order (e.g. ode bodies were destroyed *after* ode worlds had destroyed them already!)

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-06 18:03:10 UTC (rev 996)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-06 18:10:33 UTC (rev 997)
@@ -69,6 +69,12 @@
 		//-----------------------------------------------------
  		OdeWorld::~OdeWorld()
  		{
+			mAvatars.clear();
+			mActors.clear();
+			mJoints.clear();
+			mMaterials.clear();
+			mBodies.clear();
+
 			for ( MeshDataMap::iterator i = mMeshDataMap.begin(); i != mMeshDataMap.end(); ++i )
 			{
 				OdeTriMesh::MeshData mesh_data = i->second;



From codeandroid at berlios.de  Thu Oct  6 20:03:24 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 6 Oct 2005 20:03:24 +0200
Subject: [Yake-svn] r996 - in trunk/yake: . src/yake/base/native/Linux src/yake/physics src/yake/plugins/graphicsOgre src/yake/samples/graphics/demo src/yapp src/yapp/loader src/yapp/model src/yapp/samples src/yapp/samples/base src/yapp/samples/base/vehicle src/yapp/samples/model/dotLink src/yapp/vehicle yake/base yake/base/prerequisites yake/base/templates yapp/loader
Message-ID: <200510061803.j96I3OmY022453@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-06 20:03:10 +0200 (Thu, 06 Oct 2005)
New Revision: 996

Modified:
   trunk/yake/autogen.sh
   trunk/yake/buildspec.xml
   trunk/yake/src/yake/base/native/Linux/yakeDebug.cpp
   trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp
   trunk/yake/src/yake/samples/graphics/demo/yakeGraphicsDemo.cpp
   trunk/yake/src/yapp/Makefile.am
   trunk/yake/src/yapp/loader/yakeXODEParser.cpp
   trunk/yake/src/yapp/model/Makefile.am
   trunk/yake/src/yapp/model/yakePhysical.cpp
   trunk/yake/src/yapp/samples/Makefile.am
   trunk/yake/src/yapp/samples/base/Makefile.am
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
   trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp
   trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
   trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
   trunk/yake/src/yapp/vehicle/yakeVehicle.cpp
   trunk/yake/yake/base/Makefile.am
   trunk/yake/yake/base/prerequisites/yakePrerequisitesGCC.h
   trunk/yake/yake/base/templates/yakeAlgorithms.h
   trunk/yake/yake/base/templates/yakeManager.h
   trunk/yake/yake/base/yakeDebugLogAppender.h
   trunk/yake/yapp/loader/yakeXODEParser.h
Log:
patch 1312759 by mj,
a few fixes by psy

Modified: trunk/yake/autogen.sh
===================================================================
--- trunk/yake/autogen.sh	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/autogen.sh	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,8 +1,8 @@
 #!/bin/bash
 
 libtoolize --force --copy
+aclocal
 autoheader
-aclocal
 automake -a
 autoconf
 

Modified: trunk/yake/buildspec.xml
===================================================================
--- trunk/yake/buildspec.xml	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/buildspec.xml	2005-10-06 18:03:10 UTC (rev 996)
@@ -12,6 +12,7 @@
 			<include>dependencies/OGRE</include>
 			<include>dependencies/ode/include</include>
 			<include>dependencies/luabind</include>
+			<include>/usr/local/include/CEGUI</include>
 	</Common>
 
 	<!-- One can define lists of strings to be used later  -->
@@ -27,6 +28,7 @@
 	
 	</BuildSharedLibrary>
 
+	<!-- YAKE core libraries... -->
 	<BuildSharedLibrary
 		name="yakeTemplates"
 		src="src/yake/base/templates"
@@ -99,7 +101,15 @@
                 <libadd>yakeBase</libadd>
         </BuildSharedLibrary>
 
+        <BuildSharedLibrary
+                name="yakeThread"
+                src="src/yake/thread"
+        >
+                <libadd>yakeBase</libadd>
+		<libadd>ZThread</libadd>
+        </BuildSharedLibrary>
 
+
 <!--
 	<BuildSharedLibrary
 		name="yakeRx"
@@ -132,7 +142,7 @@
 		<libadd>yakeInput</libadd>
 		<libadd>OgreMain</libadd>
 	</BuildSharedLibrary>
-<!--
+
 	<BuildSharedLibrary
 		name="yakephysicsODE"
 		src="src/yake/plugins/physicsODE"
@@ -140,16 +150,18 @@
 		<libadd>yakePhysics</libadd>
 		<libadd>ode</libadd>
 	</BuildSharedLibrary>
--->
+
 	<BuildSharedLibrary
 		name="yakescriptingLua"
 		src="src/yake/plugins/scriptingLua"
 	>
 		<libadd>yakeBase</libadd>
+		<libadd>luabind</libadd>
 		<libadd>lualib</libadd>
 		<libadd>lua</libadd>
 	</BuildSharedLibrary>
 
+	<!-- TODO Rename this thing? --> 
 	<BuildSharedLibrary
 		name="yakescriptingBindingsLua"
 		src="src/yake/plugins/scriptingLuaBindings"
@@ -158,13 +170,34 @@
 		<libadd>luabind</libadd>
 		<libadd>lualib</libadd>
 		<libadd>lua</libadd>
-
 	</BuildSharedLibrary>
 
 	<BuildSharedLibrary
 		name="yakegraphicsLuaBindings"
+		src="src/yake/plugins/graphicsLuaBindings"
+	>
+		<libadd>yakeBase</libadd>
+		<libadd>luabind</libadd>
+		<libadd>lualib</libadd>
+		<libadd>lua</libadd>
+	</BuildSharedLibrary>
 
 	<BuildSharedLibrary
+		name="yakebaseLuaBindings"
+		src="src/yake/plugins/baseLuaBindings"
+	>
+		<libadd>yakeBase</libadd>
+		<libadd>luabind</libadd>
+		<libadd>lualib</libadd>
+		<libadd>lua</libadd>
+	</BuildSharedLibrary>
+
+<!--
+	*********************************************
+	*  YAPP                                     *
+	*********************************************
+-->
+	<BuildSharedLibrary
 		name="yappEvents"
 		src="src/yapp/base/event"
 	/>
@@ -192,7 +225,69 @@
 		<libadd>yappLoader</libadd>
 	</BuildSharedLibrary>
 
+	<BuildSharedLibrary
+		name="yappStatemachine"	
+		src="src/yapp/statemachine"
+	>
+		<libadd>yappBase</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yappMsg"	
+		src="src/yapp/msg"
+	>
+		<libadd>yappBase</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yappEnt"	
+		src="src/yapp/ent"
+	>
+		<libadd>yappBase</libadd>
+		<libadd>yappStatemachine</libadd>
+		<libadd>yappMsg</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yappVehicle"	
+		src="src/yapp/vehicle"
+	>
+		<libadd>yappBase</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yappraf"	
+		src="src/yapp/raf"
+	>
+		<libadd>yappBase</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yakeCEGUIOgreAdapter"
+		src="src/yapp/plugins/ceguiOgreRendererAdapter"
+	>
+		<libadd>CEGUIBase</libadd>
+		<libadd>OgreMain</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yappEntLua"
+		src="src/yapp/plugins/entLua"
+	>
+		<libadd>yappEnt</libadd>
+	</BuildSharedLibrary>
+
+	<BuildSharedLibrary
+		name="yappmodelLuaBindings"
+		src="src/yapp/plugins/modelLuaBindings"
+	>
+		<libadd>yappEnt</libadd>
+	</BuildSharedLibrary>
+
+<!-- SAMPLES -->
+
 	<List name="common_libs">
+		<item>yakeBase</item>
 		<item>yakeAudio</item>
 		<item>yakeGraphics</item>
 		<item>yakeInput</item>
@@ -236,11 +331,34 @@
 		name="dotLinkLoaderDemo"
 		src="src/yapp/samples/model/dotLink"
 	>
-
 		<libadd>common_libs</libadd>
 		<libadd>yappModel</libadd>
 		<libadd>yappLoader</libadd>
 	</BuildProgram>
 
+	<BuildProgram
+		name="VehicleDemo"
+		src="src/yapp/samples/base/vehicle"
+	>
+		<libadd>common_libs</libadd>	
+		<libadd>yappModel</libadd>	
+		<libadd>yappStatemachine</libadd>	
+		<libadd>yappVehicle</libadd>	
+		<libadd>yappraf</libadd>
+	</BuildProgram>	
+
+	<BuildProgram
+		name="consoleDemo"
+		src="src/yapp/samples/gui/console"
+	>
+		<libadd>common_libs</libadd>
+		<libadd>yakeCEGUIOgreAdapter</libadd>
+		<libadd>lua</libadd>
+		<libadd>lualib</libadd>
+		<libadd>luabind</libadd>
+		<libadd>CEGUIOgreRenderer</libadd>
+	</BuildProgram>
+		
+
 </BuildSpec>
 

Modified: trunk/yake/src/yake/base/native/Linux/yakeDebug.cpp
===================================================================
--- trunk/yake/src/yake/base/native/Linux/yakeDebug.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yake/base/native/Linux/yakeDebug.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -88,6 +88,7 @@
 						int nLine,
 						bool& rbIgnoreAlways )
 {
+	return false;
 }
 
 } // native

Modified: trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp
===================================================================
--- trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yake/physics/yakePhysicsAffectorZone.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -72,7 +72,7 @@
 
 	AffectorZoneManager::AffectorZoneManager(SharedPtr<physics::IWorld>& pWorld) : mWorld(pWorld)
 	{
-		mStepSigConn = mWorld->subscribeToPreStepInternal( boost::bind(AffectorZoneManager::update, this, _1) );
+		mStepSigConn = mWorld->subscribeToPreStepInternal( boost::bind(&AffectorZoneManager::update, this, _1) );
 	}
 
 	AffectorZoneManager::~AffectorZoneManager()

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -207,7 +207,12 @@
 	Matrix4 OgreCamera::getProjectionMatrix() const
 	{
 		YAKE_ASSERT( mCam ).debug("need a camera!");
+// for Ogre 1.1.0 "Dagon" compatibility
+#if OGRE_VERSION_MINOR >= 1 
+		return MATRIX4_OGRE2YAKE( mCam->getProjectionMatrix() );
+#else
 		return MATRIX4_OGRE2YAKE( mCam->getStandardProjectionMatrix() );
+#endif
 	}
 
 	//------------------------------------------------------

Modified: trunk/yake/src/yake/samples/graphics/demo/yakeGraphicsDemo.cpp
===================================================================
--- trunk/yake/src/yake/samples/graphics/demo/yakeGraphicsDemo.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yake/samples/graphics/demo/yakeGraphicsDemo.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -415,7 +415,7 @@
 		theApp.initialise();
 		theApp.run();
 	}
-	catch (const yake::Exception & e)
+	catch ( const yake::Exception& e )
 	{
 		std::cout << std::endl << e.what() << std::endl;
 	}

Modified: trunk/yake/src/yapp/Makefile.am
===================================================================
--- trunk/yake/src/yapp/Makefile.am	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/Makefile.am	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,3 +1,4 @@
 INCLUDES = $(all_includes)
 METASOURCES = AUTO
-SUBDIRS = base loader model statemachine ent gui msg plugins samples raf
+SUBDIRS = base loader model statemachine gui msg ent vehicle raf plugins \
+	samples

Modified: trunk/yake/src/yapp/loader/yakeXODEParser.cpp
===================================================================
--- trunk/yake/src/yapp/loader/yakeXODEParser.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/loader/yakeXODEParser.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -8,11 +8,11 @@
    the terms of the GNU Lesser General Public License as published by the Free Software
    Foundation; either version 2 of the License, or (at your option) any later
    version.
-
+ 
    This program is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
+ 
    You should have received a copy of the GNU Lesser General Public License along with
    this program; if not, write to the Free Software Foundation, Inc., 59 Temple
    Place - Suite 330, Boston, MA 02111-1307, USA, or go to
@@ -29,67 +29,71 @@
 #include <yapp/base/yapp.h>
 #include <yapp/loader/yakeXODEParser.h>
 
-namespace yake {
-namespace data {
-namespace parser {
-namespace xode {
-	
+namespace yake
+{
+namespace data
+{
+namespace parser
+{
+namespace xode
+{
 	//------------------------------------------------------
 	XODEParser::XODEParser( model::Physical& rBaseModel ) : mBaseModel( rBaseModel )
-	{
-	}
-
+	{}
+	
 	//------------------------------------------------------
-	bool XODEParser::load( const SharedPtr<dom::INode> docNode, physics::IWorld* pPWorld )
+	bool XODEParser::load(  const NodeSharedPtr docNode, physics::IWorld* pPWorld )
 	{
-		std::cout << "load()" << std::endl;
-		
+		YAKE_LOG( "load()" );
+	
 		YAKE_ASSERT( docNode.get() );
 		YAKE_ASSERT( pPWorld );
-		
+	
 		mDocNode = docNode;
 		mPWorld = pPWorld;
-		
+	
 		/// clearing out...
 		mJointDescriptions.clear();
-		
-		std::cout << "parsing xode..." << std::endl;
-		
+	
+		YAKE_LOG( "*******************" );
+		YAKE_LOG( "* Parsing xode... *" );
+		YAKE_LOG( "*******************" );
+	
 		readXODE( mDocNode );
 	
 		return true;
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readXODE( const SharedPtr<dom::INode> pNode )
+	void XODEParser::readXODE( const NodeSharedPtr pNode )
 	{
 		YAKE_ASSERT( pNode );
-		
+	
 		const String name = pNode->getAttributeValueAs<String>( "name" );
-		std::cout << "readXODE() [" << name << "]" << std::endl;
-		
+		YAKE_LOG( "readXODE() [" + name + "]" );
+	
 		// Assuming single world in .xode
-		SharedPtr<dom::INode> pWorldNode = pNode->getNodeByName( "world" );
- 		YAKE_ASSERT( pWorldNode );
-				
-		std::cout << "xode: found world = " << ( pWorldNode.get() ? "yes!" : "no :(" ) << std::endl;
-		
+		NodeSharedPtr pWorldNode = pNode->getNodeByName( "world" );
+		YAKE_ASSERT( pWorldNode );
+	
+		YAKE_LOG( "xode: found world = " + String( pWorldNode.get() ? "yes!" : "no :(" ) );
+	
 		readWorld( pWorldNode );
-		
+	
 		createJointsFromDescriptions();
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readWorld( const SharedPtr<dom::INode> pWorldNode )
+	void XODEParser::readWorld( const NodeSharedPtr pWorldNode )
 	{
 		YAKE_ASSERT( pWorldNode );
-		
+	
 		// Assuming single space in <world>
-		SharedPtr<dom::INode> pSpaceNode = pWorldNode->getNodeByName( "space" );
- 		YAKE_ASSERT( pSpaceNode );
-				
-		std::cout << "xode::world: found space = " << ( pSpaceNode.get() ? "yes!" : "no :(" ) << std::endl;
-		
+		NodeSharedPtr pSpaceNode = pWorldNode->getNodeByName( "space" );
+		YAKE_ASSERT( pSpaceNode );
+	
+		YAKE_LOG( "xode::world: found space = " + String( pSpaceNode.get() ? "yes!" : "no :(" ) );
+	
 		readSpace( pSpaceNode );
 	}
 	
@@ -98,18 +102,18 @@
 	{
 		mDocNode.reset();
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readSpace( const SharedPtr<dom::INode> pSpaceNode )
+	void XODEParser::readSpace( const NodeSharedPtr pSpaceNode )
 	{
-		std::cout << "readSpace()" << std::endl;
-			
+		YAKE_LOG( "readSpace()" );
+	
 		const dom::NodeList& nodes = pSpaceNode->getNodes();
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				yake::StringUtil::toLowerCase( (*it)->getName() );
-			
+	
 			if ( nodeName == "body" )
 			{
 				readBody( *it );
@@ -124,90 +128,89 @@
 			}
 		}
 	}
-
+	
 	/// Utility functor for use with std::find_if
 	//------------------------------------------------------
-	class NodeHunter : public std::unary_function<SharedPtr<dom::INode>&,bool>
+	class NodeHunter : public std::unary_function<XODEParser::NodeSharedPtr&,bool>
 	{
 	public:
 		NodeHunter( String const& rNodeName ):mNodeName( rNodeName )
+		{}
+	
+		bool operator()( const XODEParser::NodeSharedPtr& pNode )
 		{
+			return pNode->getName() == mNodeName;
 		}
-		
-		bool operator()( SharedPtr<dom::INode>const& pNode )
-		{
-			return pNode->getName() == mNodeName; 
-		}
-		
+	
 	private:
 		String mNodeName;
-	}; 
+	};
 	
 	//------------------------------------------------------
-	void XODEParser::readVector3( const SharedPtr<dom::INode> pVecNode, Vector3& rVec )
+	void XODEParser::readVector3( const NodeSharedPtr pVecNode, Vector3& rVec )
 	{
 		real x = StringUtil::parseReal( pVecNode->getAttributeValueAs<String>( "x" ) );
 		real y = StringUtil::parseReal( pVecNode->getAttributeValueAs<String>( "y" ) );
 		real z = StringUtil::parseReal( pVecNode->getAttributeValueAs<String>( "z" ) );
-		
+	
 		rVec = Vector3( x, y, z );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readScale( const SharedPtr<dom::INode> pScaleNode, Vector3& rScale )
+	void XODEParser::readScale( const NodeSharedPtr pScaleNode, Vector3& rScale )
 	{
 		readVector3( pScaleNode, rScale );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readPosition( const SharedPtr<dom::INode> pPosNode, Vector3& rPos )
+	void XODEParser::readPosition( const NodeSharedPtr pPosNode, Vector3& rPos )
 	{
 		readVector3( pPosNode, rPos );
 	}
-
+	
 	//------------------------------------------------------
 	/**
-	 *        Reads quaternion from pQuatNode to rQuat
-	 *        Ignores aformat attribute  
-	 * @param pQuatNode 
-	 * @param rQuat 
-	 */
-	void XODEParser::readQuaternion( const SharedPtr<dom::INode> pQuatNode, Quaternion& rQuat )
+			*        Reads quaternion from pQuatNode to rQuat
+			*        Ignores aformat attribute
+			* @param pQuatNode
+			* @param rQuat
+	*/
+	void XODEParser::readQuaternion( const NodeSharedPtr pQuatNode, Quaternion& rQuat )
 	{
 		real x = StringUtil::parseReal( pQuatNode->getAttributeValueAs<String>( "x" ) );
 		real y = StringUtil::parseReal( pQuatNode->getAttributeValueAs<String>( "y" ) );
 		real z = StringUtil::parseReal( pQuatNode->getAttributeValueAs<String>( "z" ) );
 		real w = StringUtil::parseReal( pQuatNode->getAttributeValueAs<String>( "w" ) );
-		
+	
 		rQuat = Quaternion( w, x, y, z );
 	}
 	
 	//------------------------------------------------------
 	/**
-	 *        Reads angle and axis x, y, z attributes and spawns quaternion with them in rRot
-	 * @param pRotNode 
-	 * @param rRot 
-	 */
-	void XODEParser::readAxisAngleRot( const SharedPtr<dom::INode> pRotNode, Quaternion& rRot )
+			*        Reads angle and axis x, y, z attributes and spawns quaternion with them in rRot
+			* @param pRotNode
+			* @param rRot
+	*/
+	void XODEParser::readAxisAngleRot( const NodeSharedPtr pRotNode, Quaternion& rRot )
 	{
 		real x = StringUtil::parseReal( pRotNode->getAttributeValueAs<String>( "x" ) );
 		real y = StringUtil::parseReal( pRotNode->getAttributeValueAs<String>( "y" ) );
 		real z = StringUtil::parseReal( pRotNode->getAttributeValueAs<String>( "z" ) );
 		real angle = StringUtil::parseReal( pRotNode->getAttributeValueAs<String>( "angle" ) );
-		
+	
 		rRot.FromAngleAxis( angle, Vector3( x, y, z ) );
 	}
-	  
+	
 	//------------------------------------------------------
-	void XODEParser::readRotation( const SharedPtr<dom::INode> pRotNode, Quaternion& rRot )
+	void XODEParser::readRotation( const NodeSharedPtr pRotNode, Quaternion& rRot )
 	{
 		const dom::NodeList& nodes = pRotNode->getNodes();
-		
+	
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-
+	
 			if ( nodeName == "quaternion" )
 			{
 				readQuaternion( *it, rRot );
@@ -222,17 +225,17 @@
 			}
 		}
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readTransform( const SharedPtr<dom::INode> pTransformNode, Transform& rTrans )
+	void XODEParser::readTransform( const NodeSharedPtr pTransformNode, Transform& rTrans )
 	{
 		const dom::NodeList& nodes = pTransformNode->getNodes();
-		
+	
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-		
+	
 			if ( nodeName == "position" )
 			{
 				readPosition( *it, rTrans.mPosition );
@@ -251,103 +254,104 @@
 			}
 		}
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readMassShape( const SharedPtr<dom::INode> pMShapeNode, 
-					physics::IBody& rBody, 
-					Transform const& rParentTransform )
+	void XODEParser::readMassShape( const NodeSharedPtr pMShapeNode,
+											physics::IBody& rBody,
+											Transform const& rParentTransform )
 	{
 	
-		real density = StringUtil::parseReal( pMShapeNode->getAttributeValueAs<String>( "density" ) );
-
-		std::cout << "reading mass_shape with density = " << density << " " << std::endl;
+		String strDensity = pMShapeNode->getAttributeValueAs<String>( "density" );
+		real density = StringUtil::parseReal( strDensity );
 	
+		YAKE_LOG( "reading mass_shape with density = " + strDensity + " " );
+	
 		const dom::NodeList& nodes = pMShapeNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
 		for ( NodeListIter it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-		
-			std::cout << "reading mass_shape that is " << nodeName << " " << std::endl;
-
+	
+			YAKE_LOG( "reading mass_shape that is " + nodeName + " " );
+	
 			if ( nodeName == "cylinder" )
 			{
 				real radius, length;
 				readCylinder( *it, radius, length );
-				
+	
 				physics::IBody::CylinderMassDesc desc( radius, length, density, rParentTransform.mPosition );
-				
+	
 				rBody.addMass( desc );
 			}
 			else if ( nodeName == "sphere" )
 			{
 				real radius;
 				readSphere( *it, radius );
-				
+	
 				physics::IBody::SphereMassDesc desc( radius, density, rParentTransform.mPosition );
-				
+	
 				rBody.addMass( desc );
 			}
 			else if ( nodeName == "box" )
 			{
 				real sX, sY, sZ;
 				readBox( *it, sX, sY, sZ );
-				
+	
 				physics::IBody::BoxMassDesc desc( sX, sY, sZ, density, rParentTransform.mPosition );
-				
+	
 				rBody.addMass( desc );
 			}
 			else if ( nodeName == "cappedCylinder" )
 			{
 				real radius, length;
 				readCappedCylinder( *it, radius, length );
-				
+	
 				physics::IBody::CapsuleMassDesc desc( radius, length, density, rParentTransform.mPosition );
-				
+	
 				rBody.addMass( desc );
 			}
 		}
 	}
-		
+	
 	//------------------------------------------------------
-	void XODEParser::readMassAdjust( const SharedPtr<dom::INode> pMAdjustNode, 
-					 physics::IBody& rBody )
+	void XODEParser::readMassAdjust( const NodeSharedPtr pMAdjustNode,
+												physics::IBody& rBody )
 	{
-			real total = StringUtil::parseReal( pMAdjustNode->getAttributeValueAs<String>( "total" ) );
-			
-			rBody.setMass( total );
+		real total = StringUtil::parseReal( pMAdjustNode->getAttributeValueAs<String>( "total" ) );
+	
+		rBody.setMass( total );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readMass( const SharedPtr<dom::INode> pMassNode, physics::IBody& rBody, Transform const& rParentTransform )
+	void XODEParser::readMass( const NodeSharedPtr pMassNode, physics::IBody& rBody, Transform const& rParentTransform )
 	{
 		const dom::NodeList& nodes = pMassNode->getNodes();
-
+	
 		// Seek transform
 		Transform massTransform;
-		
+	
 		NodeHunter hunter( "transform" );
 		typedef dom::NodeList::const_iterator NodeListIter;
-		NodeListIter iTrans = 
+		NodeListIter iTrans =
 			std::find_if<NodeListIter,NodeHunter>( nodes.begin(), nodes.end(), hunter );
-		
+	
 		if ( iTrans != nodes.end() )
 		{
 			readTransform( *iTrans, massTransform );
 		}
-		
+	
 		if ( !rParentTransform.isIdentity() )
 		{
 			massTransform = massTransform.getDerivedTransform( rParentTransform );
 		}
-		
+	
 		for ( NodeListIter it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-
+	
 			if ( nodeName == "mass_shape" )
 			{
 				readMassShape( *it, rBody, massTransform );
@@ -361,58 +365,56 @@
 				readMass( *it, rBody, massTransform );
 			}
 		}
-		
-	} 
-
+	
+	}
+	
 	//------------------------------------------------------
-	void XODEParser::readBody( const SharedPtr<dom::INode> pBodyNode )
+	void XODEParser::readBody( const NodeSharedPtr pBodyNode )
 	{
 		const String name = pBodyNode->getAttributeValueAs<String>( "name" );
-		std::cout << "readBody() [" << name << "]" << std::endl;
-		
+		YAKE_LOG( "readBody() [" + name + "]" );
+	
 		physics::IActorPtr pDynActor = mPWorld->createActor( physics::ACTOR_DYNAMIC );
-		YAKE_ASSERT( pDynActor ).error( "Failed to create actor!" );
-		
+		YAKE_ASSERT( pDynActor != NULL ).error( "Failed to create actor!" );
+	
 		mBaseModel.addActor( physics::IActorPtr( pDynActor ), name );
-		
+	
 		const dom::NodeList& nodes = pBodyNode->getNodes();
-		
-		
+	
 		// Seek transform
 		Transform bodyTransform;
-		
+	
 		NodeHunter hunter( "transform" );
 		typedef dom::NodeList::const_iterator NodeListIter;
-		NodeListIter iTrans = 
+		NodeListIter iTrans =
 			std::find_if<NodeListIter,NodeHunter>( nodes.begin(), nodes.end(), hunter );
-		
+	
 		if ( iTrans != nodes.end() )
 		{
-			std::cout << "readBody() [" << name << "] : body has transform " << std::endl;
-
+			YAKE_LOG( "readBody() [" + name + "] : body has transform " );
+	
 			readTransform( *iTrans, bodyTransform );
 		}
-		
+	
 		if ( !bodyTransform.isIdentity() )
 		{
 			pDynActor->setPosition( bodyTransform.mPosition );
 			pDynActor->setOrientation( bodyTransform.mRotation );
 		}
-
+	
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-
-			std::cout << " body [" << name << "] has node #" << nodeName << std::endl;
-			
+	
+			YAKE_LOG( " body [" + name + "] has node #" + nodeName );
+	
 			if ( nodeName == "geom" )
 			{
 				readGeom( *it, pDynActor, bodyTransform );
 			}
 			else if ( nodeName == "mass" )
 			{
-				
 				readMass( *it, pDynActor->getBody(), bodyTransform );
 			}
 			else if ( nodeName == "joint" )
@@ -422,84 +424,150 @@
 		}
 	}
 	
+	//------------------------------------------------------
+	/**
+	*    Searches for <ext name="material"> node, parses it, creates material and returns ptr to created material
+	*    If no node, returns NULL
+	* @param pNode - node to search
+	* @return ptr to newly created material or physics::WeakIMaterialPtr()
+	*/
+	physics::IMaterialPtr XODEParser::readMaterialExt( const NodeSharedPtr pNode )
+	{
+		YAKE_LOG( "Entered readMaterialExt..." );
 	
+		const dom::NodeList& nodes = pNode->getNodes();
+	
+		// Looking for ext
+		// TODO maybe we need some advanced searching here?
+		// like finding all ext nodes or finding <ext name="material">?
+		// For now finding ext would be enough
+		NodeHunter hunter( "ext" );
+		typedef dom::NodeList::const_iterator NodeListIter;
+		NodeListIter iExt =
+			std::find_if<NodeListIter,NodeHunter>( nodes.begin(), nodes.end(), hunter );
+	
+		if ( iExt != nodes.end() )
+		{
+			YAKE_LOG( "readMaterialExt() : found extension... processing... :) " );
+	
+			if ( (*iExt)->getAttributeValueAs<String>( "name" ) == "material" )
+			{
+				YAKE_LOG( "readMaterialExt() : found extension IS material! Parsing..." );
+				const dom::NodeList& extNodes = (*iExt)->getNodes();
+				//HACK assuming first node is "params"
+				NodeSharedPtr pParamsNode = *extNodes.begin();
+	
+				// parsing
+				physics::IMaterial::Desc desc;
+	
+				String strFriction = pParamsNode->getAttributeValueAs<String>( "friction" );
+				String strRestitution = pParamsNode->getAttributeValueAs<String>( "bouncecoeff" );
+				String strSoftness = pParamsNode->getAttributeValueAs<String>( "soften" );
+	
+				YAKE_LOG( "Read friction = " + strFriction );
+				YAKE_LOG( "Read restitution = " + strRestitution );
+				YAKE_LOG( "Read softness = " + strSoftness );
+	
+				desc.mFriction = StringUtil::parseReal( strFriction );
+				desc.mRestitution = StringUtil::parseReal( strRestitution );
+				desc.mSoftness = StringUtil::parseReal( strSoftness );
+	
+				physics::IMaterialPtr result = mPWorld->createMaterial( desc );
+	
+				return result;
+			}
+			else
+			{
+				YAKE_LOG( "readMaterialExt() : found extension was not material" );
+			}
+		}
+		else
+		{
+			YAKE_LOG( "readMaterialExt() : didn't find material... returning default one :) " );
+		}
+	
+		return physics::IMaterialPtr();
+	}
+	
 	//------------------------------------------------------
 	/**
-	 *        Reads geom xode node and attaches ICollisionGeometry* to *pParentObject.
-	 *        If no parent object supplied then attaches geometry to mBaseModel directly.
-	 *        No folded bodys, geoms, spaces processed.
-	 * @param pGeomNode 
-	 * @param pParentObject 
-	 */
-	void XODEParser::readGeom( const SharedPtr<dom::INode> pGeomNode, 
-				   physics::IActor* pParentObject,
-				   const Transform& rParentTransform )
+	*        Reads geom xode node and attaches ICollisionGeometry* to *pParentObject.
+	*        If no parent object supplied then attaches geometry to mBaseModel directly.
+	*        No folded bodies, geoms, spaces processed.
+	* @param pGeomNode
+	* @param pParentObject
+	*/
+	void XODEParser::readGeom( const NodeSharedPtr pGeomNode,
+										physics::IActor* pParentObject,
+										const Transform& rParentTransform )
 	{
-		YAKE_DECLARE_FUNCTION( readGeom );
-
 		const String name = pGeomNode->getAttributeValueAs<String>( "name" );
-		std::cout << "readGeom() [" << name << "]" << std::endl;
-		
+		YAKE_LOG( "readGeom() [" + name + "]" );
+	
 		physics::IShape* pShape = NULL;
-
+	
 		if ( !pParentObject )
 		{
 			YAKE_LOG("XODE::readGeom() creating static actor...");
 			// adding shape to new IStaticActor
 			//physics::IStaticActor::Desc desc;
+	
 			physics::IActorPtr pStaticActor( mPWorld->createActor(physics::ACTOR_STATIC) );
 			pParentObject = pStaticActor;
 			mBaseModel.addActor( pStaticActor, name );
 		}
-
+	
 		const dom::NodeList& nodes = pGeomNode->getNodes();
-		
+	
 		// Looking for transform
 		NodeHunter hunter( "transform" );
 		typedef dom::NodeList::const_iterator NodeListIter;
-		NodeListIter iTrans = 
+		NodeListIter iTrans =
 			std::find_if<NodeListIter,NodeHunter>( nodes.begin(), nodes.end(), hunter );
-
+	
 		Transform geomTransform;
-			
+	
 		if ( iTrans != nodes.end() )
 		{
-			std::cout << "readGeom() [" << name << "] : geom has transform " << std::endl;
-
+			YAKE_LOG( "readGeom() [" + name + "] : geom has transform " );
+	
 			readTransform( *iTrans, geomTransform );
 		}
-
-		
-///FIXME We don't need derived transform here as it is automaitcally handled by concrete plugin
-/*		if ( !rParentTransform.isIdentity() )
-		{
-			geomTransform = geomTransform.getDerivedTransform( rParentTransform );
+	
+	
+		///FIXME We don't need derived transform here as it is automaitcally handled by concrete plugin
+		/*		if ( !rParentTransform.isIdentity() )
+					{
+					geomTransform = geomTransform.getDerivedTransform( rParentTransform );
 		}*/
-		
+	
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-
-			std::cout << " geom [" << name << "] has node #" << nodeName << std::endl;
-
+	
+			YAKE_LOG( " geom [" + name + "] has node #" + nodeName );
+	
 			if ( nodeName == "box" )
 			{
 				real sizeX, sizeY, sizeZ;
 				readBox( *it, sizeX, sizeY, sizeZ );
-				
+	
 				sizeX *= rParentTransform.mScale.x;
 				sizeY *= rParentTransform.mScale.y;
 				sizeZ *= rParentTransform.mScale.z;
-			
-				std::cout << " box with sizes: " << sizeX << ", " << sizeY << ", " << sizeZ << std::endl;
-				
-				physics::IShape::BoxDesc desc( 
-												Vector3( sizeX, sizeY, sizeZ ), 
-												0, 						// FIXME material
-												geomTransform.mPosition,
-												geomTransform.mRotation );
-										
+	
+				String strSizeX; strSizeX << sizeX;
+				String strSizeY; strSizeY << sizeY;
+				String strSizeZ; strSizeZ << sizeZ;
+	
+				YAKE_LOG( " box with sizes: " + strSizeX + ", " + strSizeY + ", " + strSizeZ );
+	
+				physics::IShape::BoxDesc desc(	Vector3( sizeX, sizeY, sizeZ ),
+														readMaterialExt( *it ),
+														geomTransform.mPosition,
+														geomTransform.mRotation );
+	
 				YAKE_ASSERT( pParentObject ).warning( "FIXME Static shapes are not supported" );
 				if (pParentObject)
 					pParentObject->createShape( desc );
@@ -508,21 +576,20 @@
 			{
 				real radius, length;
 				readCappedCylinder( *it, radius, length );
-				
-				real scale = ( rParentTransform.mScale.x 
-						+ rParentTransform.mScale.y
-						+ rParentTransform.mScale.z ) /3;
-					
+	
+				real scale = ( rParentTransform.mScale.x
+									+ rParentTransform.mScale.y
+									+ rParentTransform.mScale.z ) /3;
+	
 				radius *= scale;
 				length *= scale;
-				
-				physics::IShape::CapsuleDesc desc( 
-												length,
-												radius, 
-												0, 						// FIXME material
-												geomTransform.mPosition,
-												geomTransform.mRotation );
-										
+	
+				physics::IShape::CapsuleDesc desc(	length,
+															radius,
+															readMaterialExt( *it ),
+															geomTransform.mPosition,
+															geomTransform.mRotation );
+	
 				YAKE_ASSERT( pParentObject ).warning( "FIXME Static shapes are not supported" );
 				if (pParentObject)
 					pParentObject->createShape( desc );
@@ -531,35 +598,34 @@
 			{
 				real radius, length;
 				readCone( *it, radius, length );
-				
-				real scale = ( rParentTransform.mScale.x 
-						+ rParentTransform.mScale.y
-						+ rParentTransform.mScale.z ) /3;
-					
+	
+				real scale = ( rParentTransform.mScale.x
+									+ rParentTransform.mScale.y
+									+ rParentTransform.mScale.z ) /3;
+	
 				radius *= scale;
 				length *= scale;
-				
+	
 				YAKE_ASSERT( false ).error( "NOT implemented in Yake" ); //TODO
 			}
 			else if ( nodeName == "cylinder" )
 			{
 				real radius, length;
 				readCylinder( *it, radius, length );
-				
-				real scale = ( rParentTransform.mScale.x 
-						+ rParentTransform.mScale.y
-						+ rParentTransform.mScale.z ) /3;
-				
+	
+				real scale = ( rParentTransform.mScale.x
+									+ rParentTransform.mScale.y
+									+ rParentTransform.mScale.z ) /3;
+	
 				radius *= scale;
 				length *= scale;
-				
-				physics::IShape::CapsuleDesc desc( 
-												length,
-												radius, 
-												0, 						// FIXME material
-												geomTransform.mPosition,
-												geomTransform.mRotation );
-										
+	
+				physics::IShape::CapsuleDesc desc(	length,
+															radius,
+															readMaterialExt( *it ),
+															geomTransform.mPosition,
+															geomTransform.mRotation );
+	
 				YAKE_ASSERT( pParentObject ).warning( "FIXME Static shapes are not supported" );
 				if (pParentObject)
 					pParentObject->createShape( desc );
@@ -568,48 +634,49 @@
 			{
 				real a, b, c, d;
 				readPlane( *it, a, b, c, d );
-				
-				physics::IShape::PlaneDesc desc( 
-												Vector3( a, b, c ),
-												d, 
-												0, 						// FIXME material
-												geomTransform.mPosition,
-												geomTransform.mRotation );
-										
+				physics::IShape::PlaneDesc desc(	Vector3( a, b, c ),
+															d,
+															readMaterialExt( *it ),
+															geomTransform.mPosition,
+															geomTransform.mRotation );
+	
 				YAKE_ASSERT( pParentObject ).warning( "FIXME Static shapes are not supported" );
 				if (pParentObject)
+				{
 					pParentObject->createShape( desc );
+					YAKE_LOG( "Creating plane shape..." );
+				}
 			}
 			else if ( nodeName == "ray" )
 			{
 				real length;
 				readRay( *it, length );
-				
-				real scale = ( rParentTransform.mScale.x 
-						+ rParentTransform.mScale.y
-						+ rParentTransform.mScale.z ) /3;
-					
+	
+				real scale = ( rParentTransform.mScale.x
+									+ rParentTransform.mScale.y
+									+ rParentTransform.mScale.z ) /3;
+	
 				length *= scale;
-				
+	
 				YAKE_ASSERT( false ).error( "NOT implemented in Yake" ); //TODO
 			}
 			else if ( nodeName == "sphere" )
 			{
 				real radius;
 				readSphere( *it, radius );
-				
-				real scale = ( rParentTransform.mScale.x 
-						+ rParentTransform.mScale.y
-						+ rParentTransform.mScale.z ) /3;
-					
+	
+				real scale = ( rParentTransform.mScale.x
+									+ rParentTransform.mScale.y
+									+ rParentTransform.mScale.z ) /3;
+	
 				radius *= scale;
-				
-				physics::IShape::SphereDesc desc( 
-												radius, 
-												0, 						// FIXME material
-												geomTransform.mPosition,
-												geomTransform.mRotation );
-										
+	
+				physics::IShape::SphereDesc desc(
+					radius,
+					readMaterialExt( *it ),
+					geomTransform.mPosition,
+					geomTransform.mRotation );
+	
 				YAKE_ASSERT( pParentObject ).warning( "FIXME Static shapes are not supported" );
 				if (pParentObject)
 					pParentObject->createShape( desc );
@@ -618,38 +685,39 @@
 			{
 				physics::TriangleMeshDesc::VertexVector vertices;
 				physics::TriangleMeshDesc::IndexVector indices;
-				
+	
 				readTrimesh( *it, vertices, indices );
-				
+	
 				physics::TriangleMeshDesc::VertexVector scaledVertices;
-				
+	
 				ConstVectorIterator< physics::TriangleMeshDesc::VertexVector > iV( vertices.begin(), vertices.end() );
-				
+	
 				while ( iV.hasMoreElements() )
 				{
 					Vector3 const& vertex = iV.getNext();
 					scaledVertices.push_back( vertex * rParentTransform.mScale );
 				}
-				
+	
 				physics::TriangleMeshDesc dataDesc( vertices, indices );
-				
+	
 				physics::TriangleMeshId meshId = mPWorld->createTriangleMesh( dataDesc );
-				
-				physics::IShape::TriMeshDesc desc( 
-												meshId, 
-												0, 						// FIXME material
-												geomTransform.mPosition,
-												geomTransform.mRotation );
-										
+	
+				physics::IShape::TriMeshDesc desc(	meshId,
+															readMaterialExt( *it ),
+															geomTransform.mPosition,
+															geomTransform.mRotation );
+	
 				YAKE_ASSERT( pParentObject ).warning( "FIXME Static shapes are not supported" );
 				if (pParentObject)
 					pParentObject->createShape( desc );
 			}
 		}
+	
+		YAKE_LOG( "INFO: Leaving readGeom()" );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readBox( const SharedPtr<dom::INode> pNode, real& sizeX, real& sizeY, real& sizeZ )
+	void XODEParser::readBox( const NodeSharedPtr pNode, real& sizeX, real& sizeY, real& sizeZ )
 	{
 		sizeX = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "sizex" ) );
 		sizeY = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "sizey" ) );
@@ -657,62 +725,62 @@
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readCappedCylinder( const SharedPtr<dom::INode> pNode, real& radius, real& length )
+	void XODEParser::readCappedCylinder( const NodeSharedPtr pNode, real& radius, real& length )
 	{
 		radius = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "radius" ) );
 		length = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "length" ) );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readCone( const SharedPtr<dom::INode> pNode, real& radius, real& length )
+	void XODEParser::readCone( const NodeSharedPtr pNode, real& radius, real& length )
 	{
 		radius = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "radius" ) );
 		length = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "length" ) );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readCylinder( const SharedPtr<dom::INode> pNode, real& radius, real& length )
+	void XODEParser::readCylinder( const NodeSharedPtr pNode, real& radius, real& length )
 	{
 		radius = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "radius" ) );
 		length = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "length" ) );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readPlane( const SharedPtr<dom::INode> pNode, real& a, real& b, real& c, real& d )
+	void XODEParser::readPlane( const NodeSharedPtr pNode, real& a, real& b, real& c, real& d )
 	{
 		a = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "a" ) );
 		b = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "b" ) );
 		c = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "c" ) );
 		d = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "d" ) );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readRay( const SharedPtr<dom::INode> pNode, real& length )
+	void XODEParser::readRay( const NodeSharedPtr pNode, real& length )
 	{
 		length = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "length" ) );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readSphere( const SharedPtr<dom::INode> pNode, real& radius )
+	void XODEParser::readSphere( const NodeSharedPtr pNode, real& radius )
 	{
 		radius = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "radius" ) );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readTrimesh( const SharedPtr<dom::INode> pMeshNode,
-				      physics::TriangleMeshDesc::VertexVector& rVertices,
-				      physics::TriangleMeshDesc::IndexVector& rIndices )
+	void XODEParser::readTrimesh( const NodeSharedPtr pMeshNode,
+											physics::TriangleMeshDesc::VertexVector& rVertices,
+											physics::TriangleMeshDesc::IndexVector& rIndices )
 	{
 		const dom::NodeList& nodes = pMeshNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
 		for ( NodeListIter it = nodes.begin(); it != nodes.end(); ++it )
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-		
-			std::cout << "   Reading " << nodeName << " now..." << std::endl;
-			
+	
+			YAKE_LOG( "   Reading " + nodeName + " now..." );
+	
 			if ( nodeName == "vertices" )
 			{
 				readVertices( *it, rVertices );
@@ -723,50 +791,50 @@
 			}
 		}
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readVertices( const SharedPtr<dom::INode> pNode, 
-				       physics::TriangleMeshDesc::VertexVector& rVertices )
+	void XODEParser::readVertices( const NodeSharedPtr pNode,
+											physics::TriangleMeshDesc::VertexVector& rVertices )
 	{
 		const dom::NodeList& nodes = pNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
 		for ( NodeListIter it = nodes.begin(); it != nodes.end(); ++it )
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-		
+	
 			if ( nodeName == "v" )
 			{
 				real x = StringUtil::parseReal( (*it)->getAttributeValueAs< String >( "x" ) );
 				real y = StringUtil::parseReal( (*it)->getAttributeValueAs< String >( "y" ) );
 				real z = StringUtil::parseReal( (*it)->getAttributeValueAs< String >( "z" ) );
-			
+	
 				rVertices.push_back( Vector3( x, y, z ) );
 			}
 		}
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readIndices( const SharedPtr<dom::INode> pNode, 
-				       physics::TriangleMeshDesc::IndexVector& rIndices )
+	void XODEParser::readIndices( const NodeSharedPtr pNode,
+											physics::TriangleMeshDesc::IndexVector& rIndices )
 	{
 		const dom::NodeList& nodes = pNode->getNodes();
-		
+	
 		typedef int32 IndexT;
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
 		for ( NodeListIter it = nodes.begin(); it != nodes.end(); ++it )
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-		
+	
 			if ( nodeName == "t" )
 			{
 				IndexT ia = StringUtil::parseInt( (*it)->getAttributeValueAs< String >( "ia" ) );
 				IndexT ib = StringUtil::parseInt( (*it)->getAttributeValueAs< String >( "ib" ) );
 				IndexT ic = StringUtil::parseInt( (*it)->getAttributeValueAs< String >( "ic" ) );
-			
+	
 				rIndices.push_back( ia );
 				rIndices.push_back( ib );
 				rIndices.push_back( ic );
@@ -775,99 +843,107 @@
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readJoint(	const SharedPtr<dom::INode> pJointNode,
-								const String& rBodyName,
-								Transform& rParentTransform )
+	void XODEParser::readJoint(	const NodeSharedPtr pJointNode,
+										const String& rBodyName,
+										Transform& rParentTransform )
 	{
 		JointDescription desc;
-		
+	
 		desc.mBody1Name = rBodyName;
 		desc.mJointDefNode = pJointNode;
 		desc.mParentTransform = rParentTransform;
-		
+	
 		mJointDescriptions.push_back( desc );
 	}
 	
 	//------------------------------------------------------
 	void XODEParser::createJointsFromDescriptions()
 	{
+		YAKE_LOG( "Creating joints from descriptions..." );
+
 		for( JointDescriptions::iterator j = mJointDescriptions.begin(); j != mJointDescriptions.end(); ++j )
 			createJoint( *j );
-	} 
+	}
 	
 	//------------------------------------------------------
 	void XODEParser::createJoint( const JointDescription& rDesc )
 	{
-		
+	
 		const dom::NodeList& nodes = rDesc.mJointDefNode->getNodes();
-		
-		String name = rDesc.mJointDefNode->getAttributeValueAs<String>( "name" ); 
-		
+	
+		String name = rDesc.mJointDefNode->getAttributeValueAs<String>( "name" );
+
+		YAKE_LOG( "Creating joint '" + name + "' ..." );
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
-		
+	
 		// Looking for link2
 		NodeHunter linkHunter( "link2" );
-		NodeListIter iLink = 
+		NodeListIter iLink =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), linkHunter );
-		
+	
 		YAKE_ASSERT( iLink != nodes.end() ).error( "2nd body name is not present in joint definition!" );
-		
+	
 		String body2Name = (*iLink)->getAttributeValueAs<String>( "body" );
 		
+		YAKE_LOG( "The joint connects two actors:" );
+		YAKE_LOG( " 1:" + rDesc.mBody1Name );
+		YAKE_LOG( " 2:" + body2Name );
+	
 		// Looking for transform
 		NodeHunter hunter( "transform" );
-		NodeListIter iTrans = 
+		NodeListIter iTrans =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), hunter );
-			
+	
 		Transform jointTransform;
-			
+	
 		if ( iTrans != nodes.end() )
 		{
-			std::cout << "readJoint() [" << name << "] : joint has transform " << std::endl;
-
+			YAKE_LOG( "createJoint() [" + name + "] : joint has transform " );
+	
 			readTransform( *iTrans, jointTransform );
 		}
-		
+	
 		if ( !rDesc.mParentTransform.isIdentity() )
 		{
 			jointTransform = jointTransform.getDerivedTransform( rDesc.mParentTransform );
 		}
-		
-		physics::IActorPtr pActor1 = mBaseModel.getActorByName( rDesc.mBody1Name );
-		physics::IActorPtr pActor2 = mBaseModel.getActorByName( body2Name );
-		
-		YAKE_ASSERT( pActor1 && pActor2 ).error( "You're trying to attach joint to non-dynamic actors! That's not possible!" );
-				
+	
+		physics::IActorPtr pDynActor1 = mBaseModel.getActorByName( rDesc.mBody1Name );
+		physics::IActorPtr pDynActor2 = mBaseModel.getActorByName( body2Name );
+	
+		YAKE_ASSERT( pDynActor1 && pDynActor2 ).error( "You're trying to attach joint to non-existent actors! That's not possible ;) !" );
+	
 		for ( NodeListIter it = nodes.begin(); it != nodes.end(); ++it )
 		{
-			String nodeName = 
+			String nodeName =
 				StringUtil::toLowerCase( (*it)->getName() );
-		
-			std::cout << "   Reading " << nodeName << " now..." << std::endl;
-			
+	
+			YAKE_LOG( "   Reading " + nodeName + " now..." );
+	
 			if ( nodeName == "ball" )
 			{
-				readBall( *it, pActor1, pActor2, jointTransform );
+				readBall( *it, pDynActor1, pDynActor2, jointTransform );
 			}
 			else if ( nodeName == "fixed" )
 			{
-				readFixed( *it, pActor1, pActor2, jointTransform );
+				readFixed( *it, pDynActor1, pDynActor2, jointTransform );
 			}
 			else if ( nodeName == "hinge" )
 			{
-				readHinge( *it, pActor1, pActor2, jointTransform );
+				readHinge( *it, pDynActor1, pDynActor2, jointTransform );
 			}
 			else if ( nodeName == "hinge2" )
 			{
-				readHinge2( *it, pActor1, pActor2, jointTransform );
+				readHinge2( *it, pDynActor1, pDynActor2, jointTransform );
 			}
 			else if ( nodeName == "slider" )
 			{
-				readSlider( *it, pActor1, pActor2, jointTransform );
+				readSlider( *it, pDynActor1, pDynActor2, jointTransform );
 			}
 			else if ( nodeName == "universal" )
 			{
-				readUniversal( *it, pActor1, pActor2, jointTransform );
+				readUniversal( *it, pDynActor1, pDynActor2, jointTransform );
 			}
 			else if ( nodeName == "amotor" )
 			{
@@ -877,210 +953,238 @@
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readBall(	const SharedPtr<dom::INode> pJointNode,
-								physics::IActor* pActor1,
-								physics::IActor* pActor2,
-								Transform& rJointTransform )
+	void XODEParser::readBall(	const NodeSharedPtr pJointNode,
+										physics::IActor* pActor1,
+										physics::IActor* pActor2,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading ball joint description..." );
+
 		const dom::NodeList& nodes = pJointNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
-		
+	
 		// Looking for anchor
 		NodeHunter anchorHunter( "anchor" );
-		NodeListIter iAnchor = 
+		NodeListIter iAnchor =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), anchorHunter );
-		
+	
 		YAKE_ASSERT( iAnchor != nodes.end() ).error( "Anchor was not defined for ball joint!" );
 	
 		Vector3 anchor;
-		
+	
 		readAnchor( *iAnchor, anchor, rJointTransform );
-		
+	
 		physics::IJoint::DescBall desc( pActor1, pActor2, anchor );
-		
-		mPWorld->createJoint( desc ); 
+	
+		mPWorld->createJoint( desc );
+
+		YAKE_LOG( "Finished processing ball joint description." );
 	}
-
+	
 	//------------------------------------------------------
-	void XODEParser::readFixed(	const SharedPtr<dom::INode> pJointNode,
-								physics::IActor* pActor1,
-								physics::IActor* pActor2,
-								Transform& rJointTransform )
+	void XODEParser::readFixed(	const NodeSharedPtr pJointNode,
+										physics::IActor* pActor1,
+										physics::IActor* pActor2,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading fixed joint description..." );
+
 		physics::IJoint::DescFixed desc( pActor1, pActor2 );
-		
-		mPWorld->createJoint( desc ); 
+	
+		mPWorld->createJoint( desc );
+
+		YAKE_LOG( "Finished processing fixed joint description." );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readHinge(	const SharedPtr<dom::INode> pJointNode,
-								physics::IActor* pActor1,
-								physics::IActor* pActor2,
-								Transform& rJointTransform )
+	void XODEParser::readHinge(	const NodeSharedPtr pJointNode,
+										physics::IActor* pActor1,
+										physics::IActor* pActor2,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading hinge joint description..." );
+
 		const dom::NodeList& nodes = pJointNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
-		
+	
 		// Looking for anchor
 		NodeHunter anchorHunter( "anchor" );
-		NodeListIter iAnchor = 
+		NodeListIter iAnchor =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), anchorHunter );
-		
+	
 		YAKE_ASSERT( iAnchor != nodes.end() ).error( "Anchor was not defined for hinge joint!" );
-		
+	
 		// Looking for axis
 		NodeHunter axisHunter( "axis" );
-		NodeListIter iAxis = 
+		NodeListIter iAxis =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), axisHunter );
-		
+	
 		YAKE_ASSERT( iAxis != nodes.end() ).error( "Axis was not defined for hinge joint!" );
 	
 		Vector3 anchor;
 		Vector3 axis;
-		
+	
 		readAnchor( *iAnchor, anchor, rJointTransform );
 		readAxis( *iAxis, axis, rJointTransform );
-		
+	
 		physics::IJoint::DescHinge desc( pActor1, pActor2, axis, anchor );
-		
-		mPWorld->createJoint( desc ); 
+	
+		mPWorld->createJoint( desc );
+
+		YAKE_LOG( "Finished processing hinge joint description." );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readHinge2(	const SharedPtr<dom::INode> pJointNode,
-								physics::IActor* pActor1,
-								physics::IActor* pActor2,
-								Transform& rJointTransform )
+	void XODEParser::readHinge2(	const NodeSharedPtr pJointNode,
+										physics::IActor* pActor1,
+										physics::IActor* pActor2,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading hinge2 joint description..." );
+
 		const dom::NodeList& nodes = pJointNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
-		
+	
 		// Looking for anchor
 		NodeHunter anchorHunter( "anchor" );
-		NodeListIter iAnchor = 
+		NodeListIter iAnchor =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), anchorHunter );
-		
-		YAKE_ASSERT( iAnchor != nodes.end() ).error( "Anchor was not defined for hinge joint!" );
-		
+	
+		YAKE_ASSERT( iAnchor != nodes.end() ).error( "Anchor was not defined for hinge2 joint!" );
+	
 		// Looking for axis
 		NodeHunter axisHunter( "axis" );
-		NodeListIter iAxis0 = 
+		NodeListIter iAxis0 =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), axisHunter );
-		
+	
 		YAKE_ASSERT( iAxis0 != nodes.end() ).error( "Axis0 was not defined for hinge2 joint!" );
-		
-		NodeListIter iAxis1 = 
+	
+		NodeListIter iAxis1 =
 			std::find_if<NodeListIter, NodeHunter>( iAxis0 + 1, nodes.end(), axisHunter );
-		
+	
 		YAKE_ASSERT( iAxis1 != nodes.end() ).error( "Axis1 was not defined for hinge2 joint!" );
 	
 		Vector3 anchor;
 		Vector3 axis0;
 		Vector3 axis1;
-		
+	
 		readAnchor( *iAnchor, anchor, rJointTransform );
 		readAxis( *iAxis0, axis0, rJointTransform );
 		readAxis( *iAxis1, axis1, rJointTransform );
-		
+	
 		physics::IJoint::DescHinge2 desc( pActor1, pActor2, axis0, axis1, anchor );
-		
-		mPWorld->createJoint( desc ); 
+	
+		mPWorld->createJoint( desc );
+
+		YAKE_LOG( "Finished processing hinge2 joint description." );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readSlider(	const SharedPtr<dom::INode> pJointNode,
-								physics::IActor* pActor1,
-								physics::IActor* pActor2,
-								Transform& rJointTransform )
+	void XODEParser::readSlider(	const NodeSharedPtr pJointNode,
+										physics::IActor* pActor1,
+										physics::IActor* pActor2,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading slider joint description..." );
+
 		const dom::NodeList& nodes = pJointNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
-		
+	
 		// Looking for axis
 		NodeHunter axisHunter( "axis" );
-		NodeListIter iAxis = 
+		NodeListIter iAxis =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), axisHunter );
-		
-		YAKE_ASSERT( iAxis != nodes.end() ).error( "Axis was not defined for hinge joint!" );
 	
+		YAKE_ASSERT( iAxis != nodes.end() ).error( "Axis was not defined for slider joint!" );
+	
 		Vector3 axis;
-		
+	
 		readAxis( *iAxis, axis, rJointTransform );
-		
+	
 		physics::IJoint::DescSlider desc( pActor1, pActor2, axis );
-		
-		mPWorld->createJoint( desc ); 
+	
+		mPWorld->createJoint( desc );
+
+		YAKE_LOG( "Finished processing slider joint description." );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readUniversal(	const SharedPtr<dom::INode> pJointNode,
-									physics::IActor* pActor1,
-									physics::IActor* pActor2,
-									Transform& rJointTransform )
+	void XODEParser::readUniversal(	const NodeSharedPtr pJointNode,
+											physics::IActor* pActor1,
+											physics::IActor* pActor2,
+											Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading universal joint description..." );
+
 		const dom::NodeList& nodes = pJointNode->getNodes();
-		
+	
 		typedef dom::NodeList::const_iterator NodeListIter;
-		
+	
 		// Looking for anchor
 		NodeHunter anchorHunter( "anchor" );
-		NodeListIter iAnchor = 
+		NodeListIter iAnchor =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), anchorHunter );
-		
-		YAKE_ASSERT( iAnchor != nodes.end() ).error( "Anchor was not defined for hinge joint!" );
-		
+	
+		YAKE_ASSERT( iAnchor != nodes.end() ).error( "Anchor was not defined for universal joint!" );
+	
 		// Looking for axis
 		NodeHunter axisHunter( "axis" );
-		NodeListIter iAxis0 = 
+		NodeListIter iAxis0 =
 			std::find_if<NodeListIter, NodeHunter>( nodes.begin(), nodes.end(), axisHunter );
-		
-		YAKE_ASSERT( iAxis0 != nodes.end() ).error( "Axis0 was not defined for hinge2 joint!" );
-		
-		NodeListIter iAxis1 = 
+	
+		YAKE_ASSERT( iAxis0 != nodes.end() ).error( "Axis0 was not defined for universal joint!" );
+	
+		NodeListIter iAxis1 =
 			std::find_if<NodeListIter, NodeHunter>( iAxis0 + 1, nodes.end(), axisHunter );
-		
-		YAKE_ASSERT( iAxis1 != nodes.end() ).error( "Axis1 was not defined for hinge2 joint!" );
 	
+		YAKE_ASSERT( iAxis1 != nodes.end() ).error( "Axis1 was not defined for universal joint!" );
+	
 		Vector3 anchor;
 		Vector3 axis0;
 		Vector3 axis1;
-		
+	
 		readAnchor( *iAnchor, anchor, rJointTransform );
 		readAxis( *iAxis0, axis0, rJointTransform );
 		readAxis( *iAxis1, axis1, rJointTransform );
-		
+	
 		physics::IJoint::DescUniversal desc( pActor1, pActor2, axis0, axis1, anchor );
-		
-		mPWorld->createJoint( desc ); 
+	
+		mPWorld->createJoint( desc );
+
+		YAKE_LOG( "Finished processing universal joint description." );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readAnchor(	const SharedPtr<dom::INode> pAnchorNode,
-									Vector3& rAnchor,
-									Transform& rJointTransform )
+	void XODEParser::readAnchor(	const NodeSharedPtr pAnchorNode,
+										Vector3& rAnchor,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading anchor..." );
+
 		rAnchor.x = StringUtil::parseReal( pAnchorNode->getAttributeValueAs<String>( "x" ) );
 		rAnchor.y = StringUtil::parseReal( pAnchorNode->getAttributeValueAs<String>( "y" ) );
 		rAnchor.z = StringUtil::parseReal( pAnchorNode->getAttributeValueAs<String>( "z" ) );
-		
+	
 		rAnchor = rJointTransform.mPosition + rJointTransform.mRotation*( rJointTransform.mScale*rAnchor );
 	}
 	
 	//------------------------------------------------------
-	void XODEParser::readAxis(	const SharedPtr<dom::INode> pAxisNode,
-								Vector3& rAxis,
-								Transform& rJointTransform )
+	void XODEParser::readAxis(	const NodeSharedPtr pAxisNode,
+										Vector3& rAxis,
+										Transform& rJointTransform )
 	{
+		YAKE_LOG( "Reading axis..." );
+
 		rAxis.x = StringUtil::parseReal( pAxisNode->getAttributeValueAs<String>( "x" ) );
 		rAxis.y = StringUtil::parseReal( pAxisNode->getAttributeValueAs<String>( "y" ) );
 		rAxis.z = StringUtil::parseReal( pAxisNode->getAttributeValueAs<String>( "z" ) );
-		
+	
 		/// TODO What about all other axis params?
-		
+	
 		rAxis = rJointTransform.mRotation*rAxis;
 	}
 

Modified: trunk/yake/src/yapp/model/Makefile.am
===================================================================
--- trunk/yake/src/yapp/model/Makefile.am	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/model/Makefile.am	2005-10-06 18:03:10 UTC (rev 996)
@@ -3,6 +3,5 @@
 
 lib_LTLIBRARIES = libyappModel.la
 libyappModel_la_SOURCES = yakeComplexModel.cpp yakeGraphical.cpp \
-	yakePhysical.cpp yakeVehicle.cpp yakeActor.cpp yakeModelLink.cpp \
-	yakeModelMovableLink.cpp yakeVehiclePhysicalComponent.cpp yakeVehicleTpl.cpp
+	yakePhysical.cpp yakeActor.cpp yakeModelLink.cpp yakeModelMovableLink.cpp
 libyappModel_la_LIBADD = $(top_builddir)/src/yapp/loader/libyappLoader.la

Modified: trunk/yake/src/yapp/model/yakePhysical.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakePhysical.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/model/yakePhysical.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -36,6 +36,7 @@
 		mActors.clear();
 		mJoints.clear();
 	}
+	
 	//-----------------------------------------------------
 	Physical::ActorVector Physical::getActors() const
 	{
@@ -49,6 +50,7 @@
 		}
 		return c;
 	}
+
 	//-----------------------------------------------------
 	void Physical::translate( const Vector3 & d )
 	{
@@ -60,6 +62,7 @@
 				pActor->translate( d );
 		}
 	}
+
 	//-----------------------------------------------------
 	void Physical::addActor( physics::IActorPtr pActor, const String & rName )
 	{
@@ -69,6 +72,7 @@
 		String name = (rName.length() > 0) ? rName : (uniqueName::create("physical_actor_"));
 		mActors.insert( std::make_pair(name,pActor) );
 	}
+
 	//-----------------------------------------------------
 	void Physical::addJoint(physics::IJointPtr pJoint )
 	{
@@ -77,6 +81,7 @@
 			return;
 		mJoints.push_back( pJoint );
 	}
+
 	//-----------------------------------------------------
 	physics::IActorPtr Physical::getActorByName( const String & rName ) const
 	{

Modified: trunk/yake/src/yapp/samples/Makefile.am
===================================================================
--- trunk/yake/src/yapp/samples/Makefile.am	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/samples/Makefile.am	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,3 +1,3 @@
 INCLUDES = $(all_includes)
 METASOURCES = AUTO
-SUBDIRS = base model misc graphics gui raf
+SUBDIRS = base misc gui raf model graphics

Modified: trunk/yake/src/yapp/samples/base/Makefile.am
===================================================================
--- trunk/yake/src/yapp/samples/base/Makefile.am	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/samples/base/Makefile.am	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,3 +1,4 @@
 INCLUDES = $(all_includes)
 METASOURCES = AUTO
 
+SUBDIRS = vehicle

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -14,7 +14,7 @@
 struct TheConfiguration : public raf::ApplicationConfiguration
 {
 	virtual StringVector getLibraries()
-	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsNx"; }
+	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsODE"; }
 
 	//virtual StringVector getScriptingSystems()
 	//{ return MakeStringVector() << "lua"; }
@@ -26,7 +26,7 @@
 	{ return MakeStringVector() << "ogre"; }
 
 	virtual StringVector getPhysicsSystems()
-	{ return MakeStringVector() << "nx"; }
+	{ return MakeStringVector() << "ode"; }
 };
 
 /** Main application state */
@@ -128,19 +128,19 @@
 		using namespace input;
 		mActionMap.reg( ACTIONID_STRAFE_LEFT,
 			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_LEFT, KAM_CONTINUOUS ) );
-		mActionMap.subscribeToActionId( ACTIONID_STRAFE_LEFT, boost::bind(TheMainState::onStrafeLeft,this) );
+		mActionMap.subscribeToActionId( ACTIONID_STRAFE_LEFT, boost::bind(&TheMainState::onStrafeLeft,this) );
 
 		mActionMap.reg( ACTIONID_STRAFE_RIGHT,
 			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_RIGHT, KAM_CONTINUOUS ) );
-		mActionMap.subscribeToActionId( ACTIONID_STRAFE_RIGHT, boost::bind(TheMainState::onStrafeRight,this) );
+		mActionMap.subscribeToActionId( ACTIONID_STRAFE_RIGHT, boost::bind(&TheMainState::onStrafeRight,this) );
 
 		mActionMap.reg( ACTIONID_FORWARD,
 			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_UP, KAM_CONTINUOUS ) );
-		mActionMap.subscribeToActionId( ACTIONID_FORWARD, boost::bind(TheMainState::onForward,this) );
+		mActionMap.subscribeToActionId( ACTIONID_FORWARD, boost::bind(&TheMainState::onForward,this) );
 
 		mActionMap.reg( ACTIONID_REVERSE,
 			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_DOWN, KAM_CONTINUOUS ) );
-		mActionMap.subscribeToActionId( ACTIONID_REVERSE, boost::bind(TheMainState::onReverse,this) );
+		mActionMap.subscribeToActionId( ACTIONID_REVERSE, boost::bind(&TheMainState::onReverse,this) );
 	}
 	virtual void onExit()
 	{
@@ -248,6 +248,7 @@
 {
 	// Use default executor for convenience.
 	// It's always possible to manually execute TheApp::initialise() etc.
-	return (raf::runApplication( TheApp() )) ? 0 : 1;
+	TheApp theApp;
+	return (raf::runApplication( theApp )) ? 0 : 1;
 }
 

Modified: trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -72,7 +72,7 @@
 	{
 	}
 
-	void onKey(const yake::input::KeyboardEvent& rEvent)
+	void onKey( const yake::input::KeyboardEvent& rEvent )
 	{
 		std::cout << "KEY: " << rEvent.keyCode << std::endl;
 		
@@ -80,7 +80,7 @@
 			requestShutdown();
 	}
 	
-	void onMB(uint8 btn)
+	void onMB( uint8 btn )
 	{
 		std::cout << "MB: " << static_cast<int>( btn ) << std::endl;
 	}

Modified: trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -25,7 +25,7 @@
    ------------------------------------------------------------------------------------
 */
 #include <yapp/vehicle/yakePCH.h>
-#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeVehicle.h>
 #include <yapp/vehicle/yakeNativeOde.h>
 
 namespace yake {

Modified: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -25,7 +25,7 @@
    ------------------------------------------------------------------------------------
 */
 #include <yapp/vehicle/yakePCH.h>
-#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeVehicle.h>
 #include <yapp/vehicle/yakeNativeOde.h>
 
 namespace yake {
@@ -203,7 +203,7 @@
 					pEngine->setMaximumForce( thrusterTpl->maxForce );
 					pEngine->setThrottle(0.);
 					subscribeToUpdateThrusterSimulation(
-						boost::bind( OdeThruster::updateSimulation, pEngine, _1 ) );
+						boost::bind( &OdeThruster::updateSimulation, pEngine, _1 ) );
 
 					// the mountable thruster wrapper
 					if (thrusterTpl->mountPtIdx != MPID_NO_PARENT)
@@ -214,7 +214,7 @@
 						pMounted->addTarget( mpChassis->getBodyPtr() );
 
 						subscribeToApplyThrusterToTargets(
-							boost::bind( OdeMountedThruster::applyToTargets, pMounted ) );
+							boost::bind( &OdeMountedThruster::applyToTargets, pMounted ) );
 
 						mMountPoints[thrusterTpl->mountPtIdx]->attach( pMounted );
 					}

Modified: trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -25,7 +25,7 @@
    ------------------------------------------------------------------------------------
 */
 #include <yapp/vehicle/yakePCH.h>
-#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeVehicle.h>
 #include <yapp/vehicle/yakeNativeOde.h>
 
 namespace yake {

Modified: trunk/yake/src/yapp/vehicle/yakeVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeVehicle.cpp	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/src/yapp/vehicle/yakeVehicle.cpp	2005-10-06 18:03:10 UTC (rev 996)
@@ -25,7 +25,7 @@
    ------------------------------------------------------------------------------------
 */
 #include <yapp/vehicle/yakePCH.h>
-#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeVehicle.h>
 #include <yapp/vehicle/yakeNativeOde.h>
 
 namespace yake {

Modified: trunk/yake/yake/base/Makefile.am
===================================================================
--- trunk/yake/yake/base/Makefile.am	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/yake/base/Makefile.am	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,4 +1,10 @@
 INCLUDES = 
 METASOURCES = AUTO
-include_HEADERS =  yakeByteSwapInputStreamDecorator.h yakeByteSwapOutputStreamDecorator.h yakeConfigFile.h yakeCriticalSection.h yakeDataChunk.h yakeDebugLogAppender.h yakeDebugOutputStream.h yakeException.h yake.h yakeInputStreamDecorator.h yakeInputStream.h yakeLibrary.h yakeLock.h yakeLog.h yakeMimeTypeManager.h yakeMovable.h yakeOutputStreamDecorator.h yakeOutputStream.h yakePCH.h yakePlatform.h yakePlugin.h yakePrerequisites.h yakeProcessor.h yakeResource.h yakeSerializable.h yakeState.h yakeString.h yakeTimer.h yakeUniqueId.h yakeUniqueName.h yakeVersion.h
+include_HEADERS = yakeByteSwapInputStreamDecorator.h \
+	yakeByteSwapOutputStreamDecorator.h yakeConfigFile.h yakeCriticalSection.h yakeDataChunk.h \
+	yakeDebugLogAppender.h yakeDebugOutputStream.h yakeException.h yake.h \
+	yakeInputStreamDecorator.h yakeInputStream.h yakeLibrary.h yakeLock.h yakeLog.h \
+	yakeMimeTypeManager.h yakeMovable.h yakeOutputStreamDecorator.h yakeOutputStream.h yakePCH.h \
+	yakePlatform.h yakePlugin.h yakePrerequisites.h yakeProcessor.h yakeResource.h \
+	yakeSerializable.h yakeString.h yakeTimer.h yakeUniqueId.h yakeUniqueName.h yakeVersion.h
 SUBDIRS = prerequisites templates mpl native math

Modified: trunk/yake/yake/base/prerequisites/yakePrerequisitesGCC.h
===================================================================
--- trunk/yake/yake/base/prerequisites/yakePrerequisitesGCC.h	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/yake/base/prerequisites/yakePrerequisitesGCC.h	2005-10-06 18:03:10 UTC (rev 996)
@@ -40,7 +40,9 @@
 //#	include <wchar.h>
 #	include <ext/hash_map>
 #ifdef __GNUC__
-#    if __GNUC__ < 3
+#    if __GNUC__ >= 4
+# 	include<ext/hash_fun.h> 
+#    elif __GNUC__ < 3
 #       include <ext/stl_hash_fun.h>
 #    elif __GNUC_MINOR__ < 4
 #        include <ext/stl_hash_fun.h>

Modified: trunk/yake/yake/base/templates/yakeAlgorithms.h
===================================================================
--- trunk/yake/yake/base/templates/yakeAlgorithms.h	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/yake/base/templates/yakeAlgorithms.h	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -32,7 +32,7 @@
 //============================================================================
 // Standard headers
 #ifndef YAKE_BASEPREREQUISITES_H
-#	include "yakePrerequisites.h"
+#	include <yake/base/yakePrerequisites.h>
 #endif
 // Yake
 

Modified: trunk/yake/yake/base/templates/yakeManager.h
===================================================================
--- trunk/yake/yake/base/templates/yakeManager.h	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/yake/base/templates/yakeManager.h	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -58,13 +58,11 @@
 YAKE_DECLARE_CLASS( yake::base::templates::DefaultManagerError<> )
     static Value_ OnUnknownType( Identifier_ )
     {
-      YAKE_DECLARE_FUNCTION( OnUnknownType )
       YAKE_EXCEPT( "Unknown Type." );
     }
 
     static void OnNotFound( Identifier_ )
     {
-      YAKE_DECLARE_FUNCTION( OnNotFound )
       YAKE_EXCEPT( "Unkown Identifier_." );
     }
 };

Modified: trunk/yake/yake/base/yakeDebugLogAppender.h
===================================================================
--- trunk/yake/yake/base/yakeDebugLogAppender.h	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/yake/base/yakeDebugLogAppender.h	2005-10-06 18:03:10 UTC (rev 996)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under

Modified: trunk/yake/yapp/loader/yakeXODEParser.h
===================================================================
--- trunk/yake/yapp/loader/yakeXODEParser.h	2005-10-06 17:34:54 UTC (rev 995)
+++ trunk/yake/yapp/loader/yakeXODEParser.h	2005-10-06 18:03:10 UTC (rev 996)
@@ -41,6 +41,8 @@
 	class YAPP_BASE_API XODEParser
 	{
 	public:
+		typedef SharedPtr<dom::INode> NodeSharedPtr;
+		
 		XODEParser( model::Physical& rBaseModel );
 		virtual ~XODEParser() {}
 
@@ -55,7 +57,7 @@
 			\param file 
 			\return 
 		*/
-		virtual bool load( const SharedPtr<dom::INode> docNode,  physics::IWorld* pPWorld );
+		virtual bool load( const NodeSharedPtr docNode,  physics::IWorld* pPWorld );
 
 		/** Prepare for next run of load/store.
 		*/
@@ -104,44 +106,45 @@
 		/// Default implementations for common functions.
 		
 
-		virtual void readXODE( const SharedPtr<dom::INode> pNode );
-		virtual void readWorld( const SharedPtr<dom::INode> pWorldNode );
-		virtual void readSpace( const SharedPtr<dom::INode> pSpaceNode );
-		virtual void readBody( const SharedPtr<dom::INode> pBodyNode );
-		virtual void readGeom( const SharedPtr<dom::INode> pGeomNode, physics::IActor* pParentObject = NULL, const Transform& rParentTransform = Transform() );
-		virtual void readBox( const SharedPtr<dom::INode> pNode, real& sX, real& sY, real& sZ );
-		virtual void readCappedCylinder( const SharedPtr<dom::INode> pNode, real& radius, real& length );
-		virtual void readCone( const SharedPtr<dom::INode> pNode, real& radius, real& length );
-		virtual void readCylinder( const SharedPtr<dom::INode> pNode, real& radius, real& length );
-		virtual void readPlane( const SharedPtr<dom::INode> pNode, real& a, real& b, real& c, real& d );
-		virtual void readRay( const SharedPtr<dom::INode> pNode, real& length );
-		virtual void readSphere( const SharedPtr<dom::INode> pNode, real& radius );
-		virtual void readTrimesh( const SharedPtr<dom::INode> pNode, physics::TriangleMeshDesc::VertexVector& rVertices, physics::TriangleMeshDesc::IndexVector& rIndices );
-		virtual void readVertices( const SharedPtr<dom::INode> pNode, physics::TriangleMeshDesc::VertexVector& rVertices );
-		virtual void readIndices( const SharedPtr<dom::INode> pNode, physics::TriangleMeshDesc::IndexVector& rIndices );
+		virtual void readXODE( const NodeSharedPtr pNode );
+		virtual void readWorld( const NodeSharedPtr pWorldNode );
+		virtual void readSpace( const NodeSharedPtr pSpaceNode );
+		virtual void readBody( const NodeSharedPtr pBodyNode );
+		virtual void readGeom( const NodeSharedPtr pGeomNode, physics::IActor* pParentObject = NULL, const Transform& rParentTransform = Transform() );
+		virtual void readBox( const NodeSharedPtr pNode, real& sX, real& sY, real& sZ );
+		virtual void readCappedCylinder( const NodeSharedPtr pNode, real& radius, real& length );
+		virtual void readCone( const NodeSharedPtr pNode, real& radius, real& length );
+		virtual void readCylinder( const NodeSharedPtr pNode, real& radius, real& length );
+		virtual void readPlane( const NodeSharedPtr pNode, real& a, real& b, real& c, real& d );
+		virtual void readRay( const NodeSharedPtr pNode, real& length );
+		virtual void readSphere( const NodeSharedPtr pNode, real& radius );
+		virtual void readTrimesh( const NodeSharedPtr pNode, physics::TriangleMeshDesc::VertexVector& rVertices, physics::TriangleMeshDesc::IndexVector& rIndices );
+		virtual void readVertices( const NodeSharedPtr pNode, physics::TriangleMeshDesc::VertexVector& rVertices );
+		virtual void readIndices( const NodeSharedPtr pNode, physics::TriangleMeshDesc::IndexVector& rIndices );
 		
-		virtual void readTransform( const SharedPtr<dom::INode> pTransformNode, Transform& rTrans );
+		virtual void readTransform( const NodeSharedPtr pTransformNode, Transform& rTrans );
 
-		virtual void readVector3( const SharedPtr<dom::INode> pVecNode, Vector3& rVec );  
-		virtual void readPosition( const SharedPtr<dom::INode> pPosNode, Vector3& rPos );  
-		virtual void readQuaternion( const SharedPtr<dom::INode> pQuatNode, Quaternion& rQuat );
-		virtual void readRotation( const SharedPtr<dom::INode> pRotNode, Quaternion& rRot );
-		virtual void readScale( const SharedPtr<dom::INode> pScaleNode, Vector3& rScale );  
-		virtual void readAxisAngleRot( const SharedPtr<dom::INode> pRotNode, Quaternion& rRot );
-		virtual void readMass( const SharedPtr<dom::INode> pMassNode, physics::IBody& rBody, const Transform& rParentTransform ); 
-		virtual void readMassShape( const SharedPtr<dom::INode> pMShapeNode, physics::IBody& rBody, const Transform& rParentTransform ); 
-		virtual void readMassAdjust( const SharedPtr<dom::INode> pMAdjustNode, physics::IBody& rBody ); 
-		virtual void readJoint( const SharedPtr<dom::INode> pJointNode, const String& rBodyName, Transform& rParentTransform );
+		virtual void readVector3( const NodeSharedPtr pVecNode, Vector3& rVec );  
+		virtual void readPosition( const NodeSharedPtr pPosNode, Vector3& rPos );  
+		virtual void readQuaternion( const NodeSharedPtr pQuatNode, Quaternion& rQuat );
+		virtual void readRotation( const NodeSharedPtr pRotNode, Quaternion& rRot );
+		virtual void readScale( const NodeSharedPtr pScaleNode, Vector3& rScale );  
+		virtual void readAxisAngleRot( const NodeSharedPtr pRotNode, Quaternion& rRot );
+		virtual void readMass( const NodeSharedPtr pMassNode, physics::IBody& rBody, const Transform& rParentTransform ); 
+		virtual void readMassShape( const NodeSharedPtr pMShapeNode, physics::IBody& rBody, const Transform& rParentTransform ); 
+		virtual void readMassAdjust( const NodeSharedPtr pMAdjustNode, physics::IBody& rBody ); 
+		virtual void readJoint( const NodeSharedPtr pJointNode, const String& rBodyName, Transform& rParentTransform );
 		
-		virtual void readBall( const SharedPtr<dom::INode> pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
-		virtual void readFixed( const SharedPtr<dom::INode> pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
-		virtual void readHinge( const SharedPtr<dom::INode> pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
-		virtual void readHinge2( const SharedPtr<dom::INode> pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
-		virtual void readSlider( const SharedPtr<dom::INode> pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
-		virtual void readUniversal( const SharedPtr<dom::INode> pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
+		virtual void readBall( const NodeSharedPtr pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
+		virtual void readFixed( const NodeSharedPtr pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
+		virtual void readHinge( const NodeSharedPtr pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
+		virtual void readHinge2( const NodeSharedPtr pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
+		virtual void readSlider( const NodeSharedPtr pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
+		virtual void readUniversal( const NodeSharedPtr pJointNode, physics::IActor* pActor1, physics::IActor* pActor2, Transform& rJointTransform );
 		
-		virtual void readAnchor( const SharedPtr<dom::INode> pAnchorNode, Vector3& rAnchor, Transform& rJointTransform );
-		virtual void readAxis( const SharedPtr<dom::INode> pAxisNode, Vector3& rAxis, Transform& rJointTransform );
+		virtual void readAnchor( const NodeSharedPtr pAnchorNode, Vector3& rAnchor, Transform& rJointTransform );
+		virtual void readAxis( const NodeSharedPtr pAxisNode, Vector3& rAxis, Transform& rJointTransform );
+		virtual physics::IMaterialPtr XODEParser::readMaterialExt( const NodeSharedPtr pNode );
 		
 // 		readGroup
 // 		readJointgroup
@@ -150,7 +153,7 @@
 		struct JointDescription
 		{
 			String					mBody1Name; /// name of 2nd body is inside joint def  node
-			SharedPtr<dom::INode>	mJointDefNode;
+			NodeSharedPtr	mJointDefNode;
 			Transform				mParentTransform;
 		};
 	
@@ -162,7 +165,7 @@
 		void createJoint( const JointDescription& rDesc );
 		
 	private:
-		SharedPtr<dom::INode>			mDocNode;
+		NodeSharedPtr			mDocNode;
 		physics::IWorld*					mPWorld;
 		model::Physical&					mBaseModel;
 	};



From codeandroid at berlios.de  Sun Oct  9 02:45:00 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 9 Oct 2005 02:45:00 +0200
Subject: [Yake-svn] r998 - trunk/yake/src/yapp/vehicle
Message-ID: <200510090045.j990j0wf030936@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-09 02:44:57 +0200 (Sun, 09 Oct 2005)
New Revision: 998

Added:
   trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
Modified:
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
Log:
slight refactoring,
added basic .vehicle loader

Added: trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-06 18:10:33 UTC (rev 997)
+++ trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-09 00:44:57 UTC (rev 998)
@@ -0,0 +1,218 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/vehicle/yakePCH.h>
+#include <yapp/vehicle/yakeVehicle.h>
+#include <yapp/vehicle/yakeDotVehicle.h>
+
+namespace yake {
+namespace vehicle {
+
+	using namespace data::dom;
+
+	//-----------------------------------------------------
+	// Class: DotVehicleParser
+	//-----------------------------------------------------
+	DotVehicleParser::DotVehicleParser() : mpCurrVehTpl(0)
+	{
+	}
+	bool DotVehicleParser::parse( const String& fn )
+	{
+		data::dom::xml::XmlSerializer xmlSer;
+		xmlSer.parse( fn, false );
+		if (!xmlSer.getDocumentNode().get())
+			return false;
+
+		return parse( *xmlSer.getDocumentNode() );
+	}
+	bool DotVehicleParser::parse( const data::dom::INode& rootNode )
+	{
+		NodeList nodes = rootNode.getNodes();
+		ConstVectorIterator< NodeList > itN( nodes );
+		while (itN.hasMoreElements())
+		{
+			INode* pN = itN.getNext().get();
+			const String name = pN->getName();
+			if (name == "vehicleTemplate")
+			{
+				parseVehicleTpl( *pN );
+			}
+		}
+		YAKE_SAFE_DELETE( mpCurrVehTpl );
+		return true;
+	}
+	VehicleTemplate* DotVehicleParser::detachCurrentVehicleTpl()
+	{
+		VehicleTemplate* ret = mpCurrVehTpl;
+		mpCurrVehTpl = 0;
+		return ret;
+	}
+	void DotVehicleParser::parseVehicleTpl( const data::dom::INode& n )
+	{
+		YAKE_SAFE_DELETE( mpCurrVehTpl );
+		mpCurrVehTpl = new VehicleTemplate();
+
+		NodeList nodes = n.getNodes();
+		ConstVectorIterator< NodeList > itN( nodes );
+		while (itN.hasMoreElements())
+		{
+			INode* pN = itN.getNext().get();
+			const String name = pN->getName();
+			if (name == "mountPoint")
+			{
+				parseMountPoint( *pN );
+			} else if (name == "engine")
+			{
+				parseEngine( *pN );
+			}
+		}
+
+		const String tplId = n.getAttributeValueAs<String>("name");
+
+		mSigOnVehicleTpl( *this, tplId );
+		YAKE_SAFE_DELETE( mpCurrVehTpl );
+	}
+	void DotVehicleParser::parseEngine( const data::dom::INode& n )
+	{
+		String id = n.getAttributeValueAs<String>("name");
+		YAKE_ASSERT( !id.empty() );
+
+		String type = n.getAttributeValueAs<String>("type");
+		YAKE_ASSERT( !type.empty() );
+
+		if (type == "MountedThruster")
+		{
+			String mtPt = n.getAttributeValueAs<String>("mountPoint");
+			YAKE_ASSERT( !mtPt.empty() );
+
+			SharedPtr<data::dom::INode> pForcesN = n.getNodeByName("forces");
+			YAKE_ASSERT( pForcesN.get() );
+
+			mpCurrVehTpl->mEngines[ id ] = new VehicleTemplate::ThrusterTpl(
+				StringUtil::parseReal( pForcesN->getAttributeValueAs<String>("min") ),
+				StringUtil::parseReal( pForcesN->getAttributeValueAs<String>("max") ),
+				mtPt );
+		}
+		else
+		{
+			YAKE_ASSERT( 1==0 && "Unhandled engine type!" );
+		}
+	}
+	void DotVehicleParser::parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt /*= 0*/ )
+	{
+		YAKE_ASSERT( mpCurrVehTpl );
+
+		const String thisId = n.getAttributeValueAs<String>("name");
+		YAKE_ASSERT( !thisId.empty() );
+
+		Vector3 position;
+		SharedPtr<INode> pNode = n.getNodeByName("position");
+		if (pNode.get())
+			parsePosition( *pNode, position );
+
+		Quaternion orientation;
+		pNode = n.getNodeByName("orientation");
+		if (pNode.get())
+			parseOrientation( *pNode, orientation );
+
+		Vector3 direction;
+		pNode = n.getNodeByName("direction");
+		if (pNode.get())
+			parseDirection( *pNode, direction );
+
+		VehicleTemplate::MountPointTpl* thisMtPt = 0;
+
+		if (parentMtPt)
+		{
+			parentMtPt->mChildren[ thisId ] = VehicleTemplate::MountPointTpl(position);
+			thisMtPt = &(parentMtPt->mChildren[ thisId ]);
+		}
+		else 
+		{
+			mpCurrVehTpl->mMountPoints[ thisId ] = VehicleTemplate::MountPointTpl(position);
+			thisMtPt = &(mpCurrVehTpl->mMountPoints[ thisId ]);
+		}
+
+		thisMtPt->mDirection = direction.normalisedCopy();
+		thisMtPt->mOrientation = orientation;
+		thisMtPt->mUseDirection = direction.length() > 0.001;
+
+		// child mount points
+
+		NodeList nodes = n.getNodes();
+		ConstVectorIterator< NodeList > itN( nodes );
+		while (itN.hasMoreElements())
+		{
+			INode* pN = itN.getNext().get();
+			const String name = pN->getName();
+			if (name == "mountPoint")
+			{
+				parseMountPoint( *pN, thisMtPt );
+			}
+		}
+	}
+	void DotVehicleParser::parsePosition( const data::dom::INode& n, Vector3& ret )
+	{
+		ret.x = StringUtil::parseReal( n.getAttributeValueAs<String>("x") );
+		ret.y = StringUtil::parseReal( n.getAttributeValueAs<String>("y") );
+		ret.z = StringUtil::parseReal( n.getAttributeValueAs<String>("z") );
+	}
+	void DotVehicleParser::parseDirection( const data::dom::INode& n, Vector3& ret )
+	{
+		ret.x = StringUtil::parseReal( n.getAttributeValueAs<String>("x") );
+		ret.y = StringUtil::parseReal( n.getAttributeValueAs<String>("y") );
+		ret.z = StringUtil::parseReal( n.getAttributeValueAs<String>("z") );
+	}
+	void DotVehicleParser::parseOrientation( const data::dom::INode& n, Quaternion& ret )
+	{
+		if ( n.getAttributeValueAs<String>("qx") != "" )
+		{
+			ret.x = StringUtil::parseReal( n.getAttributeValueAs<String>("qx") );
+			ret.y = StringUtil::parseReal( n.getAttributeValueAs<String>("qy") );
+			ret.z = StringUtil::parseReal( n.getAttributeValueAs<String>("qz") );
+			ret.w = StringUtil::parseReal( n.getAttributeValueAs<String>("qw") );
+		}
+		else if ( n.getAttributeValueAs<String>("axisX") != "" )
+		{
+			Vector3 axis;
+			axis.x = StringUtil::parseReal( n.getAttributeValueAs<String>("axisX") );
+			axis.y = StringUtil::parseReal( n.getAttributeValueAs<String>("axisY") );
+			axis.z = StringUtil::parseReal( n.getAttributeValueAs<String>("axisZ") );
+			ret.FromAxes( &axis );
+		}
+		else if ( n.getAttributeValueAs<String>("angleX") != "" )
+		{
+			Vector3 axis;
+			axis.x = StringUtil::parseReal( n.getAttributeValueAs<String>("angleX") );
+			axis.y = StringUtil::parseReal( n.getAttributeValueAs<String>("angleY") );
+			axis.z = StringUtil::parseReal( n.getAttributeValueAs<String>("angleZ") );
+			real angle = StringUtil::parseReal( n.getAttributeValueAs<String>("angle") );
+			ret.FromAngleAxis( angle, axis );
+		}
+	}
+
+} // namespace vehicle
+} // namespace yake

Modified: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-06 18:10:33 UTC (rev 997)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-09 00:44:57 UTC (rev 998)
@@ -27,6 +27,7 @@
 #include <yapp/vehicle/yakePCH.h>
 #include <yapp/vehicle/yakeVehicle.h>
 #include <yapp/vehicle/yakeNativeOde.h>
+#include <yapp/vehicle/yakeDotVehicle.h>
 
 namespace yake {
 namespace vehicle {
@@ -39,12 +40,41 @@
 	//-----------------------------------------------------
 	OdeVehicleSystem::OdeVehicleSystem()
 	{}
+	OdeVehicleSystem::~OdeVehicleSystem()
+	{
+		mVehicleTemplates.clear();
+	}
 	IVehicle* OdeVehicleSystem::create(const VehicleTemplate& tpl, physics::IWorld& PWorld)
 	{
 		OdeVehicle* pV = new OdeVehicle();
 		pV->_create( tpl, PWorld );
 		return pV;
 	}
+	bool OdeVehicleSystem::loadTemplates(const String& fn)
+	{
+		DotVehicleParser dvp;
+		dvp.subscribeToOnVehicleTpl( boost::bind(&OdeVehicleSystem::_onVehicleTpl,this,_1,_2) );
+		bool ret = dvp.parse( fn );
+		return ret;
+	}
+	IVehicle* OdeVehicleSystem::create(const String& tplId, physics::IWorld& PWorld)
+	{
+		VehTplList::const_iterator itFind = mVehicleTemplates.find( tplId );
+		YAKE_ASSERT( itFind != mVehicleTemplates.end() );
+		if (itFind == mVehicleTemplates.end() )
+			return 0;
+		const VehicleTemplate* tpl = itFind->second.get();
+		YAKE_ASSERT( tpl );
+		if (!tpl)
+			return 0;
+		return create(*tpl,PWorld);
+	}
+	void OdeVehicleSystem::_onVehicleTpl(vehicle::DotVehicleParser& parser, const String& tplId)
+	{
+		YAKE_LOG("OdeVehicleSystem: loaded vehicle template'" + tplId + "'.");
+		mVehicleTemplates[ tplId ] = SharedPtr<vehicle::VehicleTemplate>( parser.detachCurrentVehicleTpl() );
+		YAKE_ASSERT( mVehicleTemplates[ tplId ] );
+	}
 
 	//-----------------------------------------------------
 	// Class: OdeVehicle
@@ -64,12 +94,12 @@
 
 		ConstDequeIterator< EnginePtrList > itEngine( mEngines );
 		while (itEngine.hasMoreElements())
-			delete itEngine.getNext();
+			delete itEngine.getNext().second;
 		mEngines.clear();
 
 		ConstDequeIterator< MountPointList > itMP( mMountPoints );
 		while (itMP.hasMoreElements())
-			delete itMP.getNext();
+			delete itMP.getNext().second;
 		mMountPoints.clear();
 
 		mpChassis->getCreator()->destroyActor( mpChassis );
@@ -80,27 +110,43 @@
 		ConstDequeIterator< EnginePtrList > itEngine( mEngines );
 		while (itEngine.hasMoreElements())
 		{
-			IEngine* pEngine = itEngine.getNext();
+			IEngine* pEngine = itEngine.getNext().second;
 			pEngine->updateSimulation(timeElapsed);
 		}
 		//
 		mSigUpdateThrusterSimulation( timeElapsed );
 		mSigApplyThrusterToTargets();
 	}
-	MountPoint* OdeVehicle::getMountPoint(size_t index) const
+	MountPoint* OdeVehicle::getMountPoint(const String& id) const
 	{
-		YAKE_ASSERT( index < mMountPoints.size() );
-		if (index >= mMountPoints.size())
+		YAKE_ASSERT( !id.empty() );
+		if (id.empty())
 			return 0;
-		return mMountPoints.at(index);
+		MountPointList::const_iterator itFind = mMountPoints.find(id);
+		YAKE_ASSERT( itFind != mMountPoints.end() );
+		if (itFind == mMountPoints.end())
+			return 0;
+		return itFind->second;
 	}
-	IEngine* OdeVehicle::getEngineInterface(size_t index) const
+	IEngine* OdeVehicle::getEngineInterface(const String& id) const
 	{
-		YAKE_ASSERT( index < mEngines.size() );
-		if (index >= mEngines.size())
+		YAKE_ASSERT( !id.empty() );
+		if (id.empty())
 			return 0;
-		return mEngines.at(index);
+		EnginePtrList::const_iterator itFind = mEngines.find(id);
+		YAKE_ASSERT( itFind != mEngines.end() );
+		if (itFind == mEngines.end())
+			return 0;
+		return itFind->second;
 	}
+	IEnginePtrList OdeVehicle::getEngineInterfaces() const
+	{
+		IEnginePtrList engines;
+		ConstVectorIterator< EnginePtrList > itEngine( mEngines );
+		while (itEngine.hasMoreElements())
+			engines.push_back( itEngine.getNext().second );
+		return engines;
+	}
 	IWheel* OdeVehicle::getWheelInterface(size_t index) const
 	{
 		YAKE_ASSERT( index < mWheels.size() );
@@ -123,6 +169,36 @@
 		YAKE_ASSERT( mpChassis );
 		return mpChassis;
 	}
+	void OdeVehicle::_createMountPoint(const String& id, const VehicleTemplate::MountPointTpl& mtPtTpl,MountPoint* parentMtPt)
+	{
+		MountPoint* thisMtPt = new OdeMountPoint();
+
+		// link to parent if necessary
+		if (parentMtPt)
+			parentMtPt->addChild( thisMtPt );
+		else
+		{
+			mMountPoints[ id ] = thisMtPt;
+			thisMtPt->setOverrideParentMovable( mpChassis );
+		}
+
+		//
+		thisMtPt->setPosition( mtPtTpl.mPosition );
+		if (mtPtTpl.mUseDirection)
+			thisMtPt->setDirection( mtPtTpl.mDirection );
+		else
+			thisMtPt->setOrientation( mtPtTpl.mOrientation );
+
+		// child mount points
+		ConstVectorIterator< VehicleTemplate::MountPointTplList > itMP( mtPtTpl.mChildren );
+		while (itMP.hasMoreElements())
+		{
+			const std::pair<String,VehicleTemplate::MountPointTpl> mptTplEntry = itMP.getNext();
+			const VehicleTemplate::MountPointTpl& childMtPtTpl = mptTplEntry.second;
+
+			_createMountPoint( mptTplEntry.first, childMtPtTpl, thisMtPt );
+		}
+	}
 	void OdeVehicle::_create(const VehicleTemplate& tpl, physics::IWorld& PWorld )
 	{
 		// chassis
@@ -136,39 +212,14 @@
 		mpChassis->getBody().setMass( tpl.mChassis.mMass );
 
 		// mount points
-		MountPointList allMPs;
 		ConstDequeIterator< VehicleTemplate::MountPointTplList > itMP( tpl.mMountPoints );
 		while (itMP.hasMoreElements())
 		{
-			const VehicleTemplate::MountPointTpl mptTpl = itMP.getNext();
-			MountPoint* pMP = new OdeMountPoint();
-			pMP->setPosition( mptTpl.mPosition );
-			if (mptTpl.mUseDirection)
-				pMP->setDirection( mptTpl.mDirection );
-			else
-				pMP->setOrientation( mptTpl.mOrientation );
+			const std::pair<String,VehicleTemplate::MountPointTpl> mptTplEntry = itMP.getNext();
+			const VehicleTemplate::MountPointTpl& mptTpl = mptTplEntry.second;
 
-			allMPs.push_back( pMP );
-
-			if (mptTpl.mParentMountPointIdx == MPID_NO_PARENT)
-			{
-				mMountPoints.push_back( pMP );
-				pMP->setOverrideParentMovable( mpChassis );
-			}
-			//mptTpl.
+			_createMountPoint( mptTplEntry.first, mptTpl );
 		}
-		size_t idx = 0;
-		itMP.reset( tpl.mMountPoints );
-		while (itMP.hasMoreElements())
-		{
-			const VehicleTemplate::MountPointTpl mptTpl = itMP.getNext();
-			if (mptTpl.mParentMountPointIdx != MPID_NO_PARENT)
-			{
-				allMPs.at(mptTpl.mParentMountPointIdx)->addChild( allMPs.at(idx), true );
-			}
-			++idx;
-		}
-		allMPs.clear();
 
 		// engines
 		ConstDequeIterator< VehicleTemplate::EngineTplList > itEngineTpl( tpl.mEngines );
@@ -176,7 +227,8 @@
 		{
 			//@todo refactor to avoid casting... ?
 
-			const VehicleTemplate::EngineTpl* engineTpl = itEngineTpl.getNext();
+			const VehicleTemplate::EngineTplList::value_type engineTplEntry = itEngineTpl.getNext();
+			const VehicleTemplate::EngineTpl* engineTpl = engineTplEntry.second;
 
 			//@todo replace dynamic_casts with static_casts in release mode ?
 
@@ -185,7 +237,7 @@
 			if (carEngineTpl)
 			{
 				OdeCarEngine* pEngine = new OdeCarEngine();
-				mEngines.push_back(pEngine);
+				mEngines[ engineTplEntry.first ] = pEngine;
 				pEngine->setParamMaxRPM( carEngineTpl->rpmMax_ );
 				pEngine->setParamMinRPM( carEngineTpl->rpmMin_ );
 				pEngine->setParamRedlineRPM( carEngineTpl->rpmRedline_ );
@@ -198,15 +250,15 @@
 				{
 					// thruster itself
 					OdeThruster* pEngine = new OdeThruster();
-					mEngines.push_back(pEngine);
+					mEngines[ engineTplEntry.first ] = pEngine;
 					pEngine->setMinimumForce( thrusterTpl->minForce );
 					pEngine->setMaximumForce( thrusterTpl->maxForce );
 					pEngine->setThrottle(0.);
 					subscribeToUpdateThrusterSimulation(
 						boost::bind( &OdeThruster::updateSimulation, pEngine, _1 ) );
 
-					// the mountable thruster wrapper
-					if (thrusterTpl->mountPtIdx != MPID_NO_PARENT)
+					// the thruster is attached to a mount point, create wrapper:
+					if (thrusterTpl->mountPt != MPID_NO_PARENT)
 					{
 						OdeMountedThruster* pMounted = new OdeMountedThruster();
 						pMounted->setThruster( pEngine );
@@ -216,7 +268,7 @@
 						subscribeToApplyThrusterToTargets(
 							boost::bind( &OdeMountedThruster::applyToTargets, pMounted ) );
 
-						mMountPoints[thrusterTpl->mountPtIdx]->attach( pMounted );
+						mMountPoints[thrusterTpl->mountPt]->attach( pMounted );
 					}
 				}
 			}



From codeandroid at berlios.de  Sun Oct  9 02:45:24 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 9 Oct 2005 02:45:24 +0200
Subject: [Yake-svn] r999 - trunk/yake/src/yapp/samples/base/vehicle
Message-ID: <200510090045.j990jO20031236@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-09 02:45:22 +0200 (Sun, 09 Oct 2005)
New Revision: 999

Modified:
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
Log:
slight refactoring,
added basic .vehicle loader

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-09 00:44:57 UTC (rev 998)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-09 00:45:22 UTC (rev 999)
@@ -42,13 +42,13 @@
 	{
 	}
 private:
-	void _createThrusterVisual(size_t mtPtIdx, graphics::ISceneNode& parentSN)
+	void _createThrusterVisual(const String& mtPtId, const String& engineId, graphics::ISceneNode& parentSN)
 	{
 		graphics::ISceneNode* pSN = parentSN.createChildNode();
 		graphics::IParticleSystem* pPS = getGraphicalWorld()->createParticleSystem("thruster1");
 		pSN->attachParticleSystem( pPS );
-		mComplex->addLink( mVehicle->getMountPoint(mtPtIdx), pSN );
-		_regThrusterPs( mtPtIdx, *pPS );
+		mComplex->addLink( mVehicle->getMountPoint(mtPtId), pSN );
+		_regThrusterPs( engineId, *pPS );
 	}
 protected:
 	virtual void onCreateScene()
@@ -69,31 +69,39 @@
 		// vehicle
 		SharedPtr<vehicle::IVehicleSystem> pVS = //create<vehicle::IVehicleSystem>("ode");
 			SharedPtr<vehicle::IVehicleSystem>(new vehicle::OdeVehicleSystem());
+
+		pVS->loadTemplates("../../media/vehicles/jet.xml");
+
+		
+#if 1	// <= Set to 1 in order to create the jet vehicle in code, or
+		//    set to 0 to load it from .vehicle file (see below).
+
 		vehicle::VehicleTemplate tpl;
 		tpl.mChassis.mChassisShapes.push_back(
 			new physics::IShape::BoxDesc(Vector3(1,1,2)) );
-		// mount point 0 for right thruster
-		tpl.mMountPoints.push_back(
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(80,0,0), Vector3(1,0,0) ) );
-		// mount point 1 for left thruster
-		tpl.mMountPoints.push_back(
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(-80,0,0), Vector3(-1,0,0) ) );
-		// mount point 2 for rear thruster
-		tpl.mMountPoints.push_back(
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,-80), Vector3(0,0,-1) ) );
-		// mount point 3 for front thruster
-		tpl.mMountPoints.push_back(
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,70), Vector3(0,0,1) ) );
-		// upward mount point - at center of vehicle
-		// thrusters
-		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,0) );
-		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,1) );
-		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,2) );
-		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,3) );
+		// mount points:
+		// mount point for left thruster
+		tpl.mMountPoints["left"] = 
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(70,0,0), Vector3(1,0,0) );
+		// mount point for right thruster
+		tpl.mMountPoints["right"] = 
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(-70,0,0), Vector3(-1,0,0) );
+		// mount point for rear thruster
+		tpl.mMountPoints["rear"] = 
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,-80), Vector3(0,0,-1) );
+		// mount point for front thruster
+		tpl.mMountPoints["front"] = 
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,70), Vector3(0,0,1) );
+		// thrusters:
+		tpl.mEngines["left"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,"left");
+		tpl.mEngines["right"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,"right");
+		tpl.mEngines["forward"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,"rear");
+		tpl.mEngines["backward"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,"front");
 		mVehicle = pVS->create( tpl, *getPhysicalWorld() );
+#else
+		mVehicle = pVS->create("jet", *getPhysicalWorld() );
+#endif
 
-		//pV->getChassisPosition();
-
 		// create container (e.g. for graphical objects and links)
 		mComplex = new model::complex::Model();
 		model::Graphical* pG = new model::Graphical();
@@ -106,10 +114,10 @@
 		pG->addSceneNode(pSN);
 
 		// - thruster visuals
-		_createThrusterVisual( 0, *pSN );
-		_createThrusterVisual( 1, *pSN );
-		_createThrusterVisual( 2, *pSN );
-		_createThrusterVisual( 3, *pSN );
+		_createThrusterVisual( "left", "left", *pSN );
+		_createThrusterVisual( "right", "right", *pSN );
+		_createThrusterVisual( "front", "backward", *pSN );
+		_createThrusterVisual( "rear", "forward", *pSN );
 
 		// create visual <-> physics links
 		mComplex->addLink( mVehicle->getChassisMovable(), pSN );
@@ -152,23 +160,25 @@
 		getApp().getMouseEventGenerator()->update();
 		mActionMap.update();
 
-		for (size_t i=0; i<4; ++i)
+		vehicle::IEnginePtrList engines = mVehicle->getEngineInterfaces();
+		ConstDequeIterator< vehicle::IEnginePtrList > itEngine( engines );
+		while (itEngine.hasMoreElements())
 		{
-			mVehicle->getEngineInterface(i)->setThrottle(
-				mVehicle->getEngineInterface(i)->getThrottle() - timeElapsed * 1.7 );
+			vehicle::IEngine* pEngine = itEngine.getNext();
+			pEngine->setThrottle( pEngine->getThrottle() - timeElapsed * 1.7 );
 		}
 		ConstDequeIterator< ActionIdList > itAction( mActiveActions );
 		while (itAction.hasMoreElements())
 		{
 			const input::ActionId activeId = itAction.getNext();
 			if (activeId == input::ACTIONID_STRAFE_LEFT)
-				mVehicle->getEngineInterface(1)->setThrottle(1.);
+				mVehicle->getEngineInterface("right")->setThrottle(1.);
 			else if (activeId == input::ACTIONID_STRAFE_RIGHT)
-				mVehicle->getEngineInterface(0)->setThrottle(1.);
+				mVehicle->getEngineInterface("left")->setThrottle(1.);
 			else if (activeId == input::ACTIONID_FORWARD)
-				mVehicle->getEngineInterface(2)->setThrottle(1.);
+				mVehicle->getEngineInterface("forward")->setThrottle(1.);
 			else if (activeId == input::ACTIONID_REVERSE)
-				mVehicle->getEngineInterface(3)->setThrottle(1.);
+				mVehicle->getEngineInterface("backward")->setThrottle(1.);
 		}
 
 		mVehicle->updateSimulation( timeElapsed );
@@ -190,41 +200,41 @@
 	void onReverse()
 	{ mActiveActions.insert( input::ACTIONID_REVERSE ); }
 private:
-	void _regThrusterPs(size_t idx, graphics::IParticleSystem& ps)
+	void _regThrusterPs(const String& engineId, graphics::IParticleSystem& ps)
 	{
-		mEmitterMinVel[ idx ] = ps.getMinVelocity(0);
-		mEmitterMaxVel[ idx ] = ps.getMaxVelocity(0);
-		mEmitterEmissionRate[ idx ] = ps.getEmissionRate(0);
-		mThrusterPs[ idx ] = &ps;
+		mEmitterMinVel[ engineId ] = ps.getMinVelocity(0);
+		mEmitterMaxVel[ engineId ] = ps.getMaxVelocity(0);
+		mEmitterEmissionRate[ engineId ] = ps.getEmissionRate(0);
+		mThrusterPs[ engineId ] = &ps;
 	}
 	void _updateThrusterPs()
 	{
 		ConstDequeIterator< ThrusterPsMap > itM( mThrusterPs );
 		while (itM.hasMoreElements())
 		{
-			std::pair<size_t,graphics::IParticleSystem*> p = itM.getNext();
-			size_t idxMtPt = p.first;
+			std::pair<String,graphics::IParticleSystem*> p = itM.getNext();
+			const String mtPtId = p.first;
 			graphics::IParticleSystem* ps = p.second;
-			const real throttle = mVehicle->getEngineInterface(idxMtPt)->getThrottle();
+			const real throttle = mVehicle->getEngineInterface(mtPtId)->getThrottle();
 
-			real rate = throttle * mEmitterEmissionRate[ idxMtPt ];
+			real rate = throttle * mEmitterEmissionRate[ mtPtId ];
 			ps->setEmissionRate( 0, rate );
 
-			real vel = throttle * mEmitterMaxVel[ idxMtPt ];
+			real vel = throttle * mEmitterMaxVel[ mtPtId ];
 			ps->setMaxVelocity( 0, vel );
 
-			vel = throttle * mEmitterMinVel[ idxMtPt ];
+			vel = throttle * mEmitterMinVel[ mtPtId ];
 			ps->setMinVelocity( 0, vel );
 		}
 	}
 private:
 	vehicle::IVehicle*		mVehicle;
 	model::complex::Model*	mComplex;
-	typedef AssocVector<size_t,real> EmitterRealMap;
+	typedef AssocVector<String,real> EmitterRealMap;
 	EmitterRealMap			mEmitterMinVel;
 	EmitterRealMap			mEmitterMaxVel;
 	EmitterRealMap			mEmitterEmissionRate;
-	typedef AssocVector<size_t,graphics::IParticleSystem*> ThrusterPsMap;
+	typedef AssocVector<String,graphics::IParticleSystem*> ThrusterPsMap;
 	ThrusterPsMap			mThrusterPs;
 	input::ActionMap		mActionMap;
 



From codeandroid at berlios.de  Sun Oct  9 02:45:52 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 9 Oct 2005 02:45:52 +0200
Subject: [Yake-svn] r1000 - trunk/yake/common/media/vehicles
Message-ID: <200510090045.j990jqrp031583@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-09 02:45:51 +0200 (Sun, 09 Oct 2005)
New Revision: 1000

Added:
   trunk/yake/common/media/vehicles/jet.xml
Log:
initial revision

Added: trunk/yake/common/media/vehicles/jet.xml
===================================================================
--- trunk/yake/common/media/vehicles/jet.xml	2005-10-09 00:45:22 UTC (rev 999)
+++ trunk/yake/common/media/vehicles/jet.xml	2005-10-09 00:45:51 UTC (rev 1000)
@@ -0,0 +1,45 @@
+<dotvehicle>
+	<vehicleTemplate name="jet">
+		<!-- chassis -->
+		<chassis>
+			<body totalMass="10" />
+			<shapeset>
+				<box x="1.5" y="1" z="2">
+					<position x="0" y="0" z="0" />
+				</box>
+			</shapeset>
+		</chassis>
+		<!-- left thruster -->
+		<mountPoint name="left">
+			<position x="70" y="0" z="0" />
+			<direction x="1" y="0" z="0" />
+		</mountPoint>
+		<engine name="left" type="MountedThruster" mountPoint="left">
+			<forces min="0." max="10." dieOff="4" rise="8" />
+		</engine>
+		<!-- right thruster -->
+		<mountPoint name="right">
+			<position x="-70" y="0" z="0" />
+			<direction x="-1" y="0" z="0" />
+		</mountPoint>
+		<engine name="right" type="MountedThruster" mountPoint="right">
+			<forces min="0." max="10." dieOff="4" rise="8" />
+		</engine>
+		<!-- front thruster -->
+		<mountPoint name="front">
+			<position x="0" y="0" z="70" />
+			<direction x="0" y="0" z="1" />
+		</mountPoint>
+		<engine name="backward" type="MountedThruster" mountPoint="front">
+			<forces min="0." max="10." dieOff="4" rise="8" />
+		</engine>
+		<!-- rear thruster -->
+		<mountPoint name="rear">
+			<position x="0" y="0" z="-70" />
+			<direction x="0" y="0" z="-1" />
+		</mountPoint>
+		<engine name="forward" type="MountedThruster" mountPoint="rear">
+			<forces min="0." max="20." dieOff="10" rise="20" />
+		</engine>
+	</vehicleTemplate>
+</dotvehicle>
\ No newline at end of file



From codeandroid at berlios.de  Sun Oct  9 02:46:20 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 9 Oct 2005 02:46:20 +0200
Subject: [Yake-svn] r1001 - trunk/yake/yapp/vehicle
Message-ID: <200510090046.j990kKad032154@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-09 02:46:18 +0200 (Sun, 09 Oct 2005)
New Revision: 1001

Added:
   trunk/yake/yapp/vehicle/yakeDotVehicle.h
Modified:
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeNativeOde.h
   trunk/yake/yapp/vehicle/yakeTemplates.h
   trunk/yake/yapp/vehicle/yakeVehicleSystem.h
Log:
slight refactoring,
added basic .vehicle loader

Added: trunk/yake/yapp/vehicle/yakeDotVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-09 00:45:51 UTC (rev 1000)
+++ trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-09 00:46:18 UTC (rev 1001)
@@ -0,0 +1,72 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_DOTVEHICLE_H
+#define YAKE_VEHICLE_DOTVEHICLE_H
+
+#include "yakePrerequisites.h"
+#include "yakeTemplates.h"
+
+namespace yake {
+	namespace data {
+		namespace dom {
+			class INode;
+		}
+	}
+namespace vehicle {
+
+	class YAKE_VEH_API DotVehicleParser
+	{
+	public:
+		DotVehicleParser();
+		bool parse( const String& fn );
+		bool parse( const data::dom::INode& rootNode );
+
+		VehicleTemplate* detachCurrentVehicleTpl();
+
+		YAKE_MEMBERSIGNAL(public,void(DotVehicleParser&,const String&),OnVehicleTpl);
+	private:
+		void parseVehicleTpl( const data::dom::INode& n );
+		 void parseChassis( const data::dom::INode& n );
+		  void parseBody( const data::dom::INode& n );
+		  void parseShapeSet( const data::dom::INode& n );
+		   void parseShape( const data::dom::INode& n );
+		   void parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt = 0 );
+		 void parseEngine( const data::dom::INode& n );
+		void parseEngineTpl( const data::dom::INode& n );
+
+		void parsePosition( const data::dom::INode& n, Vector3& ret );
+		void parseOrientation( const data::dom::INode& n, Quaternion& ret );
+		void parseDirection( const data::dom::INode& n, Vector3& ret );
+
+		VehicleTemplate*	mpCurrVehTpl;
+	};
+
+} // namespace vehicle
+} // namespace yake
+
+
+#endif

Modified: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-09 00:45:51 UTC (rev 1000)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-09 00:46:18 UTC (rev 1001)
@@ -34,6 +34,7 @@
 namespace vehicle {
 
 	class IEngine;
+	typedef Deque<IEngine*> IEnginePtrList;
 	class IWheel;
 	class MountPoint;
 	class Mountable;
@@ -51,8 +52,9 @@
 		//virtual void addMountPoint(MountPoint*) = 0;
 		//virtual MountPoint* removeMountPoint(MountPoint*) = 0;
 
-		virtual MountPoint* getMountPoint(size_t index) const = 0;
-		virtual IEngine* getEngineInterface(size_t index) const = 0;
+		virtual MountPoint* getMountPoint(const String& id) const = 0;
+		virtual IEngine* getEngineInterface(const String& id) const = 0;
+		virtual IEnginePtrList getEngineInterfaces() const = 0;
 		virtual IWheel* getWheelInterface(size_t index) const = 0;
 
 		virtual Vector3 getChassisPosition() const = 0;

Modified: trunk/yake/yapp/vehicle/yakeNativeOde.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-09 00:45:51 UTC (rev 1000)
+++ trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-09 00:46:18 UTC (rev 1001)
@@ -32,12 +32,21 @@
 namespace yake {
 namespace vehicle {
 
+	class DotVehicleParser;
 	class YAKE_VEH_API OdeVehicleSystem : public IVehicleSystem
 	{
 		YAKE_DECLARE_CONCRETE(OdeVehicleSystem,"ode");
 	public:
 		OdeVehicleSystem();
+		~OdeVehicleSystem();
 		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld);
+		virtual bool loadTemplates(const String& fn);
+		virtual IVehicle* create(const String& tpl, physics::IWorld& PWorld);
+	private:
+		void _onVehicleTpl(DotVehicleParser& parser, const String& tplId);
+	private:
+		typedef AssocVector<String,SharedPtr<vehicle::VehicleTemplate> > VehTplList;
+		VehTplList				mVehicleTemplates;
 	};
 
 	class OdeWheel;
@@ -52,9 +61,10 @@
 		//virtual void addMountPoint(MountPoint*);
 		//virtual MountPoint* removeMountPoint(MountPoint*);
 
-		virtual MountPoint* getMountPoint(size_t index) const;
+		virtual MountPoint* getMountPoint(const String& id) const;
 
-		virtual IEngine* getEngineInterface(size_t index) const;
+		virtual IEngine* getEngineInterface(const String& id) const;
+		virtual IEnginePtrList getEngineInterfaces() const;
 		virtual IWheel* getWheelInterface(size_t index) const;
 
 		virtual Vector3 getChassisPosition() const;
@@ -65,8 +75,11 @@
 
 		YAKE_MEMBERSIGNAL(private,void(real),UpdateThrusterSimulation);
 		YAKE_MEMBERSIGNAL(private,void(void),ApplyThrusterToTargets);
+
 	private:
-		typedef Deque<IEngine*> EnginePtrList;
+		void _createMountPoint(const String& id, const VehicleTemplate::MountPointTpl&,MountPoint* parentMtPt = 0);
+	private:
+		typedef AssocVector<String,IEngine*> EnginePtrList;
 		EnginePtrList		mEngines; // owner of all engine objects
 
 		physics::IActorPtr	mpChassis;
@@ -77,7 +90,7 @@
 		typedef Deque<OdeWheel*> WheelList;
 		WheelList			mWheels;
 
-		typedef Deque<MountPoint*> MountPointList;
+		typedef AssocVector<String,MountPoint*> MountPointList;
 		MountPointList		mMountPoints;
 	};
 

Modified: trunk/yake/yapp/vehicle/yakeTemplates.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-09 00:45:51 UTC (rev 1000)
+++ trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-09 00:46:18 UTC (rev 1001)
@@ -32,36 +32,39 @@
 namespace yake {
 namespace vehicle {
 
-	const size_t MPID_NO_PARENT = 0xffffffff;
+	const String MPID_NO_PARENT = String("");
 	struct VehicleTemplate
 	{
+		struct MountPointTpl;
+		typedef AssocVector< String, MountPointTpl > MountPointTplList;
 		struct MountPointTpl
 		{
-			Vector3		mPosition;
-			Quaternion	mOrientation;
-			Vector3		mDirection;
-			size_t		mParentMountPointIdx;
-			bool		mUseDirection;
+			Vector3				mPosition;
+			Quaternion			mOrientation;
+			Vector3				mDirection;
+			bool				mUseDirection;
+			MountPointTplList	mChildren;
 			MountPointTpl(
 				const Vector3& pos = Vector3::kZero,
-				const Quaternion rot = Quaternion::kIdentity,
-				size_t parentMountPoint = MPID_NO_PARENT) :
+				const Quaternion rot = Quaternion::kIdentity) :
 				mPosition(pos),
 				mOrientation(rot),
-				mParentMountPointIdx(parentMountPoint),
 				mUseDirection(false)
 			{}
 			MountPointTpl(
 				const Vector3& pos,
-				const Vector3& dir,
-				size_t parentMountPoint = MPID_NO_PARENT) :
+				const Vector3& dir) :
 				mPosition(pos),
 				mDirection(dir),
-				mParentMountPointIdx(parentMountPoint),
 				mUseDirection(true)
 			{}
+			MountPointTpl& addMountPoint(
+				const Vector3& pos = Vector3::kZero,
+				const Quaternion rot = Quaternion::kIdentity);
+			MountPointTpl& addMountPoint(
+				const Vector3& pos,
+				const Vector3& dir);
 		};
-		typedef Deque< MountPointTpl > MountPointTplList;
 		enum GearMode
 		{
 			GM_FORWARD,
@@ -83,8 +86,8 @@
 		{
 			real				minForce;
 			real				maxForce;
-			size_t				mountPtIdx;
-			ThrusterTpl(real minF = 0., real maxF = 1., size_t mtPt = 0) : minForce(minF), maxForce(maxF), mountPtIdx(mtPt) {}
+			String				mountPt;
+			ThrusterTpl(real minF = 0., real maxF = 1., const String& mtPt = "") : minForce(minF), maxForce(maxF), mountPt(mtPt) {}
 		};
 		struct CarEngineTpl : public EngineTpl
 		{
@@ -108,7 +111,7 @@
 			{}
 		};
 
-		typedef Deque<EngineTpl*> EngineTplList;
+		typedef AssocVector<String,EngineTpl*> EngineTplList;
 
 		typedef Deque<physics::IShape::Desc*> ShapeTplList;
 
@@ -164,7 +167,7 @@
 		{
 			ConstVectorIterator< EngineTplList > itEngine( mEngines );
 			while (itEngine.hasMoreElements())
-				delete itEngine.getNext();
+				delete itEngine.getNext().second;
 			mEngines.clear();
 			ConstVectorIterator< ShapeTplList > itShape( mChassis.mChassisShapes );
 			while (itShape.hasMoreElements())

Modified: trunk/yake/yapp/vehicle/yakeVehicleSystem.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeVehicleSystem.h	2005-10-09 00:45:51 UTC (rev 1000)
+++ trunk/yake/yapp/vehicle/yakeVehicleSystem.h	2005-10-09 00:46:18 UTC (rev 1001)
@@ -37,7 +37,10 @@
 	{
 		YAKE_DECLARE_REGISTRY_0(IVehicleSystem,String);
 	public:
+		virtual ~IVehicleSystem() {}
 		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld) = 0;
+		virtual bool loadTemplates(const String& fn) = 0;
+		virtual IVehicle* create(const String& tpl, physics::IWorld& PWorld) = 0;
 	};
 
 } // namespace vehicle



From codeandroid at berlios.de  Sun Oct  9 02:46:54 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 9 Oct 2005 02:46:54 +0200
Subject: [Yake-svn] r1002 - trunk/yake/scripts/yapp
Message-ID: <200510090046.j990ksuR032674@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-09 02:46:53 +0200 (Sun, 09 Oct 2005)
New Revision: 1002

Added:
   trunk/yake/scripts/yapp/vehicle.vcproj
Log:
initial revision

Added: trunk/yake/scripts/yapp/vehicle.vcproj
===================================================================
--- trunk/yake/scripts/yapp/vehicle.vcproj	2005-10-09 00:46:18 UTC (rev 1001)
+++ trunk/yake/scripts/yapp/vehicle.vcproj	2005-10-09 00:46:53 UTC (rev 1002)
@@ -0,0 +1,203 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="7.10"
+	Name="vehicle"
+	ProjectGUID="{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}"
+	RootNamespace="yapp"
+	Keyword="Win32Proj">
+	<Platforms>
+		<Platform
+			Name="Win32"/>
+	</Platforms>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="../../common/bin/$(ConfigurationName)"
+			IntermediateDirectory="../../common/obj/$(ConfigurationName)/$(ProjectName)"
+			ConfigurationType="2"
+			CharacterSet="2">
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
+				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_CONSOLE;YAKE_VEHICLE_EXPORTS"
+				MinimalRebuild="TRUE"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="TRUE"
+				UsePrecompiledHeader="3"
+				PrecompiledHeaderThrough="yapp/vehicle/yakePCH.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="TRUE"
+				DebugInformationFormat="4"/>
+			<Tool
+				Name="VCCustomBuildTool"/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib physics.lib data.lib"
+				OutputFile="$(OutDir)/$(ProjectName).dll"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
+				GenerateDebugInformation="TRUE"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="1"
+				ImportLibrary="../../common/lib/$(ConfigurationName)/$(ProjectName).lib"
+				TargetMachine="1"/>
+			<Tool
+				Name="VCMIDLTool"/>
+			<Tool
+				Name="VCPostBuildEventTool"/>
+			<Tool
+				Name="VCPreBuildEventTool"/>
+			<Tool
+				Name="VCPreLinkEventTool"/>
+			<Tool
+				Name="VCResourceCompilerTool"/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"/>
+			<Tool
+				Name="VCWebDeploymentTool"/>
+			<Tool
+				Name="VCManagedWrapperGeneratorTool"/>
+			<Tool
+				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="../../common/bin/$(ConfigurationName)"
+			IntermediateDirectory="../../common/obj/$(ConfigurationName)/$(ProjectName)"
+			ConfigurationType="2"
+			CharacterSet="2">
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;YAKE_VEHICLE_EXPORTS"
+				RuntimeLibrary="2"
+				RuntimeTypeInfo="TRUE"
+				UsePrecompiledHeader="3"
+				PrecompiledHeaderThrough="yapp/vehicle/yakePCH.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="TRUE"
+				DebugInformationFormat="3"/>
+			<Tool
+				Name="VCCustomBuildTool"/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib physics.lib data.lib"
+				OutputFile="$(OutDir)/$(ProjectName).dll"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
+				GenerateDebugInformation="TRUE"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				ImportLibrary="../../common/lib/$(ConfigurationName)/$(ProjectName).lib"
+				TargetMachine="1"/>
+			<Tool
+				Name="VCMIDLTool"/>
+			<Tool
+				Name="VCPostBuildEventTool"/>
+			<Tool
+				Name="VCPreBuildEventTool"/>
+			<Tool
+				Name="VCPreLinkEventTool"/>
+			<Tool
+				Name="VCResourceCompilerTool"/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"/>
+			<Tool
+				Name="VCWebDeploymentTool"/>
+			<Tool
+				Name="VCManagedWrapperGeneratorTool"/>
+			<Tool
+				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="src"
+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
+			UniqueIdentifier="{E22096B0-18DC-47ae-BBBD-A51C0F018B87}">
+			<File
+				RelativePath="..\..\src\yapp\vehicle\yakeDotVehicle.cpp">
+			</File>
+			<File
+				RelativePath="..\..\src\yapp\vehicle\yakeMountPoint.cpp">
+			</File>
+			<File
+				RelativePath="..\..\src\yapp\vehicle\yakePCH.cpp">
+				<FileConfiguration
+					Name="Debug|Win32">
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32">
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\..\src\yapp\vehicle\yakeVehicle.cpp">
+			</File>
+		</Filter>
+		<Filter
+			Name="inc"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{D3A5D637-E2C0-4f5a-B733-3757A329BD6B}">
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeDotVehicle.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeInterfaces.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeMountPoint.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakePCH.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakePrerequisites.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeTemplates.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeVehicle.h">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeVehicleSystem.h">
+			</File>
+		</Filter>
+		<Filter
+			Name="nativeOde"
+			Filter="">
+			<File
+				RelativePath="..\..\src\yapp\vehicle\yakeNativeOde.cpp">
+			</File>
+			<File
+				RelativePath="..\..\yapp\vehicle\yakeNativeOde.h">
+			</File>
+			<File
+				RelativePath="..\..\src\yapp\vehicle\yakeOdeEngine.cpp">
+			</File>
+		</Filter>
+		<Filter
+			Name="nativeNx"
+			Filter="">
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>



From codeandroid at berlios.de  Sun Oct  9 02:53:58 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 9 Oct 2005 02:53:58 +0200
Subject: [Yake-svn] r1003 - trunk/yake/common/media/vehicles
Message-ID: <200510090053.j990rwCl003969@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-09 02:53:56 +0200 (Sun, 09 Oct 2005)
New Revision: 1003

Added:
   trunk/yake/common/media/vehicles/jet2.xml
Log:
initial revision

Added: trunk/yake/common/media/vehicles/jet2.xml
===================================================================
--- trunk/yake/common/media/vehicles/jet2.xml	2005-10-09 00:46:53 UTC (rev 1002)
+++ trunk/yake/common/media/vehicles/jet2.xml	2005-10-09 00:53:56 UTC (rev 1003)
@@ -0,0 +1,97 @@
+<dotvehicle>
+	<import type="dotVehicle" src="common_vehicle_components.vehicle.xml" />
+
+	<!-- declare "Jet" templates -->
+	<wheelTemplate name="jet_rear_wheel" axle="rear" radius="0.5" totalMass="1" />
+	<engineTemplate name="jet_ground_engine" type="CarEngine">
+		<gearbox numGears="2">
+			<gear idx=0 type="backward" rpm="1000" />
+			<gear idx=1 type="forward" rpm="blah" />
+		</gearbox>
+	</engineTemplate>
+	<vehicleTemplate name="jet">
+		<!-- chassis -->
+		<chassis>
+			<body totalMass="10">
+			</body>
+			<shapeset>
+				<box x="1.5" y="1" z="2">
+					<position x="0" y="0" z="0" />
+				</box>
+			</shapeset>
+		</chassis>
+		<!-- front thruster -->
+		<mountPoint name="front_reverse">
+			<position x="-2" y="0" z="1" />
+			<direction x="0" y="0" z="-1" />
+		</mountPoint>
+		<engine name="front_reverse" type="MountedThruster" mountPoint="front_reverse">
+			<forces min="0." max="10." dieOff="4" rise="8" />
+		</engine>
+		<!-- two main thrusters at the back - both are controlled by a single mount point -->
+		<mountPoint name="main_accel">
+			<position x="0" y="0" z="-1" />
+			<direction x="0" y="0" z="1" />
+			<mountPoint name="main_accel_left>
+				<position x="-0.8" y="0" z="0" />
+			</mountPoint>
+			<mountPoint name="main_accel_right>
+				<position x="0.8" y="0" z="0" />
+			</mountPoint>
+		</mountPoint>
+		<engine name="main_left" type="MountedThruster" mountPoint="main_accel_left>
+			<forces min="0." max="80." dieOff="40." rise="60." />
+		</engine>
+		<engine name="main_right" type="MountedThruster" mountPoint="main_accel_right>
+			<forces min="0." max="80." dieOff="40." rise="60." />
+		</engine>
+		<!-- 3 wheels (one in front, two at the back) 
+			Therefore we need two axles (front,back).
+			We also use a single engine to power the rear wheels.
+			The front wheel is used for steering.
+		-->
+		<axle name="front" />
+		<axle name="rear" />
+		<engine tpl="jet_ground_engine" axle="rear" /> <!-- NOTE: We create the engine from a template! -->
+		<steeringGroup name="front" />
+		<!-- Explicitely define wheel: -->
+		<wheel name="front" axle="front" radius="0.3" totalMass="1" steeringGroup="front" >
+			<position x="0" y="-0.5" z="0.9" />
+			<orientation />
+		</wheel>
+		<!-- Define rear wheels by using the wheel template "jet_rear_wheel": -->
+		<wheel tpl="jet_rear_wheel">
+			<position x="-0.5" y="-0.5" z="-0.2" />
+			<orientation />
+		</wheel>
+		<wheel tpl="jet_rear_wheel">
+			<position x="0.5" y="-0.5" z="-0.2" />
+			<orientation />
+		</wheel>
+	</vehicleTemplate>
+
+	<!-- visual vehicle representation -->
+	<vehicleVisuals name="jet_default_visuals" tpl="jet">
+		<graphical name="small_wheel" src="blah.scene" />
+		<graphical name="rear_wheel">
+			<scenenode name="wheel_sn">
+				<entity meshFile="rear_wheel.mesh" />
+			</scenenode>
+		</graphical>
+		<link type="movable">
+			<source type="wheel" name="front" />
+			<target type="graphical" name="small_wheel" />
+		</link>
+		<link type="movable">
+			<source type="wheel" name="rear_left" />
+			<target type="graphical" name="rear_wheel" />
+		</link>
+		<link type="movable">
+			<source type="wheel" name="rear_left" />
+			<target type="graphical" name="rear_wheel" />
+		</link>
+	</vehicleVisuals>
+	 
+	<!-- instantiate vehicle -->
+	<vehicleInstance tpl="jet" />
+</dotvehicle>
\ No newline at end of file



From codeandroid at berlios.de  Tue Oct 11 23:42:14 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 11 Oct 2005 23:42:14 +0200
Subject: [Yake-svn] r1004 - trunk/yake/common/media/vehicles
Message-ID: <200510112142.j9BLgEWn024946@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-11 23:42:14 +0200 (Tue, 11 Oct 2005)
New Revision: 1004

Modified:
   trunk/yake/common/media/vehicles/jet.xml
Log:
improved vehicle implementation

Modified: trunk/yake/common/media/vehicles/jet.xml
===================================================================
--- trunk/yake/common/media/vehicles/jet.xml	2005-10-09 00:53:56 UTC (rev 1003)
+++ trunk/yake/common/media/vehicles/jet.xml	2005-10-11 21:42:14 UTC (rev 1004)
@@ -3,15 +3,15 @@
 		<!-- chassis -->
 		<chassis>
 			<body totalMass="10" />
-			<shapeset>
-				<box x="1.5" y="1" z="2">
+			<shapeSet>
+				<box x="3" y="1" z="10">
 					<position x="0" y="0" z="0" />
 				</box>
-			</shapeset>
+			</shapeSet>
 		</chassis>
 		<!-- left thruster -->
 		<mountPoint name="left">
-			<position x="70" y="0" z="0" />
+			<position x="7" y="0" z="0" />
 			<direction x="1" y="0" z="0" />
 		</mountPoint>
 		<engine name="left" type="MountedThruster" mountPoint="left">
@@ -19,7 +19,7 @@
 		</engine>
 		<!-- right thruster -->
 		<mountPoint name="right">
-			<position x="-70" y="0" z="0" />
+			<position x="-7" y="0" z="0" />
 			<direction x="-1" y="0" z="0" />
 		</mountPoint>
 		<engine name="right" type="MountedThruster" mountPoint="right">
@@ -27,7 +27,7 @@
 		</engine>
 		<!-- front thruster -->
 		<mountPoint name="front">
-			<position x="0" y="0" z="70" />
+			<position x="0" y="0" z="7" />
 			<direction x="0" y="0" z="1" />
 		</mountPoint>
 		<engine name="backward" type="MountedThruster" mountPoint="front">
@@ -35,11 +35,19 @@
 		</engine>
 		<!-- rear thruster -->
 		<mountPoint name="rear">
-			<position x="0" y="0" z="-70" />
+			<position x="0" y="0" z="-7" />
 			<direction x="0" y="0" z="-1" />
 		</mountPoint>
 		<engine name="forward" type="MountedThruster" mountPoint="rear">
 			<forces min="0." max="20." dieOff="10" rise="20" />
 		</engine>
+		<!-- bottom (upward) thruster -->
+		<mountPoint name="bottom">
+			<position x="0" y="0" z="0" />
+			<direction x="0" y="-1" z="0" />
+		</mountPoint>
+		<engine name="upward" type="MountedThruster" mountPoint="bottom">
+			<forces min="0." max="70." dieOff="10" rise="20" />
+		</engine>
 	</vehicleTemplate>
 </dotvehicle>
\ No newline at end of file



From codeandroid at berlios.de  Tue Oct 11 23:42:46 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 11 Oct 2005 23:42:46 +0200
Subject: [Yake-svn] r1005 - trunk/yake/common/media/graphics.fx
Message-ID: <200510112142.j9BLgkns025026@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-11 23:42:46 +0200 (Tue, 11 Oct 2005)
New Revision: 1005

Added:
   trunk/yake/common/media/graphics.fx/thruster_jet.particle
Log:
initial revision

Added: trunk/yake/common/media/graphics.fx/thruster_jet.particle
===================================================================
--- trunk/yake/common/media/graphics.fx/thruster_jet.particle	2005-10-11 21:42:14 UTC (rev 1004)
+++ trunk/yake/common/media/graphics.fx/thruster_jet.particle	2005-10-11 21:42:46 UTC (rev 1005)
@@ -0,0 +1,37 @@
+// exhaust - fire (and smoke?)
+// source: OGRE3D
+thruster2
+{
+    	material        	Examples/Flare
+    	particle_width  	5
+    	particle_height 	5
+    	cull_each       	false
+    	quota           	200
+    	billboard_type  	point
+    
+    	// Area emitter
+    	emitter Point
+    	{
+			angle               		0.5
+        	emission_rate       		100
+			time_to_live    0.2
+			direction       0 0 1
+			velocity_min    60
+			velocity_max    70
+			colour_range_start  1 1 0.5
+			colour_range_end    1 0.8 0.3
+	}
+
+	affector ColourFader
+	{
+		red -0.25
+		green -1
+		blue -1
+	}
+
+   	affector Scaler
+   	{
+       	rate 	0.1
+   	}
+
+}



From codeandroid at berlios.de  Tue Oct 11 23:43:14 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 11 Oct 2005 23:43:14 +0200
Subject: [Yake-svn] r1006 - in trunk/yake/src/yapp: model raf samples/base/vehicle vehicle
Message-ID: <200510112143.j9BLhErl025058@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-11 23:43:13 +0200 (Tue, 11 Oct 2005)
New Revision: 1006

Modified:
   trunk/yake/src/yapp/model/yakeComplexModel.cpp
   trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
   trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
   trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
   trunk/yake/src/yapp/vehicle/yakeVehicle.cpp
Log:
improved vehicle implementation,
improved complex::Model interface

Modified: trunk/yake/src/yapp/model/yakeComplexModel.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -107,6 +107,12 @@
 	}
 
 	//-----------------------------------------------------
+	void Model::addPhysical( Physical* pPhysical, const String& rName )
+	{
+		addPhysical( SharedPtr<Physical>( pPhysical ), rName );
+	}
+
+	//-----------------------------------------------------
 	void Model::addGraphical( const SharedPtr<Graphical>& pGraphical, const String& rName )
 	{
 		YAKE_ASSERT( pGraphical.get() );
@@ -122,6 +128,12 @@
 	}
 
 	//-----------------------------------------------------
+	void Model::addGraphical( Graphical* pGraphical, const String & rName /*= ""*/ )
+	{
+		addGraphical( SharedPtr<Graphical>( pGraphical ), rName );
+	}
+
+	//-----------------------------------------------------
 	Physical* Model::getPhysicalByName( const String& rName ) const
 	{
 		PhysicalMap::const_iterator itFind = mPhysicals.find( rName );

Modified: trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp
===================================================================
--- trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -75,7 +75,7 @@
 		{
 			real now = native::getTime();
 			real elapsed = now - lastTime;
-			if (elapsed < real(0.))
+			if (elapsed < real(0.0001))
 				elapsed = real(0.01);
 
 			onFrame(elapsed);

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -14,7 +14,7 @@
 struct TheConfiguration : public raf::ApplicationConfiguration
 {
 	virtual StringVector getLibraries()
-	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsODE"; }
+	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsNx"; }
 
 	//virtual StringVector getScriptingSystems()
 	//{ return MakeStringVector() << "lua"; }
@@ -26,9 +26,11 @@
 	{ return MakeStringVector() << "ogre"; }
 
 	virtual StringVector getPhysicsSystems()
-	{ return MakeStringVector() << "ode"; }
+	{ return MakeStringVector() << "nx"; }
 };
 
+const real razorMeshScale = 0.1;
+
 /** Main application state */
 class TheMainState : public raf::RtMainState
 {
@@ -36,7 +38,8 @@
 	TheMainState(raf::Application& owner) :
 		raf::RtMainState(owner),
 		mVehicle(0),
-		mComplex(0)
+		mComplex(0),
+		mGround(0)
 	{}
 	~TheMainState()
 	{
@@ -45,11 +48,20 @@
 	void _createThrusterVisual(const String& mtPtId, const String& engineId, graphics::ISceneNode& parentSN)
 	{
 		graphics::ISceneNode* pSN = parentSN.createChildNode();
-		graphics::IParticleSystem* pPS = getGraphicalWorld()->createParticleSystem("thruster1");
+		graphics::IParticleSystem* pPS = getGraphicalWorld()->createParticleSystem("thruster2");
 		pSN->attachParticleSystem( pPS );
 		mComplex->addLink( mVehicle->getMountPoint(mtPtId), pSN );
 		_regThrusterPs( engineId, *pPS );
 	}
+	void _createWheelVisual(const String& wheelId, graphics::ISceneNode& parentSN)
+	{
+		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode();
+		graphics::IEntity* pE = getGraphicalWorld()->createEntity("sphere_d1.mesh");
+		pSN->attachEntity( pE );
+		const Vector3 scale = Vector3::kUnitScale * mVehicle->getWheelInterface(wheelId)->getRadius();
+		pSN->setScale( scale );
+		mComplex->addLink( mVehicle->getWheelInterface(wheelId), pSN );
+	}
 protected:
 	virtual void onCreateScene()
 	{
@@ -62,18 +74,41 @@
 		getGraphicalWorld()->createSceneNode("lightnode0")->attachLight( pLight );
 
 		// position camera and look at the ninja
+		getDefaultCamera()->setNearClipDistance( 1 );
 		getDefaultCamera()->setFixedYawAxis(Vector3::kUnitY);
-		getDefaultCamera()->setPosition(Vector3(100,20,-400));
-		getDefaultCamera()->lookAt(Vector3(0,100,0));
+		getDefaultCamera()->setPosition(Vector3(0,0,-40));
 
+		// create ground
+		mGround = new model::complex::Model();
+		{
+			// visual
+			graphics::ISceneNode* pGroundSN = getGraphicalWorld()->createSceneNode();
+			graphics::IEntity* pGroundE = getGraphicalWorld()->createEntity("plane_1x1.mesh");
+			pGroundE->setMaterial("box");
+			pGroundSN->attachEntity( pGroundE );
+			pGroundSN->setScale( Vector3(100,1,100) );
+			pGroundSN->setPosition( Vector3(0,-10,0) );
+
+			model::Graphical* pG = new model::Graphical();
+			pG->addSceneNode( pGroundSN );
+			mGround->addGraphical( pG );
+
+			// physical
+			physics::IActorPtr pGroundPlane = getPhysicalWorld()->createActor( physics::ACTOR_STATIC );
+			pGroundPlane->createShape( physics::IShape::PlaneDesc( Vector3(0,1,0), -10 ) );
+
+			model::Physical* pP = new model::Physical();
+			pP->addActor( pGroundPlane, "groundPlane" );
+			mGround->addPhysical( pP );
+		}
+
 		// vehicle
-		SharedPtr<vehicle::IVehicleSystem> pVS = //create<vehicle::IVehicleSystem>("ode");
-			SharedPtr<vehicle::IVehicleSystem>(new vehicle::OdeVehicleSystem());
+		SharedPtr<vehicle::IVehicleSystem> pVS = //create<vehicle::IVehicleSystem>("generic");
+			SharedPtr<vehicle::IVehicleSystem>(new vehicle::GenericVehicleSystem());
 
 		pVS->loadTemplates("../../media/vehicles/jet.xml");
 
-		
-#if 1	// <= Set to 1 in order to create the jet vehicle in code, or
+#if 0	// <= Set to 1 in order to create the jet vehicle in code, or
 		//    set to 0 to load it from .vehicle file (see below).
 
 		vehicle::VehicleTemplate tpl;
@@ -82,16 +117,16 @@
 		// mount points:
 		// mount point for left thruster
 		tpl.mMountPoints["left"] = 
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(70,0,0), Vector3(1,0,0) );
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(7,0,0), Vector3(1,0,0) );
 		// mount point for right thruster
 		tpl.mMountPoints["right"] = 
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(-70,0,0), Vector3(-1,0,0) );
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(-7,0,0), Vector3(-1,0,0) );
 		// mount point for rear thruster
 		tpl.mMountPoints["rear"] = 
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,-80), Vector3(0,0,-1) );
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,-8), Vector3(0,0,-1) );
 		// mount point for front thruster
 		tpl.mMountPoints["front"] = 
-			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,70), Vector3(0,0,1) );
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,7), Vector3(0,0,1) );
 		// thrusters:
 		tpl.mEngines["left"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,"left");
 		tpl.mEngines["right"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,"right");
@@ -99,6 +134,19 @@
 		tpl.mEngines["backward"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,"front");
 		mVehicle = pVS->create( tpl, *getPhysicalWorld() );
 #else
+		// add wheels
+		const real wheelRadius = 2;
+		const real wheelRelativeMass = 0.1; // mass relative to chassis
+		vehicle::VehicleTemplate* tpl = pVS->getTemplate("jet");
+		YAKE_ASSERT( tpl );
+		tpl->mWheels["frontWheel"] = 
+			vehicle::VehicleTemplate::WheelTpl( Vector3(0,-3,5), wheelRadius, wheelRelativeMass, true );
+		tpl->mWheels["leftRearWheel"] = 
+			vehicle::VehicleTemplate::WheelTpl( Vector3(-3,-3,-3), wheelRadius, wheelRelativeMass, true );
+		tpl->mWheels["rightRearWheel"] = 
+			vehicle::VehicleTemplate::WheelTpl( Vector3(3,-3,-3), wheelRadius, wheelRelativeMass, true );
+
+		// instantiate
 		mVehicle = pVS->create("jet", *getPhysicalWorld() );
 #endif
 
@@ -111,6 +159,7 @@
 		// - ship body
 		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode("root");
 		pSN->attachEntity( getGraphicalWorld()->createEntity("razor.mesh") );
+		pSN->setScale( Vector3::kUnitScale * razorMeshScale );
 		pG->addSceneNode(pSN);
 
 		// - thruster visuals
@@ -118,7 +167,16 @@
 		_createThrusterVisual( "right", "right", *pSN );
 		_createThrusterVisual( "front", "backward", *pSN );
 		_createThrusterVisual( "rear", "forward", *pSN );
+		_createThrusterVisual( "bottom", "upward", *pSN );
 
+		// - wheel visuals
+		if (mVehicle->getWheelInterface("frontWheel"))
+		{
+			_createWheelVisual( "frontWheel", *pSN );
+			_createWheelVisual( "leftRearWheel", *pSN );
+			_createWheelVisual( "rightRearWheel", *pSN );
+		}
+
 		// create visual <-> physics links
 		mComplex->addLink( mVehicle->getChassisMovable(), pSN );
 
@@ -127,6 +185,8 @@
 	}
 	virtual void onDestroyScene()
 	{
+		YAKE_SAFE_DELETE( mGround );
+
 		YAKE_SAFE_DELETE( mComplex );
 		YAKE_SAFE_DELETE( mVehicle );
 	}
@@ -149,6 +209,10 @@
 		mActionMap.reg( ACTIONID_REVERSE,
 			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_DOWN, KAM_CONTINUOUS ) );
 		mActionMap.subscribeToActionId( ACTIONID_REVERSE, boost::bind(&TheMainState::onReverse,this) );
+
+		mActionMap.reg( ACTIONID_UP,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_PGUP, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_UP, boost::bind(&TheMainState::onUp,this) );
 	}
 	virtual void onExit()
 	{
@@ -179,6 +243,8 @@
 				mVehicle->getEngineInterface("forward")->setThrottle(1.);
 			else if (activeId == input::ACTIONID_REVERSE)
 				mVehicle->getEngineInterface("backward")->setThrottle(1.);
+			else if (activeId == input::ACTIONID_UP)
+				mVehicle->getEngineInterface("upward")->setThrottle(1.);
 		}
 
 		mVehicle->updateSimulation( timeElapsed );
@@ -199,6 +265,8 @@
 	{ mActiveActions.insert( input::ACTIONID_FORWARD ); }
 	void onReverse()
 	{ mActiveActions.insert( input::ACTIONID_REVERSE ); }
+	void onUp()
+	{ mActiveActions.insert( input::ACTIONID_UP ); }
 private:
 	void _regThrusterPs(const String& engineId, graphics::IParticleSystem& ps)
 	{
@@ -228,6 +296,7 @@
 		}
 	}
 private:
+	model::complex::Model*	mGround;
 	vehicle::IVehicle*		mVehicle;
 	model::complex::Model*	mComplex;
 	typedef AssocVector<String,real> EmitterRealMap;

Modified: trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -82,12 +82,11 @@
 			INode* pN = itN.getNext().get();
 			const String name = pN->getName();
 			if (name == "mountPoint")
-			{
 				parseMountPoint( *pN );
-			} else if (name == "engine")
-			{
+			else if (name == "engine")
 				parseEngine( *pN );
-			}
+			else if (name == "chassis")
+				parseChassis( *pN );
 		}
 
 		const String tplId = n.getAttributeValueAs<String>("name");
@@ -95,6 +94,54 @@
 		mSigOnVehicleTpl( *this, tplId );
 		YAKE_SAFE_DELETE( mpCurrVehTpl );
 	}
+	void DotVehicleParser::parseChassis( const data::dom::INode& n )
+	{
+		SharedPtr<data::dom::INode> pN = n.getNodeByName("body");
+		if (pN.get())
+		{
+			mpCurrVehTpl->mChassis.mMass = StringUtil::parseReal( pN->getAttributeValueAs<String>("totalMass") );
+		}
+		pN = n.getNodeByName("shapeSet");
+		if (pN.get())
+		{
+			NodeList shapeNodes = pN->getNodes();
+			ConstVectorIterator< NodeList > itShapeN( shapeNodes );
+			while (itShapeN.hasMoreElements())
+			{
+				const INode* pShapeN = itShapeN.getNext().get();
+				const String name = pShapeN->getName();
+				if (name == "box")
+					parseShapeBox( *pShapeN );
+				else if (name == "sphere")
+					parseShapeSphere( *pShapeN );
+				else
+				{
+					YAKE_ASSERT( 0 && "unhandled shape type" )( name );
+				}
+			}
+		}
+	}
+	void DotVehicleParser::parseShapeBox( const data::dom::INode& n )
+	{
+		Vector3 dim;
+		dim.x = StringUtil::parseReal( n.getAttributeValueAs<String>("x") );
+		dim.y = StringUtil::parseReal( n.getAttributeValueAs<String>("y") );
+		dim.z = StringUtil::parseReal( n.getAttributeValueAs<String>("z") );
+		Vector3 pos;
+		if (n.getNodeByName("position"))
+			parsePosition( *n.getNodeByName("position"), pos );
+		mpCurrVehTpl->mChassis.mChassisShapes.push_back(
+			new physics::IShape::BoxDesc( dim, 0, pos ) );
+	}
+	void DotVehicleParser::parseShapeSphere( const data::dom::INode& n )
+	{
+		real radius = StringUtil::parseReal( n.getAttributeValueAs<String>("radius") );
+		Vector3 pos;
+		if (n.getNodeByName("position"))
+			parsePosition( *n.getNodeByName("position"), pos );
+		mpCurrVehTpl->mChassis.mChassisShapes.push_back(
+			new physics::IShape::SphereDesc( radius, 0, pos ) );
+	}
 	void DotVehicleParser::parseEngine( const data::dom::INode& n )
 	{
 		String id = n.getAttributeValueAs<String>("name");

Modified: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -33,64 +33,85 @@
 namespace vehicle {
 
 	YAKE_IMPLEMENT_REGISTRY(IVehicleSystem);
-	YAKE_REGISTER_CONCRETE(OdeVehicleSystem);
+	YAKE_REGISTER_CONCRETE(GenericVehicleSystem);
 
 	//-----------------------------------------------------
-	// Class: OdeVehicleSystem
+	// Class: GenericVehicleSystem
 	//-----------------------------------------------------
-	OdeVehicleSystem::OdeVehicleSystem()
+	GenericVehicleSystem::GenericVehicleSystem()
 	{}
-	OdeVehicleSystem::~OdeVehicleSystem()
+	GenericVehicleSystem::~GenericVehicleSystem()
 	{
 		mVehicleTemplates.clear();
 	}
-	IVehicle* OdeVehicleSystem::create(const VehicleTemplate& tpl, physics::IWorld& PWorld)
+	IVehicle* GenericVehicleSystem::create(const VehicleTemplate& tpl, physics::IWorld& PWorld)
 	{
-		OdeVehicle* pV = new OdeVehicle();
+		GenericVehicle* pV = new GenericVehicle();
 		pV->_create( tpl, PWorld );
 		return pV;
 	}
-	bool OdeVehicleSystem::loadTemplates(const String& fn)
+	bool GenericVehicleSystem::loadTemplates(const String& fn)
 	{
 		DotVehicleParser dvp;
-		dvp.subscribeToOnVehicleTpl( boost::bind(&OdeVehicleSystem::_onVehicleTpl,this,_1,_2) );
+		dvp.subscribeToOnVehicleTpl( boost::bind(&GenericVehicleSystem::_onVehicleTpl,this,_1,_2) );
 		bool ret = dvp.parse( fn );
 		return ret;
 	}
-	IVehicle* OdeVehicleSystem::create(const String& tplId, physics::IWorld& PWorld)
+	VehicleTemplate* GenericVehicleSystem::getTemplate(const String& tplId) const
 	{
 		VehTplList::const_iterator itFind = mVehicleTemplates.find( tplId );
 		YAKE_ASSERT( itFind != mVehicleTemplates.end() );
 		if (itFind == mVehicleTemplates.end() )
 			return 0;
-		const VehicleTemplate* tpl = itFind->second.get();
+		VehicleTemplate* tpl = itFind->second.get();
 		YAKE_ASSERT( tpl );
 		if (!tpl)
 			return 0;
+		return tpl;
+	}
+	//VehicleTemplate* GenericVehicleSystem::cloneTemplate(const String& tpl)
+	//{
+	//	VehTplList::const_iterator itFind = mVehicleTemplates.find( tplId );
+	//	YAKE_ASSERT( itFind != mVehicleTemplates.end() );
+	//	if (itFind == mVehicleTemplates.end() )
+	//		return 0;
+	//	const VehicleTemplate* tpl = itFind->second.get();
+	//	YAKE_ASSERT( tpl );
+	//	if (!tpl)
+	//		return 0;
+	//	return tpl->clone();
+	//}
+	IVehicle* GenericVehicleSystem::create(const String& tplId, physics::IWorld& PWorld)
+	{
+		const VehicleTemplate* tpl = getTemplate( tplId );
+		YAKE_ASSERT( tpl );
+		if (!tpl)
+			return 0;
 		return create(*tpl,PWorld);
 	}
-	void OdeVehicleSystem::_onVehicleTpl(vehicle::DotVehicleParser& parser, const String& tplId)
+	void GenericVehicleSystem::_onVehicleTpl(vehicle::DotVehicleParser& parser, const String& tplId)
 	{
-		YAKE_LOG("OdeVehicleSystem: loaded vehicle template'" + tplId + "'.");
+		YAKE_LOG("GenericVehicleSystem: loaded vehicle template'" + tplId + "'.");
 		mVehicleTemplates[ tplId ] = SharedPtr<vehicle::VehicleTemplate>( parser.detachCurrentVehicleTpl() );
 		YAKE_ASSERT( mVehicleTemplates[ tplId ] );
 	}
 
 	//-----------------------------------------------------
-	// Class: OdeVehicle
+	// Class: GenericVehicle
 	//-----------------------------------------------------
-	OdeVehicle::OdeVehicle() : mpChassis(0)
+	GenericVehicle::GenericVehicle() : mpChassis(0)
 	{
 	}
-	OdeVehicle::~OdeVehicle()
+	GenericVehicle::~GenericVehicle()
 	{
 		for (SteeringGroupList::const_iterator it = mSteeringGroups.begin(); it != mSteeringGroups.end(); ++it)
 		{
-			ConstDequeIterator< WheelList > itWheel( it->second );
+			ConstDequeIterator< Deque<OdeWheel*> > itWheel( it->second );
 			while (itWheel.hasMoreElements())
 				delete itWheel.getNext();
 		}
 		mSteeringGroups.clear();
+		mWheels.clear();
 
 		ConstDequeIterator< EnginePtrList > itEngine( mEngines );
 		while (itEngine.hasMoreElements())
@@ -105,7 +126,7 @@
 		mpChassis->getCreator()->destroyActor( mpChassis );
 		mpChassis = 0;
 	}
-	void OdeVehicle::updateSimulation(real timeElapsed)
+	void GenericVehicle::updateSimulation(real timeElapsed)
 	{
 		ConstDequeIterator< EnginePtrList > itEngine( mEngines );
 		while (itEngine.hasMoreElements())
@@ -117,7 +138,7 @@
 		mSigUpdateThrusterSimulation( timeElapsed );
 		mSigApplyThrusterToTargets();
 	}
-	MountPoint* OdeVehicle::getMountPoint(const String& id) const
+	MountPoint* GenericVehicle::getMountPoint(const String& id) const
 	{
 		YAKE_ASSERT( !id.empty() );
 		if (id.empty())
@@ -128,7 +149,7 @@
 			return 0;
 		return itFind->second;
 	}
-	IEngine* OdeVehicle::getEngineInterface(const String& id) const
+	IEngine* GenericVehicle::getEngineInterface(const String& id) const
 	{
 		YAKE_ASSERT( !id.empty() );
 		if (id.empty())
@@ -139,7 +160,7 @@
 			return 0;
 		return itFind->second;
 	}
-	IEnginePtrList OdeVehicle::getEngineInterfaces() const
+	IEnginePtrList GenericVehicle::getEngineInterfaces() const
 	{
 		IEnginePtrList engines;
 		ConstVectorIterator< EnginePtrList > itEngine( mEngines );
@@ -147,31 +168,35 @@
 			engines.push_back( itEngine.getNext().second );
 		return engines;
 	}
-	IWheel* OdeVehicle::getWheelInterface(size_t index) const
+	IWheel* GenericVehicle::getWheelInterface(const String& id) const
 	{
-		YAKE_ASSERT( index < mWheels.size() );
-		if (index >= mWheels.size())
+		YAKE_ASSERT( !id.empty() );
+		if (id.empty())
 			return 0;
-		return mWheels.at(index);
+		WheelList::const_iterator itFind = mWheels.find(id);
+		//YAKE_ASSERT( itFind != mWheels.end() )( id );
+		if (itFind == mWheels.end())
+			return 0;
+		return itFind->second;
 	}
-	Vector3 OdeVehicle::getChassisPosition() const
+	Vector3 GenericVehicle::getChassisPosition() const
 	{
 		YAKE_ASSERT( mpChassis );
 		return mpChassis->getPosition();
 	}
-	Quaternion OdeVehicle::getChassisOrientation() const
+	Quaternion GenericVehicle::getChassisOrientation() const
 	{
 		YAKE_ASSERT( mpChassis );
 		return mpChassis->getOrientation();
 	}
-	Movable* OdeVehicle::getChassisMovable() const
+	Movable* GenericVehicle::getChassisMovable() const
 	{
 		YAKE_ASSERT( mpChassis );
 		return mpChassis;
 	}
-	void OdeVehicle::_createMountPoint(const String& id, const VehicleTemplate::MountPointTpl& mtPtTpl,MountPoint* parentMtPt)
+	void GenericVehicle::_createMountPoint(const String& id, const VehicleTemplate::MountPointTpl& mtPtTpl,MountPoint* parentMtPt)
 	{
-		MountPoint* thisMtPt = new OdeMountPoint();
+		MountPoint* thisMtPt = new GenericMountPoint();
 
 		// link to parent if necessary
 		if (parentMtPt)
@@ -199,11 +224,12 @@
 			_createMountPoint( mptTplEntry.first, childMtPtTpl, thisMtPt );
 		}
 	}
-	void OdeVehicle::_create(const VehicleTemplate& tpl, physics::IWorld& PWorld )
+	void GenericVehicle::_create(const VehicleTemplate& tpl, physics::IWorld& PWorld )
 	{
 		// chassis
 		mpChassis = PWorld.createActor( physics::ACTOR_DYNAMIC );
 		mpChassis->setPosition( tpl.mChassis.mPosition );
+		//mpChassis->setOrientation( tpl.mChassis.mOrientation );
 		ConstDequeIterator< VehicleTemplate::ShapeTplList > itShapeTpl( tpl.mChassis.mChassisShapes );
 		while (itShapeTpl.hasMoreElements())
 		{
@@ -236,7 +262,7 @@
 					dynamic_cast<const VehicleTemplate::CarEngineTpl*>( engineTpl );
 			if (carEngineTpl)
 			{
-				OdeCarEngine* pEngine = new OdeCarEngine();
+				GenericCarEngine* pEngine = new GenericCarEngine();
 				mEngines[ engineTplEntry.first ] = pEngine;
 				pEngine->setParamMaxRPM( carEngineTpl->rpmMax_ );
 				pEngine->setParamMinRPM( carEngineTpl->rpmMin_ );
@@ -249,24 +275,24 @@
 				if (thrusterTpl)
 				{
 					// thruster itself
-					OdeThruster* pEngine = new OdeThruster();
+					GenericThruster* pEngine = new GenericThruster();
 					mEngines[ engineTplEntry.first ] = pEngine;
 					pEngine->setMinimumForce( thrusterTpl->minForce );
 					pEngine->setMaximumForce( thrusterTpl->maxForce );
 					pEngine->setThrottle(0.);
 					subscribeToUpdateThrusterSimulation(
-						boost::bind( &OdeThruster::updateSimulation, pEngine, _1 ) );
+						boost::bind( &GenericThruster::updateSimulation, pEngine, _1 ) );
 
 					// the thruster is attached to a mount point, create wrapper:
 					if (thrusterTpl->mountPt != MPID_NO_PARENT)
 					{
-						OdeMountedThruster* pMounted = new OdeMountedThruster();
+						GenericMountedThruster* pMounted = new GenericMountedThruster();
 						pMounted->setThruster( pEngine );
 
 						pMounted->addTarget( mpChassis->getBodyPtr() );
 
 						subscribeToApplyThrusterToTargets(
-							boost::bind( &OdeMountedThruster::applyToTargets, pMounted ) );
+							boost::bind( &GenericMountedThruster::applyToTargets, pMounted ) );
 
 						mMountPoints[thrusterTpl->mountPt]->attach( pMounted );
 					}
@@ -277,23 +303,24 @@
 		// steering groups
 		uint32 numStGrps = tpl.mSteeringGroups > 0 ? tpl.mSteeringGroups : 1;
 		for (uint32 i=0; i<numStGrps; ++i)
-			mSteeringGroups.insert( std::make_pair(i,WheelList()) );
+			mSteeringGroups.insert( std::make_pair(i,Deque<OdeWheel*>()) );
 
 		// wheels
 		ConstDequeIterator< VehicleTemplate::WheelTplList > itWheelTpl( tpl.mWheels );
 		while (itWheelTpl.hasMoreElements())
 		{
-			const VehicleTemplate::WheelTpl wheelTpl = itWheelTpl.getNext();
-			YAKE_ASSERT( wheelTpl.mSteeringGroup < mSteeringGroups.size() );
-			if (wheelTpl.mSteeringGroup >= mSteeringGroups.size())
+			const std::pair<String,VehicleTemplate::WheelTpl> wtp = itWheelTpl.getNext();
+			const VehicleTemplate::WheelTpl& wheelTpl = wtp.second;
+			YAKE_ASSERT( wheelTpl.mSteeringGroup < mSteeringGroups.size() || wheelTpl.mSteeringGroup == SG_NO_STEERING_GROUP );
+
+			OdeWheel* pW = new OdeWheel(mpChassis,wheelTpl,PWorld);
+
+			if (wheelTpl.mSteeringGroup != SG_NO_STEERING_GROUP)
 			{
-				mWheels.push_back( 0 ); // => need this so that the indices stay valid!
-				continue;
+				mSteeringGroups[ wheelTpl.mSteeringGroup ].push_back( pW );
 			}
 
-			OdeWheel* pW = new OdeWheel(mpChassis,wheelTpl,PWorld);
-			mSteeringGroups[ wheelTpl.mSteeringGroup ].push_back( pW );
-			mWheels.push_back( pW );
+			mWheels[ wtp.first ] = pW;
 		}
 	}
 
@@ -304,16 +331,22 @@
 						const VehicleTemplate::WheelTpl& tpl,
 						physics::IWorld& PWorld ) :
 		mpJoint(0),
-		mpWheel(0)
+		mpWheel(0),
+		mRadius(tpl.mRadius)
 	{
 		YAKE_ASSERT( chassisObj );
 		mpWheel = PWorld.createActor( physics::ACTOR_DYNAMIC );
-		mpWheel->createShape( physics::IShape::SphereDesc( tpl.mRadius ) );
+		mpWheel->createShape( physics::IShape::SphereDesc( mRadius ) );
 		real mass = tpl.mMassRelativeToChassis ?
 							(tpl.mMass * chassisObj->getBody().getMass()) : tpl.mMass;
+		mpWheel->setPosition( tpl.mPosition );
+		mpWheel->setOrientation( tpl.mOrientation );
 		mpWheel->getBody().setMass( mass );
 
 		mpJoint = PWorld.createJoint( physics::IJoint::DescFixed( chassisObj, mpWheel ) );
+		//mpJoint = PWorld.createJoint( physics::IJoint::DescBall( chassisObj, mpWheel, chassisObj->getPosition() ) );
+		
+		YAKE_ASSERT( mpJoint );
 	}
 	OdeWheel::~OdeWheel()
 	{
@@ -324,6 +357,10 @@
 		mpWheel->getCreator()->destroyActor( mpWheel );
 		mpWheel = 0;
 	}
+	real OdeWheel::getRadius() const
+	{
+		return mRadius;
+	}
 	Vector3 OdeWheel::getPosition() const
 	{
 		YAKE_ASSERT( mpWheel );
@@ -336,31 +373,31 @@
 	}
 
 	//-----------------------------------------------------
-	// Class: OdeThruster
+	// Class: GenericThruster
 	//-----------------------------------------------------
-	OdeThruster::OdeThruster() : mThrottle(0)
+	GenericThruster::GenericThruster() : mThrottle(0)
 	{
 	}
-	void OdeThruster::setThrottle( real throttle )
+	void GenericThruster::setThrottle( real throttle )
 	{
 		mThrottle = (throttle < 0.) ? 0. : ((throttle > 1.) ? 1. : throttle);
 	}
-	real OdeThruster::getThrottle() const
+	real GenericThruster::getThrottle() const
 	{
 		return mThrottle;
 	}
-	void OdeThruster::updateSimulation( real timeElapsed )
+	void GenericThruster::updateSimulation( real timeElapsed )
 	{
 		setForce( getMinimumForce() + mThrottle * ( getMaximumForce() - getMinimumForce() ) );
 	}
 
 	//-----------------------------------------------------
-	// Class: OdeMountedThruster
+	// Class: GenericMountedThruster
 	//-----------------------------------------------------
-	OdeMountedThruster::OdeMountedThruster()
+	GenericMountedThruster::GenericMountedThruster()
 	{
 	}
-	void OdeMountedThruster::onApplyToTargets()
+	void GenericMountedThruster::onApplyToTargets()
 	{
 		YAKE_ASSERT(mThruster);
 		if (!mThruster)

Modified: trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -113,9 +113,9 @@
 	}
 
 	//-----------------------------------------------------
-	// Class: OdeCarEngine
+	// Class: GenericCarEngine
 	//-----------------------------------------------------
-	OdeCarEngine::OdeCarEngine() :
+	GenericCarEngine::GenericCarEngine() :
 		mDifferentialRatio( real(3.42) ),
 		mThrottle(0),
 		mCurrentGear(0),
@@ -136,11 +136,11 @@
 		mpGearBox->setGearRatio( 4, real( 0.74 ) ); mpGearBox->setGearMode( 4, GearBox::GM_FORWARD );
 		mpGearBox->setGearRatio( 5, real( 0.50 ) ); mpGearBox->setGearMode( 5, GearBox::GM_FORWARD );
 	}
-	OdeCarEngine::~OdeCarEngine()
+	GenericCarEngine::~GenericCarEngine()
 	{
 		YAKE_SAFE_DELETE( mpGearBox );
 	}
-	void OdeCarEngine::updateSimulation( real timeElapsed )
+	void GenericCarEngine::updateSimulation( real timeElapsed )
 	{
 		updateCurrentRPM( timeElapsed );
 		updateGearRatios();
@@ -151,7 +151,7 @@
 		real engineTorque = mThrottle * getMaxTorque( mCurrentRPM );
 		mDriveTorque = engineTorque * mGearRatio * mDifferentialRatio * 0.75/*just a guess*/;
 	}
-	void OdeCarEngine::setThrottle( real throttle )
+	void GenericCarEngine::setThrottle( real throttle )
 	{
 		mThrottle = throttle;
 		if (mThrottle > 1)
@@ -159,68 +159,68 @@
 		else if (mThrottle < 0)
 			mThrottle = 0;
 	}
-	real OdeCarEngine::getThrottle() const
+	real GenericCarEngine::getThrottle() const
 	{
 		return mThrottle;
 	}
-	real OdeCarEngine::getRPM() const
+	real GenericCarEngine::getRPM() const
 	{
 		return mCurrentRPM;
 	}
-	uint8 OdeCarEngine::getGear() const
+	uint8 GenericCarEngine::getGear() const
 	{
 		return mCurrentGear;
 	}
-	void OdeCarEngine::shiftGear( uint8 gear )
+	void GenericCarEngine::shiftGear( uint8 gear )
 	{
 		if (gear < mpGearBox->getSpeed())
 			mCurrentGear = gear;
 	}
-	void OdeCarEngine::shiftGearUp()
+	void GenericCarEngine::shiftGearUp()
 	{
 		if (mCurrentGear+1 < mpGearBox->getSpeed())
 			mCurrentGear++;
 	}
-	void OdeCarEngine::shiftGearDown()
+	void GenericCarEngine::shiftGearDown()
 	{
 		if (mCurrentGear > 0)
 			mCurrentGear--;
 	}
-	real OdeCarEngine::getDriveTorque() const
+	real GenericCarEngine::getDriveTorque() const
 	{
 		return mDriveTorque;
 	}
-	real OdeCarEngine::getMinRPM() const
+	real GenericCarEngine::getMinRPM() const
 	{
 		return mMinRPM;
 	}
-	real OdeCarEngine::getMaxRPM() const
+	real GenericCarEngine::getMaxRPM() const
 	{
 		return mMaxRPM;
 	}
-	real OdeCarEngine::getRPMRise() const
+	real GenericCarEngine::getRPMRise() const
 	{
 		return mThrottleRPMRise;
 	}
-	real OdeCarEngine::getRPMDieOff() const
+	real GenericCarEngine::getRPMDieOff() const
 	{
 		return mRPMDieOff;
 	}
-	real OdeCarEngine::getMinShiftingTime() const
+	real GenericCarEngine::getMinShiftingTime() const
 	{
 		return 0.;
 	}
-	real OdeCarEngine::getMaxTorque( const real rpm )
+	real GenericCarEngine::getMaxTorque( const real rpm )
 	{
 		//TODO: look up in curve
 		return 500; // in Nm
 	}
-	void OdeCarEngine::updateGearRatios()
+	void GenericCarEngine::updateGearRatios()
 	{
 		mGearRatio = mpGearBox->getGearRatio( mCurrentGear );
 		mInvGearRatio = (mGearRatio != 0.) ? (1.0 / mGearRatio) : 0.;
 	}
-	void OdeCarEngine::updateCurrentRPM(real timeElapsed)
+	void GenericCarEngine::updateCurrentRPM(real timeElapsed)
 	{
 		if (mThrottle > 0.)
 		{
@@ -235,15 +235,15 @@
 				mCurrentRPM = mMinRPM;
 		}
 	}
-	void OdeCarEngine::setParamMinRPM( const real rpm )
+	void GenericCarEngine::setParamMinRPM( const real rpm )
 	{
 		mMinRPM = rpm;
 	}
-	void OdeCarEngine::setParamMaxRPM( const real rpm )
+	void GenericCarEngine::setParamMaxRPM( const real rpm )
 	{
 		mMaxRPM = rpm;
 	}
-	void OdeCarEngine::setParamRedlineRPM( const real rpm )
+	void GenericCarEngine::setParamRedlineRPM( const real rpm )
 	{
 	}
 } // namespace vehicle

Modified: trunk/yake/src/yapp/vehicle/yakeVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeVehicle.cpp	2005-10-11 21:42:46 UTC (rev 1005)
+++ trunk/yake/src/yapp/vehicle/yakeVehicle.cpp	2005-10-11 21:43:13 UTC (rev 1006)
@@ -32,6 +32,13 @@
 namespace vehicle {
 
 	//-----------------------------------------------------
+	// Class: VehicleTemplate
+	//-----------------------------------------------------
+	//VehicleTemplate* VehicleTemplate::clone() const
+	//{
+	//}
+
+	//-----------------------------------------------------
 	// Class: Mountable
 	//-----------------------------------------------------
 	Mountable::Mountable() : mPt(0)



From codeandroid at berlios.de  Tue Oct 11 23:43:42 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 11 Oct 2005 23:43:42 +0200
Subject: [Yake-svn] r1007 - in trunk/yake/src/yake: plugins/physicsNX samples/physics/demo
Message-ID: <200510112143.j9BLhgGh025099@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-11 23:43:42 +0200 (Tue, 11 Oct 2005)
New Revision: 1007

Modified:
   trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp
   trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp
Log:
improved physics

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp	2005-10-11 21:43:13 UTC (rev 1006)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp	2005-10-11 21:43:42 UTC (rev 1007)
@@ -105,7 +105,8 @@
 		if (mpNxJoint)
 			return false;
 
-		NxPointOnLineJointDesc desc;
+		NxFixedJointDesc desc;
+		//NxPointOnLineJointDesc desc;
 		//NxPrismaticJointDesc desc;
 		desc.setToDefault();
 		desc.actor[0] = rActor1.getNxActorPtr_();

Modified: trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp	2005-10-11 21:43:13 UTC (rev 1006)
+++ trunk/yake/src/yake/samples/physics/demo/yakeDemo.cpp	2005-10-11 21:43:42 UTC (rev 1007)
@@ -447,6 +447,7 @@
 			const Vector3 spawnOffset = bUseWorldOne ? Vector3(-5,0,0) : Vector3(5,0,0);
 			const Vector3 spawnPos = spawnOffset + Vector3(randomiser.randReal()*0.5,10,randomiser.randReal()*0.5);
 			objs.push_back( SharedPtr<Simple>( new Simple( pPWorld ) ) );
+			SharedPtr<Simple> last = objs.back();
 
 			if (randomiser.randReal() < 0.5)
 				createBox( pPWorld, *objs.back(), 
@@ -456,6 +457,13 @@
 				createBall( pPWorld, *objs.back(), 
 								spawnPos,  // position
 								randomiser.randReal()*2 ); //dimension/radius
+
+			//
+			objs.push_back( SharedPtr<Simple>( new Simple( pPWorld ) ) );
+			createBall( pPWorld, *objs.back(),
+								spawnPos + Vector3(-5,0,0),
+								1 );
+			createFixedJoint( pPWorld, *last, *objs.back() );
 		}
 
 		// step the worlds



From codeandroid at berlios.de  Tue Oct 11 23:44:24 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 11 Oct 2005 23:44:24 +0200
Subject: [Yake-svn] r1008 - in trunk/yake/yapp: model vehicle
Message-ID: <200510112144.j9BLiOSM025153@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-11 23:44:24 +0200 (Tue, 11 Oct 2005)
New Revision: 1008

Modified:
   trunk/yake/yapp/model/yakeComplexModel.h
   trunk/yake/yapp/vehicle/yakeDotVehicle.h
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeNativeOde.h
   trunk/yake/yapp/vehicle/yakeTemplates.h
   trunk/yake/yapp/vehicle/yakeVehicleSystem.h
Log:
improved vehicle implementation,
improved complex::Model interface

Modified: trunk/yake/yapp/model/yakeComplexModel.h
===================================================================
--- trunk/yake/yapp/model/yakeComplexModel.h	2005-10-11 21:43:42 UTC (rev 1007)
+++ trunk/yake/yapp/model/yakeComplexModel.h	2005-10-11 21:44:24 UTC (rev 1008)
@@ -81,6 +81,9 @@
 		*/
 		void addPhysical( const SharedPtr<Physical> & pPhysical, const String & rName = ""/*, bool bManaged*/ );
 
+		/** @copydoc addPhysical */
+		void addPhysical( Physical* pPhysical, const String & rName = ""/*, bool bManaged*/ );
+
 		/** Adds a "Graphical" object to this model.
 			The model references it using a shared pointer.
 			If it holds the only reference to the object it effectively
@@ -90,6 +93,10 @@
 		*/
 		void addGraphical( const SharedPtr<Graphical> & pGraphical, const String & rName = "" );
 
+		/** @copydoc addGraphical
+		*/
+		void addGraphical( Graphical* pGraphical, const String & rName = "" );
+
 		void addGraphicsController( const SharedPtr<IObjectController> & pController, const String & rName = "" );
 		void addLink( const SharedPtr<ModelLink> & pModelLink, const String & rName = "" );
 

Modified: trunk/yake/yapp/vehicle/yakeDotVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-11 21:43:42 UTC (rev 1007)
+++ trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-11 21:44:24 UTC (rev 1008)
@@ -54,6 +54,8 @@
 		  void parseBody( const data::dom::INode& n );
 		  void parseShapeSet( const data::dom::INode& n );
 		   void parseShape( const data::dom::INode& n );
+		    void parseShapeBox( const data::dom::INode& n );
+		    void parseShapeSphere( const data::dom::INode& n );
 		   void parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt = 0 );
 		 void parseEngine( const data::dom::INode& n );
 		void parseEngineTpl( const data::dom::INode& n );

Modified: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-11 21:43:42 UTC (rev 1007)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-11 21:44:24 UTC (rev 1008)
@@ -55,7 +55,7 @@
 		virtual MountPoint* getMountPoint(const String& id) const = 0;
 		virtual IEngine* getEngineInterface(const String& id) const = 0;
 		virtual IEnginePtrList getEngineInterfaces() const = 0;
-		virtual IWheel* getWheelInterface(size_t index) const = 0;
+		virtual IWheel* getWheelInterface(const String& id) const = 0;
 
 		virtual Vector3 getChassisPosition() const = 0;
 		virtual Quaternion getChassisOrientation() const = 0;
@@ -158,6 +158,8 @@
 	{
 	public:
 		virtual ~IWheel() {}
+
+		virtual real getRadius() const = 0;
 	};
 
 } // namespace vehicle

Modified: trunk/yake/yapp/vehicle/yakeNativeOde.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-11 21:43:42 UTC (rev 1007)
+++ trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-11 21:44:24 UTC (rev 1008)
@@ -33,14 +33,16 @@
 namespace vehicle {
 
 	class DotVehicleParser;
-	class YAKE_VEH_API OdeVehicleSystem : public IVehicleSystem
+	class YAKE_VEH_API GenericVehicleSystem : public IVehicleSystem
 	{
-		YAKE_DECLARE_CONCRETE(OdeVehicleSystem,"ode");
+		YAKE_DECLARE_CONCRETE(GenericVehicleSystem,"generic");
 	public:
-		OdeVehicleSystem();
-		~OdeVehicleSystem();
+		GenericVehicleSystem();
+		~GenericVehicleSystem();
 		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld);
 		virtual bool loadTemplates(const String& fn);
+		virtual VehicleTemplate* getTemplate(const String& tpl) const;
+		//virtual VehicleTemplate* cloneTemplate(const String& tpl);
 		virtual IVehicle* create(const String& tpl, physics::IWorld& PWorld);
 	private:
 		void _onVehicleTpl(DotVehicleParser& parser, const String& tplId);
@@ -50,11 +52,11 @@
 	};
 
 	class OdeWheel;
-	class OdeVehicle : public IVehicle
+	class GenericVehicle : public IVehicle
 	{
 	public:
-		OdeVehicle();
-		virtual ~OdeVehicle();
+		GenericVehicle();
+		virtual ~GenericVehicle();
 
 		virtual void updateSimulation( real timeElapsed );
 
@@ -65,7 +67,7 @@
 
 		virtual IEngine* getEngineInterface(const String& id) const;
 		virtual IEnginePtrList getEngineInterfaces() const;
-		virtual IWheel* getWheelInterface(size_t index) const;
+		virtual IWheel* getWheelInterface(const String& id) const;
 
 		virtual Vector3 getChassisPosition() const;
 		virtual Quaternion getChassisOrientation() const;
@@ -87,7 +89,7 @@
 		typedef AssocVector<uint32,Deque<OdeWheel*> > SteeringGroupList;
 		SteeringGroupList	mSteeringGroups;
 
-		typedef Deque<OdeWheel*> WheelList;
+		typedef AssocVector<String,OdeWheel*> WheelList;
 		WheelList			mWheels;
 
 		typedef AssocVector<String,MountPoint*> MountPointList;
@@ -95,11 +97,11 @@
 	};
 
 	class GearBox;
-	class OdeCarEngine : public ICarEngine
+	class GenericCarEngine : public ICarEngine
 	{
 	public:
-		OdeCarEngine();
-		virtual ~OdeCarEngine();
+		GenericCarEngine();
+		virtual ~GenericCarEngine();
 
 		virtual void setThrottle(real throttle);
 		virtual real getThrottle() const;
@@ -164,25 +166,28 @@
 		virtual Vector3 getPosition() const;
 		virtual void setOrientation(const Quaternion&) {}
 		virtual Quaternion getOrientation() const;
+
+		virtual real getRadius() const;
 	private:
 		physics::IJointPtr		mpJoint;
 		physics::IActorPtr		mpWheel;
+		real					mRadius;
 	};
 
-	class OdeMountPoint : public MountPoint
+	class GenericMountPoint : public MountPoint
 	{
 	public:
-		OdeMountPoint() {}
+		GenericMountPoint() {}
 
 	private:
 		//typedef Deque<IThruster*> ThrusterPtrList;
 		//ThrusterPtrList		mThrusters; // references thruster engines (does NOT own them!)
 	};
 
-	class OdeThruster : public IThruster
+	class GenericThruster : public IThruster
 	{
 	public:
-		OdeThruster();
+		GenericThruster();
 
 		virtual void setThrottle( real throttle );
 		virtual real getThrottle() const;
@@ -191,10 +196,10 @@
 	private:
 		real	mThrottle;
 	};
-	class OdeMountedThruster : public IMountedThruster
+	class GenericMountedThruster : public IMountedThruster
 	{
 	public:
-		OdeMountedThruster();
+		GenericMountedThruster();
 
 		virtual void onApplyToTargets();
 	private:

Modified: trunk/yake/yapp/vehicle/yakeTemplates.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-11 21:43:42 UTC (rev 1007)
+++ trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-11 21:44:24 UTC (rev 1008)
@@ -33,6 +33,7 @@
 namespace vehicle {
 
 	const String MPID_NO_PARENT = String("");
+	const uint32 SG_NO_STEERING_GROUP = 0xffffffff;
 	struct VehicleTemplate
 	{
 		struct MountPointTpl;
@@ -139,19 +140,25 @@
 			real			mSuspensionDamping;
 			String			mGfxReference; // e.g. dotScene file
 			String			mGfxReferenceType; // e.g. "dotscene"
-			WheelTpl() :
-				mPosition(Vector3::kZero),
+			WheelTpl(
+				const Vector3& position = Vector3::kZero,
+				const real radius = real(0.8),
+				const real mass = real(0.01),
+				const bool massRelativeToChassis = true,
+				const uint32 steeringGrp = SG_NO_STEERING_GROUP
+				) :
+				mPosition(position),
 				mOrientation(Quaternion::kIdentity),
-				mSteeringGroup(0),
-				mRadius(real(0.8)),
-				mMass(real(0.015)),
-				mMassRelativeToChassis(true),
+				mSteeringGroup(steeringGrp),
+				mRadius(radius),
+				mMass(mass),
+				mMassRelativeToChassis(massRelativeToChassis),
 				mSuspensionSpring(real(1)),
 				mSuspensionDamping(real(0.9))
 			{}
 		};
 
-		typedef Deque< WheelTpl > WheelTplList;
+		typedef AssocVector< String, WheelTpl > WheelTplList;
 
 		//
 
@@ -174,6 +181,7 @@
 				delete itShape.getNext();
 			mChassis.mChassisShapes.clear();
 		}
+		//VehicleTemplate* clone() const;
 	};
 
 } // namespace vehicle

Modified: trunk/yake/yapp/vehicle/yakeVehicleSystem.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeVehicleSystem.h	2005-10-11 21:43:42 UTC (rev 1007)
+++ trunk/yake/yapp/vehicle/yakeVehicleSystem.h	2005-10-11 21:44:24 UTC (rev 1008)
@@ -40,6 +40,8 @@
 		virtual ~IVehicleSystem() {}
 		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld) = 0;
 		virtual bool loadTemplates(const String& fn) = 0;
+		//virtual VehicleTemplate* cloneTemplate(const String& tpl) = 0;
+		virtual VehicleTemplate* getTemplate(const String& tpl) const = 0;
 		virtual IVehicle* create(const String& tpl, physics::IWorld& PWorld) = 0;
 	};
 



From codeandroid at berlios.de  Tue Oct 11 23:44:56 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 11 Oct 2005 23:44:56 +0200
Subject: [Yake-svn] r1009 - trunk/yake/scripts/yapp
Message-ID: <200510112144.j9BLiuSO025212@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-11 23:44:55 +0200 (Tue, 11 Oct 2005)
New Revision: 1009

Modified:
   trunk/yake/scripts/yapp/vehicle.vcproj
Log:
added folder "generic"

Modified: trunk/yake/scripts/yapp/vehicle.vcproj
===================================================================
--- trunk/yake/scripts/yapp/vehicle.vcproj	2005-10-11 21:44:24 UTC (rev 1008)
+++ trunk/yake/scripts/yapp/vehicle.vcproj	2005-10-11 21:44:55 UTC (rev 1009)
@@ -197,6 +197,10 @@
 			Name="nativeNx"
 			Filter="">
 		</Filter>
+		<Filter
+			Name="generic"
+			Filter="">
+		</Filter>
 	</Files>
 	<Globals>
 	</Globals>



From codeandroid at berlios.de  Wed Oct 12 23:00:34 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Wed, 12 Oct 2005 23:00:34 +0200
Subject: [Yake-svn] r1010 - trunk/yake/scripts/yake
Message-ID: <200510122100.j9CL0YH7008015@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-12 23:00:33 +0200 (Wed, 12 Oct 2005)
New Revision: 1010

Removed:
   trunk/yake/scripts/yake/yakeLib.sln
   trunk/yake/scripts/yake/yakeLib.suo
Log:
deprecated

Deleted: trunk/yake/scripts/yake/yakeLib.sln
===================================================================
--- trunk/yake/scripts/yake/yakeLib.sln	2005-10-11 21:44:55 UTC (rev 1009)
+++ trunk/yake/scripts/yake/yakeLib.sln	2005-10-12 21:00:33 UTC (rev 1010)
@@ -1,64 +0,0 @@
-Microsoft Visual Studio Solution File, Format Version 8.00
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "base", "base.vcproj", "{D29771DD-715F-452B-B71C-911BACF5956D}"
-	ProjectSection(ProjectDependencies) = postProject
-	EndProjectSection
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "input", "input.vcproj", "{1AF3930A-4E72-4455-AFD0-6B78684105CD}"
-	ProjectSection(ProjectDependencies) = postProject
-	EndProjectSection
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "graphics", "graphics.vcproj", "{ECC8FA24-93AC-4659-8EBD-26B6F418AC64}"
-	ProjectSection(ProjectDependencies) = postProject
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
-	EndProjectSection
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "physics", "physics.vcproj", "{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}"
-	ProjectSection(ProjectDependencies) = postProject
-	EndProjectSection
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "scripting", "scripting.vcproj", "{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}"
-	ProjectSection(ProjectDependencies) = postProject
-	EndProjectSection
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "graphicsOGRE", "plugins\graphics\graphicsOgre.vcproj", "{A2C2A0B2-2EB0-4254-891D-FE93466809CF}"
-	ProjectSection(ProjectDependencies) = postProject
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
-	EndProjectSection
-EndProject
-Global
-	GlobalSection(SolutionConfiguration) = preSolution
-		Debug = Debug
-		Release = Release
-	EndGlobalSection
-	GlobalSection(ProjectConfiguration) = postSolution
-		{D29771DD-715F-452B-B71C-911BACF5956D}.Debug.ActiveCfg = Debug|Win32
-		{D29771DD-715F-452B-B71C-911BACF5956D}.Debug.Build.0 = Debug|Win32
-		{D29771DD-715F-452B-B71C-911BACF5956D}.Release.ActiveCfg = Release|Win32
-		{D29771DD-715F-452B-B71C-911BACF5956D}.Release.Build.0 = Release|Win32
-		{1AF3930A-4E72-4455-AFD0-6B78684105CD}.Debug.ActiveCfg = Debug|Win32
-		{1AF3930A-4E72-4455-AFD0-6B78684105CD}.Debug.Build.0 = Debug|Win32
-		{1AF3930A-4E72-4455-AFD0-6B78684105CD}.Release.ActiveCfg = Release|Win32
-		{1AF3930A-4E72-4455-AFD0-6B78684105CD}.Release.Build.0 = Release|Win32
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64}.Debug.ActiveCfg = Debug|Win32
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64}.Debug.Build.0 = Debug|Win32
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64}.Release.ActiveCfg = Release|Win32
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64}.Release.Build.0 = Release|Win32
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}.Debug.ActiveCfg = Debug|Win32
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}.Debug.Build.0 = Debug|Win32
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}.Release.ActiveCfg = Release|Win32
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}.Release.Build.0 = Release|Win32
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}.Debug.ActiveCfg = Debug|Win32
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}.Debug.Build.0 = Debug|Win32
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}.Release.ActiveCfg = Release|Win32
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}.Release.Build.0 = Release|Win32
-		{A2C2A0B2-2EB0-4254-891D-FE93466809CF}.Debug.ActiveCfg = Debug|Win32
-		{A2C2A0B2-2EB0-4254-891D-FE93466809CF}.Debug.Build.0 = Debug|Win32
-		{A2C2A0B2-2EB0-4254-891D-FE93466809CF}.Release.ActiveCfg = Release|Win32
-		{A2C2A0B2-2EB0-4254-891D-FE93466809CF}.Release.Build.0 = Release|Win32
-	EndGlobalSection
-	GlobalSection(ExtensibilityGlobals) = postSolution
-	EndGlobalSection
-	GlobalSection(ExtensibilityAddIns) = postSolution
-	EndGlobalSection
-EndGlobal

Deleted: trunk/yake/scripts/yake/yakeLib.suo
===================================================================
(Binary files differ)



From codeandroid at berlios.de  Thu Oct 13 00:19:30 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:19:30 +0200
Subject: [Yake-svn] r1011 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200510122219.j9CMJUA7013242@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:19:29 +0200 (Thu, 13 Oct 2005)
New Revision: 1011

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
Log:
improved behaviour (e.g. friction)

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-12 21:00:33 UTC (rev 1010)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-12 22:19:29 UTC (rev 1011)
@@ -287,7 +287,7 @@
 				}
 				
 				///FIXME Implement materials!
-				contact[i].surface.mu = 0; //std::min( this->getFriction(), pOther->getFriction());
+				contact[i].surface.mu = std::min( rMatA.mFriction, rMatB.mFriction );
 				float friction2 = std::min( rMatA.mFriction2, rMatB.mFriction2 ); //std::min(this->getFriction2(), pOther->getFriction2());
 				if ( friction2 > 0.f )
 				{
@@ -348,7 +348,7 @@
 				contact[i].surface.motion1 = 0;
 				contact[i].surface.motion2 = 0;
 
-				contact[i].surface.soft_erp = 0.9; // 0.8
+				contact[i].surface.soft_erp = 0.95; // 0.8
 				//contact[i].surface.bounce = 0.05; //0.05
 				//contact[i].surface.bounce_vel = 0.025; //0.025
 				

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-10-12 21:00:33 UTC (rev 1010)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-10-12 22:19:29 UTC (rev 1011)
@@ -55,11 +55,14 @@
 			setMass( 1 );
 			setPosition( Vector3(0,0,0) );
 			setOrientation( Quaternion::kIdentity );
+
+			mOdeWorld->_addBody( this );
 		}
 
 		//---------------------------------------------------
 		OdeBody::~OdeBody()
 		{
+			mOdeWorld->_removeBody( this );
 			YAKE_SAFE_DELETE( mOdeBody );
 		}
 		

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp	2005-10-12 21:00:33 UTC (rev 1010)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp	2005-10-12 22:19:29 UTC (rev 1011)
@@ -32,8 +32,8 @@
 
 	//---------------------------------------------------
 	OdeMaterial::OdeMaterial() : 
-		mSoftness(0.5),
-		mFriction(1),
+		mSoftness(0),
+		mFriction(10),
 		mFriction2(0),
 		mLateralSlip(false),
 		mSlipNormal(Vector3::kZero),
@@ -59,7 +59,7 @@
 	}
 	void OdeMaterial::setStaticFriction( const real friction )
 	{
-		//@todo
+		mFriction = friction; //@todo is that right?
 	}
 	void OdeMaterial::setStaticFrictionV( const real friction )
 	{

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-12 21:00:33 UTC (rev 1010)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-12 22:19:29 UTC (rev 1011)
@@ -49,19 +49,20 @@
 			
 			mOdeContactGroup = new dJointGroup( 0 );
 
+			mOdeWorld->setAutoDisableFlag( 1 );
+			mOdeWorld->setAutoDisableAngularThreshold( 0.04 ); // ODE default: 0.01
+			mOdeWorld->setAutoDisableLinearThreshold( 0.03 ); // ODE default: 0.01
+			mOdeWorld->setAutoDisableSteps( 30 ); // ODE default: 10
+			mOdeWorld->setAutoDisableTime( 0 ); // ODE default: 0. (= ignore time)
+
 			mOdeWorld->setGravity( 0., -9.81, 0. );
 			mOdeWorld->setCFM( 0.0005 );
 			mOdeWorld->setERP( 0.99 );
-			mOdeWorld->setAutoDisableFlag( 1 );
-			mOdeWorld->setAutoDisableAngularThreshold( 0.005 ); // ODE default: 0.01
-			mOdeWorld->setAutoDisableLinearThreshold( 0.005 ); // ODE default: 0.01
-			mOdeWorld->setAutoDisableSteps( 10 ); // ODE default: 10
-			mOdeWorld->setAutoDisableTime( 0 ); // ODE default: 0. (= ignore time)
 
 			dWorldSetQuickStepNumIterations( mOdeWorld->id(), 20 );
 
-			//dWorldSetContactMaxCorrectingVel( mOdeWorld->id(), 2. );
-			dWorldSetContactSurfaceLayer( mOdeWorld->id(), 0.0075 );
+			dWorldSetContactMaxCorrectingVel( mOdeWorld->id(), 10. );
+			dWorldSetContactSurfaceLayer( mOdeWorld->id(), 0.025 );
 
 			mTime = real(0.);
 		}
@@ -254,30 +255,37 @@
 			mActors.push_back( SharedPtr<OdeActor>( pActor ) );
 			return pActor;
 		}
+		//-----------------------------------------------------
 		bool operator==(const SharedPtr<OdeJoint>& lhs, const OdeJoint* rhs)
 		{
 			return (lhs.get() == rhs);
 		}
+		//-----------------------------------------------------
 		void OdeWorld::destroyJoint( IJointPtr pJoint )
 		{
 			YAKE_ASSERT( pJoint );
 			mJoints.erase( std::find(mJoints.begin(), mJoints.end(), dynamic_cast<OdeJoint*>(pJoint) ) );
 		}
+		//-----------------------------------------------------
 		bool operator==(const SharedPtr<OdeActor>& lhs, const OdeActor* rhs)
 		{
 			return (lhs.get() == rhs);
 		}
+		//-----------------------------------------------------
 		void OdeWorld::destroyActor( IActorPtr pActor )
 		{
 			YAKE_ASSERT( pActor );
 			mActors.erase( std::find(mActors.begin(), mActors.end(), dynamic_cast<OdeActor*>(pActor) ) );
 		}
+		//-----------------------------------------------------
 		void OdeWorld::destroyAvatar( IAvatarPtr pAvatar )
 		{
 			YAKE_ASSERT( 0 && "NOT IMPLEMENTED" );
 			//YAKE_ASSERT( !pAvatar.expired() );
 			//mAvatars.erase( std::find(mAvatars.begin(), mAvatars.end(), dynamic_cast<OdeAvatar*>(pAvatar .lock().get()) ) );
 		}
+
+		//-----------------------------------------------------
 		bool operator==(const SharedPtr<OdeMaterial>& lhs, const OdeMaterial* rhs)
 		{
 			return (lhs.get() == rhs);
@@ -319,6 +327,7 @@
 
 				firePreStepInternal(mStepSize);
 
+				//dWorldStep( mOdeWorld->id(), mStepSize );
 				dWorldQuickStep( mOdeWorld->id(), mStepSize );
 				//dWorldStepFast1( mOdeWorld->id(), mStepSize, 4 );
 
@@ -328,6 +337,24 @@
 
 				// Clear contacts
 				mOdeContactGroup->empty();
+
+				// Dampen bodies
+				ConstVectorIterator< BodyList > itBody( mBodies );
+				while (itBody.hasMoreElements())
+				{
+					OdeBody* pBody = itBody.getNext();
+					YAKE_ASSERT( pBody );
+					dBody* pOdeBody = pBody->_getOdeBody();
+					YAKE_ASSERT( pOdeBody );
+					if (!pOdeBody->isEnabled())
+						continue;
+					const dReal vScale = -0.04 * pBody->getMass();
+					const dReal aScale = -0.05 * pBody->getMass();
+					dReal const* linV = pOdeBody->getLinearVel();
+					pOdeBody->addForce( vScale*linV[0], vScale*linV[1], vScale*linV[2] );
+					dReal const* angV = pOdeBody->getAngularVel();
+					pOdeBody->addTorque( aScale*angV[0], aScale*angV[1], aScale*angV[2] );
+				}
 			}
 			
 			firePostStep( mTime );
@@ -366,6 +393,22 @@
 		}
 		
 		//-----------------------------------------------------
+		void OdeWorld::_addBody( OdeBody* body )
+		{
+			YAKE_ASSERT( body );
+			if (body)
+				mBodies.push_back( body );
+		}
+
+		//-----------------------------------------------------
+		void OdeWorld::_removeBody( OdeBody* body )
+		{
+			BodyList::iterator itFind = std::find( mBodies.begin(), mBodies.end(), body );
+			if (itFind != mBodies.end())
+				mBodies.erase( itFind );
+		}
+
+		//-----------------------------------------------------
 		void OdeWorld::_OdeNearCallback ( void* data, dGeomID o1, dGeomID o2 )
 		{
 			//YAKE_LOG("OdeWorld::->NearCallBack()");



From codeandroid at berlios.de  Thu Oct 13 00:20:31 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:20:31 +0200
Subject: [Yake-svn] r1012 - trunk/yake/yake/plugins/physicsODE
Message-ID: <200510122220.j9CMKVYA013331@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:20:30 +0200 (Thu, 13 Oct 2005)
New Revision: 1012

Modified:
   trunk/yake/yake/plugins/physicsODE/OdeActor.h
   trunk/yake/yake/plugins/physicsODE/OdeBody.h
   trunk/yake/yake/plugins/physicsODE/OdeJoint.h
   trunk/yake/yake/plugins/physicsODE/OdeMaterial.h
   trunk/yake/yake/plugins/physicsODE/OdeShapes.h
   trunk/yake/yake/plugins/physicsODE/OdeWorld.h
   trunk/yake/yake/plugins/physicsODE/PhysicsSystemODE.h
   trunk/yake/yake/plugins/physicsODE/yakePCH.h
Log:
improved behaviour (e.g. friction),
added dll interfaces

Modified: trunk/yake/yake/plugins/physicsODE/OdeActor.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -1,6 +1,34 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright  2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
 #ifndef ODE_ACTOR_H
 #define ODE_ACTOR_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
+
 namespace yake
 {	
 namespace physics
@@ -8,7 +36,7 @@
 	class OdeWorld;
 	class OdeGeom;
 	
-	class OdeActor : public IActor
+	class YAKE_PHYSICSODE_API OdeActor : public IActor
 	{
 	public:
 		OdeActor( OdeWorld* pOdeWorld, bool bDynamic );

Modified: trunk/yake/yake/plugins/physicsODE/OdeBody.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeBody.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/OdeBody.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -27,12 +27,14 @@
 #ifndef YAKE_ODEBODY_H
 #define YAKE_ODEBODY_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
+
 namespace yake {
 namespace physics {
 
 		class OdeActor;
 		
-		class OdeBody : public IBody
+		class YAKE_PHYSICSODE_API OdeBody : public IBody
 		{
 		public:
 			OdeBody( OdeWorld* pWorld, OdeActor& rOwner );

Modified: trunk/yake/yake/plugins/physicsODE/OdeJoint.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeJoint.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/OdeJoint.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -27,16 +27,18 @@
 #ifndef YAKE_ODEJOINT_H
 #define YAKE_ODEJOINT_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
+
 namespace yake {
 namespace physics {
 
 		class OdeWorld;
 		
-		class OdeJoint : public IJoint
+		class YAKE_PHYSICSODE_API OdeJoint : public IJoint
 		{
 		protected:
-			OdeJoint();
-			OdeJoint( OdeJoint const& );
+			//OdeJoint();
+			//OdeJoint( OdeJoint const& );
 			OdeJoint( OdeWorld* pWorld, JointType type );
 		
 		public:
@@ -68,6 +70,9 @@
 
 			YAKE_MEMBERSIGNAL_VIRTUALIMPL( public, void, OnBreaking )
 			YAKE_MEMBERSIGNAL_FIRE_FN0( public, OnBreaking )
+
+			dJoint* _getOdeJoint() const
+			{ return mOdeJoint; }
 		protected:
 			void _applySpring();
 			real _getCFMFromSpring() const;
@@ -82,7 +87,7 @@
 			JointType		mType;
 		};
 
-		class OdeHingeJoint : public OdeJoint
+		class YAKE_PHYSICSODE_API OdeHingeJoint : public OdeJoint
 		{
 		public:
 			OdeHingeJoint( OdeWorld* pWorld );
@@ -104,7 +109,7 @@
 			real	mMaxForce0;
 		};
 
-		class OdeHinge2Joint : public OdeJoint
+		class YAKE_PHYSICSODE_API OdeHinge2Joint : public OdeJoint
 		{
 		public:
 			OdeHinge2Joint( OdeWorld* pWorld );
@@ -127,7 +132,7 @@
 			real	mMaxForce[2];
 		};
 
-		class OdeBallJoint : public OdeJoint
+		class YAKE_PHYSICSODE_API OdeBallJoint : public OdeJoint
 		{
 		public:
 			OdeBallJoint( OdeWorld* pWorld );
@@ -146,7 +151,7 @@
 			virtual void setLimits( size_t axisIndex, real low, real high );
 		};
 
-		class OdeFixedJoint : public OdeJoint
+		class YAKE_PHYSICSODE_API OdeFixedJoint : public OdeJoint
 		{
 		public:
 			OdeFixedJoint( OdeWorld* pWorld );
@@ -167,7 +172,7 @@
 			virtual void setLimits( size_t axisIndex, real low, real high );
 		};
 
-		class OdeSliderJoint : public OdeJoint
+		class YAKE_PHYSICSODE_API OdeSliderJoint : public OdeJoint
 		{
 		public:
 			OdeSliderJoint( OdeWorld* pWorld );
@@ -190,7 +195,7 @@
 			real	mMaxForce0;
 		};
 		
-		class OdeUniversalJoint : public OdeJoint
+		class YAKE_PHYSICSODE_API OdeUniversalJoint : public OdeJoint
 		{
 		public:
 			OdeUniversalJoint( OdeWorld* pWorld );

Modified: trunk/yake/yake/plugins/physicsODE/OdeMaterial.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeMaterial.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/OdeMaterial.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -27,11 +27,13 @@
 #ifndef ODE_MATERIAL_H
 #define ODE_MATERIAL_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
+
 namespace yake
 {
 namespace physics
 {
-	class OdeMaterial : public IMaterial
+	class YAKE_PHYSICSODE_API OdeMaterial : public IMaterial
 	{
 	public:
 		OdeMaterial();

Modified: trunk/yake/yake/plugins/physicsODE/OdeShapes.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeShapes.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/OdeShapes.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -27,6 +27,7 @@
 #ifndef YAKE_ODESHAPES_H
 #define YAKE_ODESHAPES_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
 #include <yake/plugins/physicsODE/OdeMaterial.h>
 
 namespace yake {
@@ -34,11 +35,11 @@
 
 		class OdeActor;
 		class OdeTransformGeom;
-		class OdeGeom : public IShape
+		class YAKE_PHYSICSODE_API OdeGeom : public IShape
 		{
 			friend class OdeTransformGeom;
 			OdeGeom();
-			OdeGeom(const OdeGeom&);
+			//OdeGeom(const OdeGeom&);
 		public:
 			OdeGeom(OdeActor* pOwner);
 			virtual ~OdeGeom();
@@ -70,7 +71,7 @@
 			OdeActor*			mOwner;
 		};
 		
-		class OdeTransformGeom : public OdeGeom
+		class YAKE_PHYSICSODE_API OdeTransformGeom : public OdeGeom
 		{
 		public:
 			OdeTransformGeom( dSpace* pSpace, OdeActor* pOwner );
@@ -84,7 +85,7 @@
 			OdeGeom*	mAttachedGeom;
 		};
 		
-		class OdePlane : public OdeGeom
+		class YAKE_PHYSICSODE_API OdePlane : public OdeGeom
 		{
 		public:
 			OdePlane( dSpace* pSpace, OdeActor* pOwner, real a, real b, real c, real d );
@@ -92,7 +93,7 @@
 			virtual ShapeType getType() const;
 		};
 		
-		class OdeSphere :  public OdeGeom
+		class YAKE_PHYSICSODE_API OdeSphere :  public OdeGeom
 		{
 		public:
 			OdeSphere::OdeSphere( dSpace* pSpace, OdeActor* pOwner, real radius );
@@ -100,7 +101,7 @@
 			virtual ShapeType getType() const;
 		};
 		
-		class OdeBox : public OdeGeom
+		class YAKE_PHYSICSODE_API OdeBox : public OdeGeom
 		{
 		public:
 			OdeBox( dSpace* pSpace, OdeActor* pOwner, real sizex, real sizey, real sizez);
@@ -108,7 +109,7 @@
 			virtual ShapeType getType() const;
 		};
 		
-		class OdeCCylinder : public OdeGeom
+		class YAKE_PHYSICSODE_API OdeCCylinder : public OdeGeom
 		{
 		public:
 			OdeCCylinder( dSpace* pSpace, OdeActor* pOwner, real radius, real length );
@@ -116,7 +117,7 @@
 			virtual ShapeType getType() const;
 		};
 		
-		class OdeTriMesh : public OdeGeom
+		class YAKE_PHYSICSODE_API OdeTriMesh : public OdeGeom
 		{
 			public:
 

Modified: trunk/yake/yake/plugins/physicsODE/OdeWorld.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -27,6 +27,7 @@
 #ifndef YAKE_ODEWORLD_H
 #define YAKE_ODEWORLD_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
 #include "yake/plugins/physicsODE/OdeShapes.h"
 
 namespace yake {
@@ -42,7 +43,7 @@
 		class OdeAvatar;
 		class OdeMaterial;
 		
-		class OdeWorld : public IWorld
+		class YAKE_PHYSICSODE_API OdeWorld : public IWorld
 		{
 		public:
 			OdeWorld();
@@ -83,7 +84,6 @@
 			YAKE_MEMBERSIGNAL_FIRE_FN1( public, PreStepInternal, const real dt, dt )
 		public:
 
-			///TODO what are these for?
 			// helpers
 			dWorldID _getOdeID() const;
 			dJointGroup* _getOdeContactJointGroup() const 

Modified: trunk/yake/yake/plugins/physicsODE/PhysicsSystemODE.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/PhysicsSystemODE.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/PhysicsSystemODE.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -27,6 +27,8 @@
 #ifndef YAKE_PHYSICSSYSTEMODE_H
 #define YAKE_PHYSICSSYSTEMODE_H
 
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
+
 namespace yake {
 namespace physics {
 

Modified: trunk/yake/yake/plugins/physicsODE/yakePCH.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/yakePCH.h	2005-10-12 22:19:29 UTC (rev 1011)
+++ trunk/yake/yake/plugins/physicsODE/yakePCH.h	2005-10-12 22:20:30 UTC (rev 1012)
@@ -35,6 +35,7 @@
 
 #include <yake/base/yake.h>
 #include <yake/physics/yakePhysics.h>
+#include <yake/plugins/physicsODE/yakePrerequisites.h>
 
 //@todo fix these macros
 #define VEC_YAKE2ODE( YV ) ::Ogre::Vector3( YV.x, YV.y, YV.z )



From codeandroid at berlios.de  Thu Oct 13 00:20:49 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:20:49 +0200
Subject: [Yake-svn] r1013 - trunk/yake/yake/plugins/physicsODE
Message-ID: <200510122220.j9CMKnuF013383@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:20:49 +0200 (Thu, 13 Oct 2005)
New Revision: 1013

Added:
   trunk/yake/yake/plugins/physicsODE/yakePrerequisites.h
Log:
initial revision

Added: trunk/yake/yake/plugins/physicsODE/yakePrerequisites.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/yakePrerequisites.h	2005-10-12 22:20:30 UTC (rev 1012)
+++ trunk/yake/yake/plugins/physicsODE/yakePrerequisites.h	2005-10-12 22:20:49 UTC (rev 1013)
@@ -0,0 +1,40 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_PHYSICS_ODE_PREREQUISITES_H
+#define YAKE_PHYSICS_ODE_PREREQUISITES_H
+
+#ifdef YAKEPHYSICSODE_EXPORTS
+#	define YAKE_PHYSICSODE_API DLLEXPORT
+#else
+#	pragma message("Importing yake::physicsOde")
+#	define YAKE_PHYSICSODE_API DLLIMPORT
+#	if YAKE_PLATFORM == PLATFORM_WIN32
+#		pragma comment(lib,"physicsODE")
+#	endif
+#endif
+
+#endif



From codeandroid at berlios.de  Thu Oct 13 00:23:58 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:23:58 +0200
Subject: [Yake-svn] r1014 - trunk/yake/yake/physics
Message-ID: <200510122223.j9CMNwVh013627@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:23:57 +0200 (Thu, 13 Oct 2005)
New Revision: 1014

Modified:
   trunk/yake/yake/physics/yakePhysicsActor.h
   trunk/yake/yake/physics/yakePhysicsAvatar.h
   trunk/yake/yake/physics/yakePhysicsBody.h
   trunk/yake/yake/physics/yakePhysicsJoint.h
   trunk/yake/yake/physics/yakePhysicsMaterial.h
   trunk/yake/yake/physics/yakePhysicsPrerequisites.h
   trunk/yake/yake/physics/yakePhysicsShape.h
   trunk/yake/yake/physics/yakePhysicsWorld.h
Log:
added dll interfaces

Modified: trunk/yake/yake/physics/yakePhysicsActor.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsActor.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsActor.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -62,7 +62,7 @@
 		ACTOR_DYNAMIC
 	};
 	class IWorld;
-	class IActor : public Movable, public ListenerManager<IActorListener>
+	class YAKE_PHYSICS_API IActor : public Movable, public ListenerManager<IActorListener>
 	{
 	public:
 		struct Desc

Modified: trunk/yake/yake/physics/yakePhysicsAvatar.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsAvatar.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsAvatar.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -37,7 +37,7 @@
 	using namespace math;
 namespace physics {
 
-	class IAvatarListener
+	class YAKE_PHYSICS_API IAvatarListener
 	{
 	public:
 		virtual ~IAvatarListener() {}
@@ -48,7 +48,7 @@
 	};
 
 	/** An avatar in a physical world. */
-	class IAvatar : public Movable, public ListenerManager<IAvatarListener>
+	class YAKE_PHYSICS_API IAvatar : public Movable, public ListenerManager<IAvatarListener>
 	{
 	public:
 		struct Desc

Modified: trunk/yake/yake/physics/yakePhysicsBody.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsBody.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsBody.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -42,7 +42,7 @@
 		RF_GLOBAL
 	};
 
-	struct Force
+	struct YAKE_PHYSICS_API Force
 	{
 		Vector3			force;
 		real				duration;
@@ -78,18 +78,18 @@
 		}
 	};
 
-	class IBodyListener
+	class YAKE_PHYSICS_API IBodyListener
 	{
 	public:
 		virtual ~IBodyListener() {}
 		
-		virtual void onSleeping(const bool sleeping);
+		virtual void onSleeping(const bool sleeping) = 0;
 	};
 	class IBody;
 	YAKE_PHYSICS_COMMON_POINTERS( IBody );
 
 	class IActor;
-	class IBody : public ListenerManager<IBodyListener>
+	class YAKE_PHYSICS_API IBody : public ListenerManager<IBodyListener>
 	{
 	public:
 		enum quantityType { QT_MASS, QT_DENSITY };

Modified: trunk/yake/yake/physics/yakePhysicsJoint.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsJoint.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsJoint.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -74,7 +74,7 @@
 
 	class IActor;
 	class IAngularMotor;
-	class IJoint
+	class YAKE_PHYSICS_API IJoint
 	{
 	public:
 		/**

Modified: trunk/yake/yake/physics/yakePhysicsMaterial.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsMaterial.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsMaterial.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -37,7 +37,7 @@
 	using namespace math;
 namespace physics {
 
-	class IMaterial
+	class YAKE_PHYSICS_API IMaterial
 	{
 	public:
 		struct Desc

Modified: trunk/yake/yake/physics/yakePhysicsPrerequisites.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsPrerequisites.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsPrerequisites.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -66,7 +66,9 @@
 			}
 			void removeListener(ListenerType* pListener)
 			{
-				mListeners.remove( pListener );
+				ListenerPtrList::iterator itFind = std::find( mListeners.begin(), mListeners.end(), pListener );
+				if (itFind != mListeners.end())
+					mListeners.erase( itFind );
 			}
 		};
 

Modified: trunk/yake/yake/physics/yakePhysicsShape.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsShape.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsShape.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -62,7 +62,7 @@
 
 	class IMaterial;
 	/** A shape is what we formerly called "collision geom" in yake::physics. */
-	class IShape : public Movable
+	class YAKE_PHYSICS_API IShape : public Movable
 	{
 	public:
 		struct Desc
@@ -78,6 +78,7 @@
 			{}
 
 			virtual ~Desc() {}
+			//virtual Desc* clone() const = 0;
 
 			ShapeType	type; // superfluous as shape type is determined by dynamic_cast on Desc struct...
 			Vector3		position;

Modified: trunk/yake/yake/physics/yakePhysicsWorld.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsWorld.h	2005-10-12 22:20:49 UTC (rev 1013)
+++ trunk/yake/yake/physics/yakePhysicsWorld.h	2005-10-12 22:23:57 UTC (rev 1014)
@@ -49,7 +49,7 @@
 	using namespace math;
 namespace physics {
 
-	class IWorld
+	class YAKE_PHYSICS_API IWorld
 	{
 	public:
 		virtual ~IWorld() {}



From codeandroid at berlios.de  Thu Oct 13 00:25:05 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:25:05 +0200
Subject: [Yake-svn] r1015 - trunk/yake/src/yapp/samples/base/vehicle
Message-ID: <200510122225.j9CMP5BW013688@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:25:05 +0200 (Thu, 13 Oct 2005)
New Revision: 1015

Modified:
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
Log:


Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-12 22:23:57 UTC (rev 1014)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-12 22:25:05 UTC (rev 1015)
@@ -14,7 +14,7 @@
 struct TheConfiguration : public raf::ApplicationConfiguration
 {
 	virtual StringVector getLibraries()
-	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsNx"; }
+	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsOde"; }
 
 	//virtual StringVector getScriptingSystems()
 	//{ return MakeStringVector() << "lua"; }
@@ -26,7 +26,7 @@
 	{ return MakeStringVector() << "ogre"; }
 
 	virtual StringVector getPhysicsSystems()
-	{ return MakeStringVector() << "nx"; }
+	{ return MakeStringVector() << "ode"; }
 };
 
 const real razorMeshScale = 0.1;
@@ -86,7 +86,7 @@
 			graphics::IEntity* pGroundE = getGraphicalWorld()->createEntity("plane_1x1.mesh");
 			pGroundE->setMaterial("box");
 			pGroundSN->attachEntity( pGroundE );
-			pGroundSN->setScale( Vector3(100,1,100) );
+			pGroundSN->setScale( Vector3(200,1,200) );
 			pGroundSN->setPosition( Vector3(0,-10,0) );
 
 			model::Graphical* pG = new model::Graphical();



From codeandroid at berlios.de  Thu Oct 13 00:25:26 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:25:26 +0200
Subject: [Yake-svn] r1016 - in trunk/yake/scripts: yake/plugins/physics yapp
Message-ID: <200510122225.j9CMPQuP013729@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:25:25 +0200 (Thu, 13 Oct 2005)
New Revision: 1016

Modified:
   trunk/yake/scripts/yake/plugins/physics/physicsODE.vcproj
   trunk/yake/scripts/yapp/vehicle.vcproj
Log:


Modified: trunk/yake/scripts/yake/plugins/physics/physicsODE.vcproj
===================================================================
--- trunk/yake/scripts/yake/plugins/physics/physicsODE.vcproj	2005-10-12 22:25:05 UTC (rev 1015)
+++ trunk/yake/scripts/yake/plugins/physics/physicsODE.vcproj	2005-10-12 22:25:25 UTC (rev 1016)
@@ -208,6 +208,9 @@
 			<File
 				RelativePath="..\..\..\..\yake\plugins\physicsODE\yakePCH.h">
 			</File>
+			<File
+				RelativePath="..\..\..\..\yake\plugins\physicsODE\yakePrerequisites.h">
+			</File>
 		</Filter>
 	</Files>
 	<Globals>

Modified: trunk/yake/scripts/yapp/vehicle.vcproj
===================================================================
--- trunk/yake/scripts/yapp/vehicle.vcproj	2005-10-12 22:25:05 UTC (rev 1015)
+++ trunk/yake/scripts/yapp/vehicle.vcproj	2005-10-12 22:25:25 UTC (rev 1016)
@@ -20,7 +20,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
+				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl;../../dependencies/ode/include"
 				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_CONSOLE;YAKE_VEHICLE_EXPORTS"
 				MinimalRebuild="TRUE"
 				BasicRuntimeChecks="3"
@@ -38,7 +38,7 @@
 				AdditionalDependencies="base.lib physics.lib data.lib"
 				OutputFile="$(OutDir)/$(ProjectName).dll"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
+				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib;../../dependencies/ode/lib"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
 				SubSystem="1"
@@ -73,7 +73,7 @@
 			CharacterSet="2">
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
+				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl;../../dependencies/ode/include"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;YAKE_VEHICLE_EXPORTS"
 				RuntimeLibrary="2"
 				RuntimeTypeInfo="TRUE"
@@ -89,7 +89,7 @@
 				AdditionalDependencies="base.lib physics.lib data.lib"
 				OutputFile="$(OutDir)/$(ProjectName).dll"
 				LinkIncremental="1"
-				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
+				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib;../../dependencies/ode/lib"
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
 				SubSystem="1"



From codeandroid at berlios.de  Thu Oct 13 00:25:46 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:25:46 +0200
Subject: [Yake-svn] r1017 - trunk/yake/common/media/vehicles
Message-ID: <200510122225.j9CMPkD2013785@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:25:46 +0200 (Thu, 13 Oct 2005)
New Revision: 1017

Modified:
   trunk/yake/common/media/vehicles/jet.xml
Log:


Modified: trunk/yake/common/media/vehicles/jet.xml
===================================================================
--- trunk/yake/common/media/vehicles/jet.xml	2005-10-12 22:25:25 UTC (rev 1016)
+++ trunk/yake/common/media/vehicles/jet.xml	2005-10-12 22:25:46 UTC (rev 1017)
@@ -47,7 +47,7 @@
 			<direction x="0" y="-1" z="0" />
 		</mountPoint>
 		<engine name="upward" type="MountedThruster" mountPoint="bottom">
-			<forces min="0." max="70." dieOff="10" rise="20" />
+			<forces min="0." max="150." dieOff="10" rise="20" />
 		</engine>
 	</vehicleTemplate>
 </dotvehicle>
\ No newline at end of file



From codeandroid at berlios.de  Thu Oct 13 00:26:12 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:26:12 +0200
Subject: [Yake-svn] r1018 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200510122226.j9CMQC1f013817@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:26:12 +0200 (Thu, 13 Oct 2005)
New Revision: 1018

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp
Log:
modified default friction

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp	2005-10-12 22:25:46 UTC (rev 1017)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp	2005-10-12 22:26:12 UTC (rev 1018)
@@ -34,7 +34,7 @@
 	OdeMaterial::OdeMaterial() : 
 		mSoftness(0),
 		mFriction(10),
-		mFriction2(0),
+		mFriction2(5),
 		mLateralSlip(false),
 		mSlipNormal(Vector3::kZero),
 		mSlipLinearCoeff(0),



From codeandroid at berlios.de  Thu Oct 13 00:26:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:26:45 +0200
Subject: [Yake-svn] r1019 - trunk/yake/yapp/vehicle
Message-ID: <200510122226.j9CMQji9013873@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:26:44 +0200 (Thu, 13 Oct 2005)
New Revision: 1019

Modified:
   trunk/yake/yapp/vehicle/yakeVehicle.h
Log:
added ode/nx specific defines

Modified: trunk/yake/yapp/vehicle/yakeVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeVehicle.h	2005-10-12 22:26:12 UTC (rev 1018)
+++ trunk/yake/yapp/vehicle/yakeVehicle.h	2005-10-12 22:26:44 UTC (rev 1019)
@@ -33,6 +33,9 @@
 #	endif
 #endif
 
+#define YAKE_VEHICLE_USE_ODE 1
+//#define YAKE_VEHICLE_USE_NX 1
+
 #include <yake/base/yake.h>
 #include <yapp/base/yapp.h>
 #include <yapp/vehicle/yakeTemplates.h>



From codeandroid at berlios.de  Thu Oct 13 00:47:40 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:47:40 +0200
Subject: [Yake-svn] r1020 - in trunk/yake/src/yapp: raf samples/base/vehicle
Message-ID: <200510122247.j9CMleCM032660@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:47:39 +0200 (Thu, 13 Oct 2005)
New Revision: 1020

Modified:
   trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
Log:
enabled "instant quit by key"

Modified: trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp
===================================================================
--- trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp	2005-10-12 22:26:44 UTC (rev 1019)
+++ trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp	2005-10-12 22:47:39 UTC (rev 1020)
@@ -35,6 +35,12 @@
 	//-----------------------------------------------------
 	// Class: RtMainState
 	//-----------------------------------------------------
+	RtMainState::RtMainState(Application& owner) :
+		MainState(owner), 
+		mQuitRequested(false),
+		mQuitKC(input::KC_ESCAPE),
+		mQuitByKeyEnabled(false)
+	{}
 	graphics::ICamera* RtMainState::onCreateDefaultCamera()
 	{
 		return getGraphicalWorld()->createCamera();
@@ -64,6 +70,11 @@
 	{
 		return mQuitRequested;
 	}
+	void RtMainState::enableInstantQuitByKey( input::KeyCode kc )
+	{
+		mQuitByKeyEnabled = true;
+		mQuitKC = kc;
+	}
 	void RtMainState::onEnter()
 	{
 		createScene();
@@ -78,6 +89,13 @@
 			if (elapsed < real(0.0001))
 				elapsed = real(0.01);
 
+			getApp().getInputSystem()->update();
+			getApp().getKeyboardEventGenerator()->update();
+			getApp().getMouseEventGenerator()->update();
+
+			if (mQuitByKeyEnabled && getApp().getKeyboard()->isKeyDown( mQuitKC ))
+				requestQuit();
+
 			onFrame(elapsed);
 
 			if (mPWorld.get())

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-12 22:26:44 UTC (rev 1019)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-12 22:47:39 UTC (rev 1020)
@@ -40,7 +40,9 @@
 		mVehicle(0),
 		mComplex(0),
 		mGround(0)
-	{}
+	{
+		enableInstantQuitByKey( input::KC_ESCAPE );
+	}
 	~TheMainState()
 	{
 	}
@@ -219,9 +221,6 @@
 	}
 	virtual void onFrame(const real timeElapsed)
 	{
-		getApp().getInputSystem()->update();
-		getApp().getKeyboardEventGenerator()->update();
-		getApp().getMouseEventGenerator()->update();
 		mActionMap.update();
 
 		vehicle::IEnginePtrList engines = mVehicle->getEngineInterfaces();



From codeandroid at berlios.de  Thu Oct 13 00:47:54 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:47:54 +0200
Subject: [Yake-svn] r1021 - trunk/yake/yapp/raf
Message-ID: <200510122247.j9CMlsuJ032759@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:47:53 +0200 (Thu, 13 Oct 2005)
New Revision: 1021

Modified:
   trunk/yake/yapp/raf/yakeRtApplicationState.h
Log:
enabled "instant quit by key"

Modified: trunk/yake/yapp/raf/yakeRtApplicationState.h
===================================================================
--- trunk/yake/yapp/raf/yakeRtApplicationState.h	2005-10-12 22:47:39 UTC (rev 1020)
+++ trunk/yake/yapp/raf/yakeRtApplicationState.h	2005-10-12 22:47:53 UTC (rev 1021)
@@ -28,6 +28,9 @@
 #define YAKE_RAF_RTAPPLICATIONSTATE_H
 
 namespace yake {
+	namespace input {
+		enum KeyCode;
+	}
 namespace raf {
 	class Application;
 	class MainState;
@@ -36,12 +39,10 @@
 	class YAKE_RAF_API RtMainState : public MainState
 	{
 	public:
-		RtMainState(Application& owner) :
-			MainState(owner), 
-			mQuitRequested(false)
-		{}
+		RtMainState(Application& owner);
 		void requestQuit();
 		bool quitRequested() const;
+		void enableInstantQuitByKey( input::KeyCode kc );
 	protected:
 		// main message handlers to override
 
@@ -79,6 +80,9 @@
 		typedef std::vector<SharedPtr<graphics::IViewport> > ViewportList;
 		ViewportList				mViewports;
 		graphics::ICamera*			mDefaultCamera;
+
+		input::KeyCode				mQuitKC;
+		bool						mQuitByKeyEnabled;
 	};
 
 } // namespace raf



From codeandroid at berlios.de  Thu Oct 13 00:52:57 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:52:57 +0200
Subject: [Yake-svn] r1022 - trunk/yake/src/yapp/samples/raf/demo1
Message-ID: <200510122252.j9CMqvub003157@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:52:55 +0200 (Thu, 13 Oct 2005)
New Revision: 1022

Modified:
   trunk/yake/src/yapp/samples/raf/demo1/yakeDemo.cpp
Log:
enabled "instant quit by key"

Modified: trunk/yake/src/yapp/samples/raf/demo1/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/raf/demo1/yakeDemo.cpp	2005-10-12 22:47:53 UTC (rev 1021)
+++ trunk/yake/src/yapp/samples/raf/demo1/yakeDemo.cpp	2005-10-12 22:52:55 UTC (rev 1022)
@@ -1,5 +1,6 @@
 #include <yapp/samples/raf/demo1/yakePCH.h>
 #include <yake/audio/yakeAudio.h>
+#include <yake/input/yakeInput.h>
 #include <yapp/raf/yakeRaf.h>
 
 using namespace yake;
@@ -8,8 +9,11 @@
 struct TheConfiguration : public raf::ApplicationConfiguration
 {
 	virtual StringVector getLibraries()
-	{ return MakeStringVector() << "scriptingLua" << "graphicsOgre"; }
+	{ return MakeStringVector() << "scriptingLua" << "graphicsOgre" << "inputOgre"; }
 
+	virtual StringVector getInputSystems()
+	{ return MakeStringVector() << "ogre"; }
+
 	virtual StringVector getScriptingSystems()
 	{ return MakeStringVector() << "lua"; }
 
@@ -22,7 +26,9 @@
 {
 public:
 	TheMainState(raf::Application& owner) : raf::RtMainState(owner)
-	{}
+	{
+		enableInstantQuitByKey( input::KC_ESCAPE );
+	}
 protected:
 	virtual void onCreateScene()
 	{



From codeandroid at berlios.de  Thu Oct 13 00:53:16 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 00:53:16 +0200
Subject: [Yake-svn] r1023 - trunk/yake/src/yapp/raf
Message-ID: <200510122253.j9CMrG0p003209@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 00:53:15 +0200 (Thu, 13 Oct 2005)
New Revision: 1023

Modified:
   trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp
Log:
enabled "instant quit by key"

Modified: trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp
===================================================================
--- trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp	2005-10-12 22:52:55 UTC (rev 1022)
+++ trunk/yake/src/yapp/raf/yakeRtApplicationState.cpp	2005-10-12 22:53:15 UTC (rev 1023)
@@ -89,13 +89,17 @@
 			if (elapsed < real(0.0001))
 				elapsed = real(0.01);
 
-			getApp().getInputSystem()->update();
-			getApp().getKeyboardEventGenerator()->update();
-			getApp().getMouseEventGenerator()->update();
+			if (getApp().getInputSystem())
+			{
+				getApp().getInputSystem()->update();
+				if (getApp().getKeyboardEventGenerator())
+					getApp().getKeyboardEventGenerator()->update();
+				if (getApp().getMouseEventGenerator())
+					getApp().getMouseEventGenerator()->update();
+				if (mQuitByKeyEnabled && getApp().getKeyboard()->isKeyDown( mQuitKC ))
+					requestQuit();
+			}
 
-			if (mQuitByKeyEnabled && getApp().getKeyboard()->isKeyDown( mQuitKC ))
-				requestQuit();
-
 			onFrame(elapsed);
 
 			if (mPWorld.get())



From codeandroid at berlios.de  Thu Oct 13 23:00:39 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:00:39 +0200
Subject: [Yake-svn] r1024 - trunk/yake/common/media/vehicles
Message-ID: <200510132100.j9DL0dQO006575@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:00:39 +0200 (Thu, 13 Oct 2005)
New Revision: 1024

Modified:
   trunk/yake/common/media/vehicles/jet.xml
Log:
added wheels, one of which can be steered from within the demo application

Modified: trunk/yake/common/media/vehicles/jet.xml
===================================================================
--- trunk/yake/common/media/vehicles/jet.xml	2005-10-12 22:53:15 UTC (rev 1023)
+++ trunk/yake/common/media/vehicles/jet.xml	2005-10-13 21:00:39 UTC (rev 1024)
@@ -39,7 +39,7 @@
 			<direction x="0" y="0" z="-1" />
 		</mountPoint>
 		<engine name="forward" type="MountedThruster" mountPoint="rear">
-			<forces min="0." max="20." dieOff="10" rise="20" />
+			<forces min="0." max="80." dieOff="10" rise="20" />
 		</engine>
 		<!-- bottom (upward) thruster -->
 		<mountPoint name="bottom">
@@ -47,7 +47,21 @@
 			<direction x="0" y="-1" z="0" />
 		</mountPoint>
 		<engine name="upward" type="MountedThruster" mountPoint="bottom">
-			<forces min="0." max="150." dieOff="10" rise="20" />
+			<forces min="0." max="250." dieOff="10" rise="20" />
 		</engine>
+		<!-- two axles -->
+		<axle name="front" />
+		<axle name="rear" />
+		<!-- wheels - one in front for steering, two at the rear end -->
+		<steeringGroup index="0" />
+		<wheel name="frontWheel" axle="front" steeringGroup="0" radius="2.0" mass="0.1" massIsRelativeToChassis="yes" suspensionSpring="5" suspensionDamping="4.5">
+			<position x="0" y="-3" z="5.5" />
+		</wheel>
+		<wheel name="leftRearWheel" axle="rear" radius="2.0" mass="0.1" massIsRelativeToChassis="yes" suspensionSpring="5" suspensionDamping="4.5">
+			<position x="-3" y="-3" z="-3" />
+		</wheel>
+		<wheel name="rightRearWheel" axle="rear" radius="2.0" mass="0.1" massIsRelativeToChassis="yes" suspensionSpring="5" suspensionDamping="4.5">
+			<position x="3" y="-3" z="-3" />
+		</wheel>
 	</vehicleTemplate>
 </dotvehicle>
\ No newline at end of file



From codeandroid at berlios.de  Thu Oct 13 23:02:36 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:02:36 +0200
Subject: [Yake-svn] r1025 - trunk/yake/src/yake/input
Message-ID: <200510132102.j9DL2aR0006690@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:02:36 +0200 (Thu, 13 Oct 2005)
New Revision: 1025

Modified:
   trunk/yake/src/yake/input/yakeActionMap.cpp
Log:
added action ids

Modified: trunk/yake/src/yake/input/yakeActionMap.cpp
===================================================================
--- trunk/yake/src/yake/input/yakeActionMap.cpp	2005-10-13 21:00:39 UTC (rev 1024)
+++ trunk/yake/src/yake/input/yakeActionMap.cpp	2005-10-13 21:02:36 UTC (rev 1025)
@@ -38,6 +38,13 @@
 	const ActionId ACTIONID_STRAFE_RIGHT(4, "strafe_right");
 	const ActionId ACTIONID_UP(5, "up");
 	const ActionId ACTIONID_DOWN(6, "down");
+	const ActionId ACTIONID_LEFT(7, "left");
+	const ActionId ACTIONID_RIGHT(8, "right");
+	const ActionId ACTIONID_ROTATE_LEFT(9, "rotate_left");
+	const ActionId ACTIONID_ROTATE_RIGHT(10, "rotate_right");
+	const ActionId ACTIONID_USE(11, "use");
+	const ActionId ACTIONID_FIRE1(12, "fire1");
+	const ActionId ACTIONID_FIRE2(13, "fire2");
 
 	const ActionId ACTIONID_USER(10000, "user");
 



From codeandroid at berlios.de  Thu Oct 13 23:03:14 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:03:14 +0200
Subject: [Yake-svn] r1026 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200510132103.j9DL3EFg006787@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:03:14 +0200 (Thu, 13 Oct 2005)
New Revision: 1026

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
Log:
fixed order of calls to ODE during joint creation

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-13 21:02:36 UTC (rev 1025)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-13 21:03:14 UTC (rev 1026)
@@ -184,12 +184,14 @@
 			case JT_FIXED:
 				{
 				pJoint = new OdeFixedJoint( this );
+				pJoint->attach( rBody1, rBody2 );
 				}
 				break;
 			case JT_HINGE:
 				{
 				pJoint = new OdeHingeJoint( this );
 				const IJoint::DescHinge& desc = static_cast<const IJoint::DescHinge&>( rJointDesc );
+				pJoint->attach( rBody1, rBody2 );
 				pJoint->setAnchor( 0, desc.anchor );
 				pJoint->setAxis( 0, desc.axis );
 				}
@@ -198,6 +200,7 @@
 				{
 				pJoint = new OdeHinge2Joint( this );
 				const IJoint::DescHinge2& desc = static_cast<const IJoint::DescHinge2&>( rJointDesc );
+				pJoint->attach( rBody1, rBody2 );
 				pJoint->setAnchor( 0, desc.anchor );
 				pJoint->setAxis( 0, desc.axis0 );
 				pJoint->setAxis( 1, desc.axis1 );
@@ -207,6 +210,7 @@
 				{
 				pJoint = new OdeUniversalJoint( this );
 				const IJoint::DescUniversal& desc = static_cast<const IJoint::DescUniversal&>( rJointDesc );
+				pJoint->attach( rBody1, rBody2 );
 				pJoint->setAnchor( 0, desc.anchor );
 				pJoint->setAxis( 0, desc.axis0 );
 				pJoint->setAxis( 1, desc.axis1 );
@@ -216,6 +220,7 @@
 				{
 				pJoint = new OdeBallJoint( this );
 				const IJoint::DescBall& desc = static_cast<const IJoint::DescBall&>( rJointDesc );
+				pJoint->attach( rBody1, rBody2 );
 				pJoint->setAnchor( 0, desc.anchor );
 				}
 				break;
@@ -223,6 +228,7 @@
 				{
 				pJoint = new OdeSliderJoint( this );
 				const IJoint::DescSlider& desc = static_cast<const IJoint::DescSlider&>( rJointDesc );
+				pJoint->attach( rBody1, rBody2 );
 				pJoint->setAxis( 0, desc.axis );
 				}
 				break;
@@ -232,7 +238,6 @@
 			};
 			YAKE_ASSERT( pJoint != NULL ).error( "Unknown type of joint or ... some other error :(" );
 			
-			pJoint->attach( rBody1, rBody2 );
 			mJoints.push_back( SharedPtr<OdeJoint>(pJoint) );
 			
 			return pJoint;



From codeandroid at berlios.de  Thu Oct 13 23:04:56 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:04:56 +0200
Subject: [Yake-svn] r1028 - trunk/yake/src/yapp/vehicle
Message-ID: <200510132104.j9DL4uID006964@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:04:56 +0200 (Thu, 13 Oct 2005)
New Revision: 1028

Modified:
   trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
Log:
loading of wheels via dotVehicle XML,
steering of front wheel of jet,
various wheel related improvements

Modified: trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-13 21:04:23 UTC (rev 1027)
+++ trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-13 21:04:56 UTC (rev 1028)
@@ -87,6 +87,10 @@
 				parseEngine( *pN );
 			else if (name == "chassis")
 				parseChassis( *pN );
+			else if (name == "steeringGroup")
+				parseSteeringGroup( *pN );
+			else if (name == "wheel")
+				parseWheel( *pN );
 		}
 
 		const String tplId = n.getAttributeValueAs<String>("name");
@@ -221,6 +225,52 @@
 			}
 		}
 	}
+	void DotVehicleParser::parseSteeringGroup( const data::dom::INode& n )
+	{
+		const uint32 idx = uint32( StringUtil::toSizeT( n.getAttributeValueAs<String>("index") ) );
+		mpCurrVehTpl->mSteeringGroups = std::max( idx, mpCurrVehTpl->mSteeringGroups );
+		if (mpCurrVehTpl->mSteeringGroups == 0)
+			mpCurrVehTpl->mSteeringGroups = 1;
+	}
+	void DotVehicleParser::parseWheel( const data::dom::INode& n )
+	{
+		const String name = n.getAttributeValueAs<String>("name");
+		YAKE_ASSERT( !name.empty() );
+		if (name.empty())
+			return;
+		YAKE_ASSERT( mpCurrVehTpl->mWheels.find( name ) == mpCurrVehTpl->mWheels.end() )( name ).debug("duplicate wheel name. overriding values.");
+
+		Vector3 position;
+		SharedPtr<data::dom::INode> pN = n.getNodeByName("position");
+		if (pN.get())
+			parsePosition( *pN, position );
+
+		Quaternion rotation( Quaternion::kIdentity );
+		pN = n.getNodeByName("orientation");
+		if (pN.get())
+			parseOrientation( *pN, rotation );
+
+		const real radius = StringUtil::parseReal( n.getAttributeValueAs<String>("radius") );
+		uint32 sg = SG_NO_STEERING_GROUP;
+		if (!n.getAttributeValueAs<String>("steeringGroup").empty())
+			sg = uint32( StringUtil::toSizeT( n.getAttributeValueAs<String>("steeringGroup") ) );
+		const real mass = StringUtil::parseReal( n.getAttributeValueAs<String>("mass") );
+		const bool relToChassis = StringUtil::parseBool( n.getAttributeValueAs<String>("massIsRelativeToChassis") );
+		const real suspSpring = StringUtil::parseReal( n.getAttributeValueAs<String>("suspensionSpring") );
+		const real suspDamping = StringUtil::parseReal( n.getAttributeValueAs<String>("suspensionDamping") );
+
+		mpCurrVehTpl->mWheels[ name ] = VehicleTemplate::WheelTpl(
+											position,
+											rotation,
+											radius,
+											mass,
+											relToChassis,
+											sg,
+											suspSpring,
+											suspDamping );
+
+
+	}
 	void DotVehicleParser::parsePosition( const data::dom::INode& n, Vector3& ret )
 	{
 		ret.x = StringUtil::parseReal( n.getAttributeValueAs<String>("x") );

Modified: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-13 21:04:23 UTC (rev 1027)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-13 21:04:56 UTC (rev 1028)
@@ -29,6 +29,17 @@
 #include <yapp/vehicle/yakeNativeOde.h>
 #include <yapp/vehicle/yakeDotVehicle.h>
 
+#if defined(YAKE_VEHICLE_USE_ODE)
+#	include <dependencies/ode/include/ode/ode.h>
+#	include <dependencies/ode/include/ode/odecpp.h>
+#	include <dependencies/ode/include/ode/objects.h>
+#	include <yake/plugins/physicsODE/OdeJoint.h>
+#	include <yake/plugins/physicsODE/OdeBody.h>
+#	include <yake/plugins/physicsODE/OdeWorld.h>
+#	pragma comment(lib, "physicsODE.lib")
+#	pragma comment(lib, "oded.lib")
+#endif // #if defined(YAKE_VEHICLE_USE_ODE)
+
 namespace yake {
 namespace vehicle {
 
@@ -323,7 +334,32 @@
 			mWheels[ wtp.first ] = pW;
 		}
 	}
+	void GenericVehicle::setSteering( const uint32 sg, const real value )
+	{
+		//SteeringGroupList::iterator itFind = std::find( mSteeringGroups.begin(), mSteeringGroups.end(), sg );
+		//YAKE_ASSERT( itFind != mSteeringGroups.end() )( sg ).debug("steering group not found!");
+		//if (itFind == mSteeringGroups.end())
+		//	return;
+		real newVal = value;
+		if (newVal < -1.)
+			newVal = -1.;
+		else if (newVal > 1.)
+			newVal = 1.;
+		ConstVectorIterator< Deque<OdeWheel*> > itWheel( mSteeringGroups[ sg ] );
+		while (itWheel.hasMoreElements())
+		{
+			OdeWheel* pW = itWheel.getNext();
+			YAKE_ASSERT( pW );
+			pW->setSteering( newVal );
+		}
+	}
+	real GenericVehicle::getSteering( const uint32 sg ) const
+	{
+		YAKE_ASSERT(0 && "NOT IMPLEMENTED")(sg);
+		return 0.;
+	}
 
+#if defined(YAKE_VEHICLE_USE_ODE)
 	//-----------------------------------------------------
 	// Class: OdeWheel
 	//-----------------------------------------------------
@@ -332,8 +368,17 @@
 						physics::IWorld& PWorld ) :
 		mpJoint(0),
 		mpWheel(0),
-		mRadius(tpl.mRadius)
+		mRadius(tpl.mRadius),
+		mTargetSteer(0),
+		mCurrSteer(0)
 	{
+		{
+			physics::OdeWorld* pW = dynamic_cast<physics::OdeWorld*>( &PWorld );
+			YAKE_ASSERT( pW ).debug("Incorrect physics world provider used! ODE expected!");
+			if (!pW)
+				YAKE_EXCEPT("Incorrect physics world provider used! ODE expected!");
+		}
+
 		YAKE_ASSERT( chassisObj );
 		mpWheel = PWorld.createActor( physics::ACTOR_DYNAMIC );
 		mpWheel->createShape( physics::IShape::SphereDesc( mRadius ) );
@@ -343,13 +388,56 @@
 		mpWheel->setOrientation( tpl.mOrientation );
 		mpWheel->getBody().setMass( mass );
 
-		mpJoint = PWorld.createJoint( physics::IJoint::DescFixed( chassisObj, mpWheel ) );
-		//mpJoint = PWorld.createJoint( physics::IJoint::DescBall( chassisObj, mpWheel, chassisObj->getPosition() ) );
+		physics::OdeBody* pBody = static_cast<physics::OdeBody*>( mpWheel->getBodyPtr() );
+		dBodyID bodyId = pBody->_getOdeBody()->id();
+		dBodySetFiniteRotationMode( bodyId, 1 );
+
+		//if (tpl.mSteeringGroup == SG_NO_STEERING_GROUP)
+		//	mpJoint = PWorld.createJoint( physics::IJoint::DescFixed( chassisObj, mpWheel ) );
+		//else
+		{
+			mpJoint = PWorld.createJoint( physics::IJoint::DescHinge2( 
+				chassisObj, mpWheel, 
+				tpl.mOrientation * Vector3::kUnitY,
+				tpl.mOrientation * Vector3::kUnitX,
+				tpl.mPosition ) );
+
+			mpJoint->setSpring( tpl.mSuspensionSpring );
+			mpJoint->setDamping( tpl.mSuspensionDamping );
+			//-> equals: dJointSetHinge2Param( jID, dParamSuspensionERP, _getERPFromSpring() );
+			//           and dJointSetHinge2Param( jID, dParamSuspensionCFM, _getCFMFromSpring() );
+
+			if (tpl.mSteeringGroup == SG_NO_STEERING_GROUP)
+			{
+				mpJoint->setLimits( 0, 0.0, 0.0 );
+				mpJoint->setLimits( 1, 0.0, 0.0 );
+			}
+			else
+			{
+				mpJoint->setLimits( 0, -0.1, 0.1 );
+				mpJoint->setLimits( 1,  0.0, 0.0 );
+			}
+
+			physics::OdeHinge2Joint* pJ = static_cast<physics::OdeHinge2Joint*>( mpJoint );
+			dJointID jID = pJ->_getOdeJoint()->id();
+
+			dJointSetHinge2Param( jID, dParamSuspensionERP, 0.95 );
+			dJointSetHinge2Param( jID, dParamSuspensionCFM, 0.2 );
+
+			dJointSetHinge2Param( jID, dParamStopERP, 0.95 );
+			dJointSetHinge2Param( jID, dParamStopCFM, 0.1 );
+			//dJointSetHinge2Param( hinges_[i], dParamStopERP, (!(i&2) ? FRONT_TURN_ERP : REAR_TURN_ERP) );
+			//dJointSetHinge2Param( hinges_[i], dParamStopCFM, (!(i&2) ? FRONT_TURN_CFM : REAR_TURN_CFM) );
+		}
 		
 		YAKE_ASSERT( mpJoint );
+
+
+		mPostStepSigConn = PWorld.subscribeToPreStepInternal( boost::bind(&OdeWheel::_onPreStepInternal,this,_1) );
 	}
 	OdeWheel::~OdeWheel()
 	{
+		mPostStepSigConn.disconnect();
 		YAKE_ASSERT( mpWheel );
 		YAKE_ASSERT( mpJoint );
 		mpWheel->getCreator()->destroyJoint( mpJoint );
@@ -357,6 +445,22 @@
 		mpWheel->getCreator()->destroyActor( mpWheel );
 		mpWheel = 0;
 	}
+	void OdeWheel::setSteering( const real s )
+	{
+		mTargetSteer = s;
+		if (mTargetSteer < -1.)
+			mTargetSteer = -1.;
+		else if (mTargetSteer > 1.)
+			mTargetSteer = 1.;
+	}
+	void OdeWheel::_onPreStepInternal( const real dt )
+	{
+		// interpolate towards target steering
+		mCurrSteer = mCurrSteer + /*@todo make this configurable:*/ 1.3 * dt * (mTargetSteer - mCurrSteer);
+
+		YAKE_ASSERT( mpJoint );
+		mpJoint->setLimits( 0, mCurrSteer - 0.05, mCurrSteer + 0.05 );
+	}
 	real OdeWheel::getRadius() const
 	{
 		return mRadius;
@@ -371,7 +475,7 @@
 		YAKE_ASSERT( mpWheel );
 		return mpWheel->getOrientation();
 	}
-
+#endif // YAKE_VEHICLE_USE_ODE
 	//-----------------------------------------------------
 	// Class: GenericThruster
 	//-----------------------------------------------------



From codeandroid at berlios.de  Thu Oct 13 23:04:24 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:04:24 +0200
Subject: [Yake-svn] r1027 - trunk/yake/src/yapp/samples/base/vehicle
Message-ID: <200510132104.j9DL4OgY006906@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:04:23 +0200 (Thu, 13 Oct 2005)
New Revision: 1027

Modified:
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
Log:
loading of wheels via dotVehicle XML,
steering of front wheel of jet

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-13 21:03:14 UTC (rev 1026)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-13 21:04:23 UTC (rev 1027)
@@ -136,17 +136,9 @@
 		tpl.mEngines["backward"] = new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,"front");
 		mVehicle = pVS->create( tpl, *getPhysicalWorld() );
 #else
-		// add wheels
-		const real wheelRadius = 2;
-		const real wheelRelativeMass = 0.1; // mass relative to chassis
-		vehicle::VehicleTemplate* tpl = pVS->getTemplate("jet");
-		YAKE_ASSERT( tpl );
-		tpl->mWheels["frontWheel"] = 
-			vehicle::VehicleTemplate::WheelTpl( Vector3(0,-3,5), wheelRadius, wheelRelativeMass, true );
-		tpl->mWheels["leftRearWheel"] = 
-			vehicle::VehicleTemplate::WheelTpl( Vector3(-3,-3,-3), wheelRadius, wheelRelativeMass, true );
-		tpl->mWheels["rightRearWheel"] = 
-			vehicle::VehicleTemplate::WheelTpl( Vector3(3,-3,-3), wheelRadius, wheelRelativeMass, true );
+		// It's possible retrieve the template and make further adjustments to it before
+		// instantiating vehicles.
+		// e.g.: vehicle::VehicleTemplate* tpl = pVS->getTemplate("jet");
 
 		// instantiate
 		mVehicle = pVS->create("jet", *getPhysicalWorld() );
@@ -196,6 +188,19 @@
 	{
 		RtMainState::onEnter();
 		using namespace input;
+
+		// front wheel controls
+
+		mActionMap.reg( ACTIONID_LEFT,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_COMMA, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_LEFT, boost::bind(&TheMainState::onFrontWheelLeft,this) );
+
+		mActionMap.reg( ACTIONID_RIGHT,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_PERIOD, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_RIGHT, boost::bind(&TheMainState::onFrontWheelRight,this) );
+
+		// thruster controls
+
 		mActionMap.reg( ACTIONID_STRAFE_LEFT,
 			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_LEFT, KAM_CONTINUOUS ) );
 		mActionMap.subscribeToActionId( ACTIONID_STRAFE_LEFT, boost::bind(&TheMainState::onStrafeLeft,this) );
@@ -230,6 +235,9 @@
 			vehicle::IEngine* pEngine = itEngine.getNext();
 			pEngine->setThrottle( pEngine->getThrottle() - timeElapsed * 1.7 );
 		}
+
+		real steering0 = 0;
+
 		ConstDequeIterator< ActionIdList > itAction( mActiveActions );
 		while (itAction.hasMoreElements())
 		{
@@ -244,7 +252,12 @@
 				mVehicle->getEngineInterface("backward")->setThrottle(1.);
 			else if (activeId == input::ACTIONID_UP)
 				mVehicle->getEngineInterface("upward")->setThrottle(1.);
+			else if (activeId == input::ACTIONID_LEFT)
+				steering0 -= 0.3;
+			else if (activeId == input::ACTIONID_RIGHT)
+				steering0 += 0.3;
 		}
+		mVehicle->setSteering( 0, steering0 );
 
 		mVehicle->updateSimulation( timeElapsed );
 		mComplex->updatePhysics( timeElapsed );
@@ -266,6 +279,10 @@
 	{ mActiveActions.insert( input::ACTIONID_REVERSE ); }
 	void onUp()
 	{ mActiveActions.insert( input::ACTIONID_UP ); }
+	void onFrontWheelLeft()
+	{ mActiveActions.insert( input::ACTIONID_LEFT ); }
+	void onFrontWheelRight()
+	{ mActiveActions.insert( input::ACTIONID_RIGHT ); }
 private:
 	void _regThrusterPs(const String& engineId, graphics::IParticleSystem& ps)
 	{



From codeandroid at berlios.de  Thu Oct 13 23:07:41 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:07:41 +0200
Subject: [Yake-svn] r1029 - trunk/yake/yake/input
Message-ID: <200510132107.j9DL7fOP007209@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:07:41 +0200 (Thu, 13 Oct 2005)
New Revision: 1029

Modified:
   trunk/yake/yake/input/yakeActionMap.h
Log:
added action ids

Modified: trunk/yake/yake/input/yakeActionMap.h
===================================================================
--- trunk/yake/yake/input/yakeActionMap.h	2005-10-13 21:04:56 UTC (rev 1028)
+++ trunk/yake/yake/input/yakeActionMap.h	2005-10-13 21:07:41 UTC (rev 1029)
@@ -98,8 +98,13 @@
 	extern YAKE_INPUT_API const ActionId ACTIONID_ROTATE_RIGHT;
 	extern YAKE_INPUT_API const ActionId ACTIONID_UP;
 	extern YAKE_INPUT_API const ActionId ACTIONID_DOWN;
+	extern YAKE_INPUT_API const ActionId ACTIONID_LEFT;
+	extern YAKE_INPUT_API const ActionId ACTIONID_RIGHT;
 	extern YAKE_INPUT_API const ActionId ACTIONID_PITCH_UP;
 	extern YAKE_INPUT_API const ActionId ACTIONID_PITCH_DOWN;
+	extern YAKE_INPUT_API const ActionId ACTIONID_USE;
+	extern YAKE_INPUT_API const ActionId ACTIONID_FIRE1;
+	extern YAKE_INPUT_API const ActionId ACTIONID_FIRE2;
 	extern YAKE_INPUT_API const ActionId ACTIONID_USER;
 	// example for a user defined action id:
 	//const ActionId ACTIONID_USER_CheerWildly( ACTIONID_USER+1, "cheerwildly" );



From codeandroid at berlios.de  Thu Oct 13 23:11:58 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 13 Oct 2005 23:11:58 +0200
Subject: [Yake-svn] r1030 - trunk/yake/yapp/vehicle
Message-ID: <200510132111.j9DLBwr5007548@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-13 23:11:57 +0200 (Thu, 13 Oct 2005)
New Revision: 1030

Modified:
   trunk/yake/yapp/vehicle/yakeDotVehicle.h
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeNativeOde.h
   trunk/yake/yapp/vehicle/yakeTemplates.h
Log:
loading of wheels via dotVehicle XML,
steering of front wheel of jet,
various wheel related improvements

Modified: trunk/yake/yapp/vehicle/yakeDotVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-13 21:07:41 UTC (rev 1029)
+++ trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-13 21:11:57 UTC (rev 1030)
@@ -58,6 +58,9 @@
 		    void parseShapeSphere( const data::dom::INode& n );
 		   void parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt = 0 );
 		 void parseEngine( const data::dom::INode& n );
+		 //void parseAxle( const data::dom::INode& n );
+		 void parseSteeringGroup( const data::dom::INode& n );
+		 void parseWheel( const data::dom::INode& n );
 		void parseEngineTpl( const data::dom::INode& n );
 
 		void parsePosition( const data::dom::INode& n, Vector3& ret );

Modified: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-13 21:07:41 UTC (rev 1029)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-13 21:11:57 UTC (rev 1030)
@@ -33,6 +33,12 @@
 namespace yake {
 namespace vehicle {
 
+	enum Steering {
+		S_LEFT,
+		S_RIGHT,
+		S_NONE
+	};
+
 	class IEngine;
 	typedef Deque<IEngine*> IEnginePtrList;
 	class IWheel;
@@ -56,6 +62,8 @@
 		virtual IEngine* getEngineInterface(const String& id) const = 0;
 		virtual IEnginePtrList getEngineInterfaces() const = 0;
 		virtual IWheel* getWheelInterface(const String& id) const = 0;
+		virtual void setSteering( const uint32 sg, const real ) = 0;
+		virtual real getSteering( const uint32 sg ) const = 0;
 
 		virtual Vector3 getChassisPosition() const = 0;
 		virtual Quaternion getChassisOrientation() const = 0;

Modified: trunk/yake/yapp/vehicle/yakeNativeOde.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-13 21:07:41 UTC (rev 1029)
+++ trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-13 21:11:57 UTC (rev 1030)
@@ -73,6 +73,9 @@
 		virtual Quaternion getChassisOrientation() const;
 		virtual Movable* getChassisMovable() const;
 
+		virtual void setSteering( const uint32 sg, const real );
+		virtual real getSteering( const uint32 sg ) const;
+
 		void _create(const VehicleTemplate&, physics::IWorld& PWorld);
 
 		YAKE_MEMBERSIGNAL(private,void(real),UpdateThrusterSimulation);
@@ -153,6 +156,7 @@
 		real		mDriveTorque;
 	};
 
+#if defined(YAKE_VEHICLE_USE_ODE)
 	class OdeWheel : public IWheel
 	{
 		OdeWheel();
@@ -168,12 +172,19 @@
 		virtual Quaternion getOrientation() const;
 
 		virtual real getRadius() const;
+
+		void setSteering( const real s );
 	private:
+		void _onPreStepInternal( const real dt );
+	private:
 		physics::IJointPtr		mpJoint;
 		physics::IActorPtr		mpWheel;
 		real					mRadius;
+		real					mTargetSteer;
+		real					mCurrSteer;
+		SignalConnection		mPostStepSigConn;
 	};
-
+#endif // YAKE_VEHICLE_USE_ODE
 	class GenericMountPoint : public MountPoint
 	{
 	public:

Modified: trunk/yake/yapp/vehicle/yakeTemplates.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-13 21:07:41 UTC (rev 1029)
+++ trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-13 21:11:57 UTC (rev 1030)
@@ -142,19 +142,22 @@
 			String			mGfxReferenceType; // e.g. "dotscene"
 			WheelTpl(
 				const Vector3& position = Vector3::kZero,
+				const Quaternion& orientation = Quaternion::kIdentity,
 				const real radius = real(0.8),
 				const real mass = real(0.01),
 				const bool massRelativeToChassis = true,
-				const uint32 steeringGrp = SG_NO_STEERING_GROUP
+				const uint32 steeringGrp = SG_NO_STEERING_GROUP,
+				const real suspensionSpring = real(1),
+				const real suspensionDamping = real(0.9)
 				) :
 				mPosition(position),
-				mOrientation(Quaternion::kIdentity),
+				mOrientation(orientation),
 				mSteeringGroup(steeringGrp),
 				mRadius(radius),
 				mMass(mass),
 				mMassRelativeToChassis(massRelativeToChassis),
-				mSuspensionSpring(real(1)),
-				mSuspensionDamping(real(0.9))
+				mSuspensionSpring(suspensionSpring),
+				mSuspensionDamping(suspensionDamping)
 			{}
 		};
 



From codeandroid at berlios.de  Wed Oct 19 23:03:12 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Wed, 19 Oct 2005 23:03:12 +0200
Subject: [Yake-svn] r1031 - trunk/yake/common/media/graphics.materials/scripts
Message-ID: <200510192103.j9JL3CLi020430@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-19 23:03:11 +0200 (Wed, 19 Oct 2005)
New Revision: 1031

Removed:
   trunk/yake/common/media/graphics.materials/scripts/delorean.material
Log:
replaced

Deleted: trunk/yake/common/media/graphics.materials/scripts/delorean.material
===================================================================
--- trunk/yake/common/media/graphics.materials/scripts/delorean.material	2005-10-13 21:11:57 UTC (rev 1030)
+++ trunk/yake/common/media/graphics.materials/scripts/delorean.material	2005-10-19 21:03:11 UTC (rev 1031)
@@ -1,13 +0,0 @@
-material delorean
-{
-	technique
-	{
-		pass
-		{
-			texture_unit
-			{
-				texture delorean.tga
-			}
-		}
-	}
-}



From codeandroid at berlios.de  Thu Oct 20 01:01:38 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 20 Oct 2005 01:01:38 +0200
Subject: [Yake-svn] r1032 - in trunk/yake/common/media: . graphics.delorean vehicles
Message-ID: <200510192301.j9JN1c56020508@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-20 01:01:35 +0200 (Thu, 20 Oct 2005)
New Revision: 1032

Added:
   trunk/yake/common/media/graphics.delorean/
   trunk/yake/common/media/graphics.delorean/DELOREAN.mesh
   trunk/yake/common/media/graphics.delorean/LICENSE
   trunk/yake/common/media/graphics.delorean/delorean.material
   trunk/yake/common/media/graphics.delorean/wheel1.mesh
   trunk/yake/common/media/vehicles/delorean.xml
Log:
initial revision

Added: trunk/yake/common/media/graphics.delorean/DELOREAN.mesh
===================================================================
(Binary files differ)


Property changes on: trunk/yake/common/media/graphics.delorean/DELOREAN.mesh
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/yake/common/media/graphics.delorean/LICENSE
===================================================================
--- trunk/yake/common/media/graphics.delorean/LICENSE	2005-10-19 21:03:11 UTC (rev 1031)
+++ trunk/yake/common/media/graphics.delorean/LICENSE	2005-10-19 23:01:35 UTC (rev 1032)
@@ -0,0 +1,8 @@
+
+All the meshes and materials in this file are protected by copyright.
+
+The YAKE Team is *not* the creator!
+
+Unfortunately, we cannot provide the information on the author at the moment.
+
+Do *not* distribute these files until this is solved.
\ No newline at end of file

Added: trunk/yake/common/media/graphics.delorean/delorean.material
===================================================================
--- trunk/yake/common/media/graphics.delorean/delorean.material	2005-10-19 21:03:11 UTC (rev 1031)
+++ trunk/yake/common/media/graphics.delorean/delorean.material	2005-10-19 23:01:35 UTC (rev 1032)
@@ -0,0 +1,13 @@
+material delorean
+{
+	technique
+	{
+		pass
+		{
+			texture_unit
+			{
+				texture delorean.tga
+			}
+		}
+	}
+}

Added: trunk/yake/common/media/graphics.delorean/wheel1.mesh
===================================================================
(Binary files differ)


Property changes on: trunk/yake/common/media/graphics.delorean/wheel1.mesh
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/yake/common/media/vehicles/delorean.xml
===================================================================
--- trunk/yake/common/media/vehicles/delorean.xml	2005-10-19 21:03:11 UTC (rev 1031)
+++ trunk/yake/common/media/vehicles/delorean.xml	2005-10-19 23:01:35 UTC (rev 1032)
@@ -0,0 +1,49 @@
+<dotvehicle>
+	<vehicleTemplate name="delorean">
+		<!-- chassis -->
+		<chassis>
+			<body totalMass="1.5" />
+			<shapeSet>
+				<box x="1.70" y="0.6" z="4">
+					<material ref="chassis" />
+					<material inheritsFrom="default" friction="0.07" />
+					<position x="0" y="0.4" z="0" />
+				</box>
+			</shapeSet>
+		</chassis>
+		<!-- two axles -->
+		<axle name="front" />
+		<axle name="rear" />
+		<!-- engine -->
+		<engine name="main" type="CarEngine" axle="rear">
+			<rpm min="300" max="6000" redline="5000" />
+			<curves>
+				<curve name="max_torque">
+				</curve>
+			</curves>
+			<gearBox>
+				<gear id="0" mode="reverse" ratio="-2.90" />
+				<gear id="1" mode="neutral" />
+				<gear id="2" mode="forward" ratio="2.66" />
+				<gear id="3" mode="forward" ratio="1.78" />
+				<gear id="4" mode="forward" ratio="1.30" />
+				<gear id="5" mode="forward" ratio="0.74" />
+				<gear id="6" mode="forward" ratio="0.50" />
+			</gearBox>
+		</engine>
+		<!-- wheels -->
+		<steeringGroup index="0" />
+		<wheel name="leftFrontWheel" axle="front" steeringGroup="0" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+			<position x="-0.78" y="-0.4" z="1.18" />
+		</wheel>
+		<wheel name="rightFrontWheel" axle="front" steeringGroup="0" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+			<position x="0.78" y="-0.4" z="1.18" />
+		</wheel>
+		<wheel name="leftRearWheel" axle="rear" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+			<position x="-0.78" y="-0.4" z="-1.1" />
+		</wheel>
+		<wheel name="rightRearWheel" axle="rear" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+			<position x="0.78" y="-0.4" z="-1.1" />
+		</wheel>
+	</vehicleTemplate>
+</dotvehicle>
\ No newline at end of file



From codeandroid at berlios.de  Thu Oct 20 01:02:53 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 20 Oct 2005 01:02:53 +0200
Subject: [Yake-svn] r1033 - in trunk/yake/common/bin: debug release
Message-ID: <200510192302.j9JN2rYG020755@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-20 01:02:32 +0200 (Thu, 20 Oct 2005)
New Revision: 1033

Modified:
   trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg
   trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg
Log:
added delorian

Modified: trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg
===================================================================
--- trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg	2005-10-19 23:01:35 UTC (rev 1032)
+++ trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg	2005-10-19 23:02:32 UTC (rev 1033)
@@ -6,6 +6,7 @@
 # Resource locations to be added to the default path
 [General] 
 FileSystem=../../media/
+FileSystem=../../media/graphics.delorean/
 FileSystem=../../media/graphics.meshes/
 FileSystem=../../media/graphics.scenes/r2t/
 FileSystem=../../media/graphics.scenes/arena0/

Modified: trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg
===================================================================
--- trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg	2005-10-19 23:01:35 UTC (rev 1032)
+++ trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg	2005-10-19 23:02:32 UTC (rev 1033)
@@ -6,6 +6,7 @@
 # Resource locations to be added to the default path
 [General] 
 FileSystem=../../media/
+FileSystem=../../media/graphics.delorean/
 FileSystem=../../media/graphics.meshes/
 FileSystem=../../media/graphics.scenes/r2t/
 FileSystem=../../media/graphics.scenes/arena0/



From codeandroid at berlios.de  Thu Oct 20 01:04:11 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 20 Oct 2005 01:04:11 +0200
Subject: [Yake-svn] r1034 - in trunk/yake/scripts/yapp: . samples/misc
Message-ID: <200510192304.j9JN4BKS020986@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-20 01:04:08 +0200 (Thu, 20 Oct 2005)
New Revision: 1034

Added:
   trunk/yake/scripts/yapp/samples/misc/sampleCar.vcproj
Modified:
   trunk/yake/scripts/yapp/yapp.sln
Log:
added sampleCar

Added: trunk/yake/scripts/yapp/samples/misc/sampleCar.vcproj
===================================================================
--- trunk/yake/scripts/yapp/samples/misc/sampleCar.vcproj	2005-10-19 23:02:32 UTC (rev 1033)
+++ trunk/yake/scripts/yapp/samples/misc/sampleCar.vcproj	2005-10-19 23:04:08 UTC (rev 1034)
@@ -0,0 +1,148 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="7.10"
+	Name="samplesCar"
+	ProjectGUID="{EE77E955-42BD-47A4-BDC6-D92759F45D01}"
+	Keyword="Win32Proj">
+	<Platforms>
+		<Platform
+			Name="Win32"/>
+	</Platforms>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="../../../../common/bin/debug"
+			IntermediateDirectory="../../../../common/obj/debug/$(ProjectName)"
+			ConfigurationType="1"
+			CharacterSet="2">
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
+				MinimalRebuild="TRUE"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="TRUE"
+				UsePrecompiledHeader="3"
+				PrecompiledHeaderThrough="yapp/samples/misc/car/yakePCH.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="TRUE"
+				DebugInformationFormat="4"/>
+			<Tool
+				Name="VCCustomBuildTool"/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib scripting.lib vehicle.lib"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="../../../../common/lib/debug"
+				GenerateDebugInformation="TRUE"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="1"
+				TargetMachine="1"/>
+			<Tool
+				Name="VCMIDLTool"/>
+			<Tool
+				Name="VCPostBuildEventTool"/>
+			<Tool
+				Name="VCPreBuildEventTool"/>
+			<Tool
+				Name="VCPreLinkEventTool"/>
+			<Tool
+				Name="VCResourceCompilerTool"/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"/>
+			<Tool
+				Name="VCWebDeploymentTool"/>
+			<Tool
+				Name="VCManagedWrapperGeneratorTool"/>
+			<Tool
+				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="../../../../common/bin/release"
+			IntermediateDirectory="../../../../common/obj/release/$(ProjectName)"
+			ConfigurationType="1"
+			CharacterSet="2">
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
+				RuntimeLibrary="2"
+				UsePrecompiledHeader="3"
+				PrecompiledHeaderThrough="yapp/samples/misc/car/yakePCH.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="TRUE"
+				DebugInformationFormat="3"/>
+			<Tool
+				Name="VCCustomBuildTool"/>
+			<Tool
+				Name="VCLinkerTool"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="../../../../common/lib/release"
+				GenerateDebugInformation="FALSE"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				TargetMachine="1"/>
+			<Tool
+				Name="VCMIDLTool"/>
+			<Tool
+				Name="VCPostBuildEventTool"/>
+			<Tool
+				Name="VCPreBuildEventTool"/>
+			<Tool
+				Name="VCPreLinkEventTool"/>
+			<Tool
+				Name="VCResourceCompilerTool"/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"/>
+			<Tool
+				Name="VCWebDeploymentTool"/>
+			<Tool
+				Name="VCManagedWrapperGeneratorTool"/>
+			<Tool
+				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="inc"
+			Filter="">
+			<File
+				RelativePath="..\..\..\..\yapp\samples\common\yakeHelper.h">
+			</File>
+			<File
+				RelativePath="..\..\..\..\yapp\samples\misc\car\yakePCH.h">
+			</File>
+		</Filter>
+		<Filter
+			Name="src"
+			Filter="">
+			<File
+				RelativePath="..\..\..\..\src\yapp\samples\misc\car\yakeDemo.cpp">
+			</File>
+			<File
+				RelativePath="..\..\..\..\src\yapp\samples\misc\car\yakePCH.cpp">
+				<FileConfiguration
+					Name="Debug|Win32">
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"/>
+				</FileConfiguration>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>

Modified: trunk/yake/scripts/yapp/yapp.sln
===================================================================
--- trunk/yake/scripts/yapp/yapp.sln	2005-10-19 23:02:32 UTC (rev 1033)
+++ trunk/yake/scripts/yapp/yapp.sln	2005-10-19 23:04:08 UTC (rev 1034)
@@ -96,6 +96,10 @@
 	ProjectSection(ProjectDependencies) = postProject
 	EndProjectSection
 EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "samplesCar", "samples\misc\sampleCar.vcproj", "{EE77E955-42BD-47A4-BDC6-D92759F45D01}"
+	ProjectSection(ProjectDependencies) = postProject
+	EndProjectSection
+EndProject
 Global
 	GlobalSection(SolutionConfiguration) = preSolution
 		Debug = Debug
@@ -190,6 +194,10 @@
 		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Debug.Build.0 = Debug|Win32
 		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Release.ActiveCfg = Release|Win32
 		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Release.Build.0 = Release|Win32
+		{EE77E955-42BD-47A4-BDC6-D92759F45D01}.Debug.ActiveCfg = Debug|Win32
+		{EE77E955-42BD-47A4-BDC6-D92759F45D01}.Debug.Build.0 = Debug|Win32
+		{EE77E955-42BD-47A4-BDC6-D92759F45D01}.Release.ActiveCfg = Release|Win32
+		{EE77E955-42BD-47A4-BDC6-D92759F45D01}.Release.Build.0 = Release|Win32
 	EndGlobalSection
 	GlobalSection(ExtensibilityGlobals) = postSolution
 	EndGlobalSection



From codeandroid at berlios.de  Thu Oct 20 01:05:18 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 20 Oct 2005 01:05:18 +0200
Subject: [Yake-svn] r1035 - in trunk/yake/src: yake/plugins/physicsODE yapp/samples/base/vehicle yapp/vehicle
Message-ID: <200510192305.j9JN5IWB021312@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-20 01:04:42 +0200 (Thu, 20 Oct 2005)
New Revision: 1035

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeHinge2Joint.cpp
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
   trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
   trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
Log:
improvements for ground vehicles

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeHinge2Joint.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeHinge2Joint.cpp	2005-10-19 23:04:08 UTC (rev 1034)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeHinge2Joint.cpp	2005-10-19 23:04:42 UTC (rev 1035)
@@ -96,26 +96,26 @@
 		{
 			if (axisIndex == 0)
 			{
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel, mVelTarget[0] );
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel, mMaxForce[0] );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamVel, mVelTarget[0] );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamFMax, mMaxForce[0] );
 			}
 			else if (axisIndex == 1)
 			{
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel2, mVelTarget[1] );
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel2, mMaxForce[1] );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamVel2, mVelTarget[1] );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamFMax2, mMaxForce[1] );
 			}
 		}
 		else
 		{
 			if (axisIndex == 0)
 			{
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel, 0 );
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel, 0 );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamVel, 0 );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamFMax, 0 );
 			}
 			else if (axisIndex == 1)
 			{
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel2, 0 );
-				static_cast<dUniversalJoint*>(mOdeJoint)->setParam( dParamVel2, 0 );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamVel2, 0 );
+				static_cast<dHinge2Joint*>(mOdeJoint)->setParam( dParamFMax2, 0 );
 			}
 		}
 	}

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-19 23:04:08 UTC (rev 1034)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-10-19 23:04:42 UTC (rev 1035)
@@ -31,6 +31,12 @@
 
 const real razorMeshScale = 0.1;
 
+class VehicleHumanInputController
+{
+public:
+	void setVehicle(vehicle::IVehicle*);
+};
+
 /** Main application state */
 class TheMainState : public raf::RtMainState
 {

Modified: trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-19 23:04:08 UTC (rev 1034)
+++ trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-19 23:04:42 UTC (rev 1035)
@@ -167,11 +167,53 @@
 				StringUtil::parseReal( pForcesN->getAttributeValueAs<String>("max") ),
 				mtPt );
 		}
+		else if (type == "CarEngine")
+		{
+			String axle = n.getAttributeValueAs<String>("axle");
+			YAKE_ASSERT( !axle.empty() );
+
+			VehicleTemplate::CarEngineTpl* tpl = new VehicleTemplate::CarEngineTpl();
+
+			parseRPM( *tpl, *n.getNodeByName("rpm") );
+			parseGearBox( *tpl, *n.getNodeByName("gearBox") );
+
+			mpCurrVehTpl->mEngines[ id ] = tpl;
+		}
 		else
 		{
-			YAKE_ASSERT( 1==0 && "Unhandled engine type!" );
+			YAKE_ASSERT( 1==0 && "DotVehicleParser::parseEngine: Unhandled engine type!" );
 		}
 	}
+	void DotVehicleParser::parseRPM( vehicle::VehicleTemplate::CarEngineTpl& tpl, const data::dom::INode& n )
+	{
+		tpl.rpmMin_ = StringUtil::parseReal( n.getAttributeValueAs<String>("min") );
+		tpl.rpmMax_ = StringUtil::parseReal( n.getAttributeValueAs<String>("max") );
+		tpl.rpmRedline_ = StringUtil::parseReal( n.getAttributeValueAs<String>("redline") );
+		//tpl.rpmDieOff_ = StringUtil::parseReal( n.getAttributeValueAs<String>("dieoff") );
+		//tpl.rpmRise_ = StringUtil::parseReal( n.getAttributeValueAs<String>("rise") );
+	}
+	void DotVehicleParser::parseGearBox( vehicle::VehicleTemplate::CarEngineTpl& tpl, const data::dom::INode& n )
+	{
+		NodeList nodes = n.getNodes();
+		ConstVectorIterator< NodeList > itN( nodes );
+		while (itN.hasMoreElements())
+		{
+			INode* pN = itN.getNext().get();
+			const String name = pN->getName();
+			if (name != "gear")
+				continue;
+			const String mode = StringUtil::toLowerCase( pN->getAttributeValueAs<String>("mode") );
+			VehicleTemplate::GearMode gm = VehicleTemplate::GM_FORWARD;
+			if (mode == "forward")
+				gm = VehicleTemplate::GM_FORWARD;
+			else if (mode == "reverse")
+				gm = VehicleTemplate::GM_REVERSE;
+			else if (mode == "neutral")
+				gm = VehicleTemplate::GM_NEUTRAL;
+			const real ratio = StringUtil::parseReal( pN->getAttributeValueAs<String>("ratio") );
+			tpl.gears_.push_back( vehicle::VehicleTemplate::GearTpl(ratio,gm) );
+		}
+	}
 	void DotVehicleParser::parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt /*= 0*/ )
 	{
 		YAKE_ASSERT( mpCurrVehTpl );

Modified: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-19 23:04:08 UTC (rev 1034)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-19 23:04:42 UTC (rev 1035)
@@ -146,9 +146,26 @@
 			pEngine->updateSimulation(timeElapsed);
 		}
 		//
-		mSigUpdateThrusterSimulation( timeElapsed );
+		mSigUpdateEngineSimulation( timeElapsed );
 		mSigApplyThrusterToTargets();
+		_applyDriveTorqueToAxles( timeElapsed );
 	}
+	void GenericVehicle::_applyDriveTorqueToAxles( real timeElapsed )
+	{
+		ConstDequeIterator< AxleList > itAxle( mAxles );
+		while (itAxle.hasMoreElements())
+		{
+			CarEngineWheelsPair cewp = itAxle.getNext().second;
+
+			const real torque = timeElapsed * cewp.first->getDriveTorque();
+			ConstDequeIterator< Deque<OdeWheel*> > itWheel( cewp.second );
+			while (itWheel.hasMoreElements())
+			{
+				OdeWheel* pW = itWheel.getNext();
+				pW->_applyDriveTq( torque );
+			}
+		}
+	}
 	MountPoint* GenericVehicle::getMountPoint(const String& id) const
 	{
 		YAKE_ASSERT( !id.empty() );
@@ -278,6 +295,11 @@
 				pEngine->setParamMaxRPM( carEngineTpl->rpmMax_ );
 				pEngine->setParamMinRPM( carEngineTpl->rpmMin_ );
 				pEngine->setParamRedlineRPM( carEngineTpl->rpmRedline_ );
+				pEngine->getGearBox().setFromTemplate( carEngineTpl->gears_ );
+				subscribeToUpdateEngineSimulation(
+					boost::bind( &GenericCarEngine::updateSimulation, pEngine, _1 ) );
+
+				mAxles[ carEngineTpl->axle_ ] = std::make_pair( pEngine, Deque<OdeWheel*>() );
 			}
 			else
 			{
@@ -291,7 +313,7 @@
 					pEngine->setMinimumForce( thrusterTpl->minForce );
 					pEngine->setMaximumForce( thrusterTpl->maxForce );
 					pEngine->setThrottle(0.);
-					subscribeToUpdateThrusterSimulation(
+					subscribeToUpdateEngineSimulation(
 						boost::bind( &GenericThruster::updateSimulation, pEngine, _1 ) );
 
 					// the thruster is attached to a mount point, create wrapper:
@@ -331,6 +353,8 @@
 				mSteeringGroups[ wheelTpl.mSteeringGroup ].push_back( pW );
 			}
 
+			mAxles[ wheelTpl.mAxle ].second.push_back( pW );
+
 			mWheels[ wtp.first ] = pW;
 		}
 	}
@@ -370,7 +394,8 @@
 		mpWheel(0),
 		mRadius(tpl.mRadius),
 		mTargetSteer(0),
-		mCurrSteer(0)
+		mCurrSteer(0),
+		mBrakeRatio(real(0.))
 	{
 		{
 			physics::OdeWorld* pW = dynamic_cast<physics::OdeWorld*>( &PWorld );
@@ -418,14 +443,15 @@
 				mpJoint->setLimits( 1,  0.0, 0.0 );
 			}
 
-			physics::OdeHinge2Joint* pJ = static_cast<physics::OdeHinge2Joint*>( mpJoint );
-			dJointID jID = pJ->_getOdeJoint()->id();
+			//physics::OdeHinge2Joint* pJ = static_cast<physics::OdeHinge2Joint*>( mpJoint );
+			//dJointID jID = pJ->_getOdeJoint()->id();
 
-			dJointSetHinge2Param( jID, dParamSuspensionERP, 0.95 );
-			dJointSetHinge2Param( jID, dParamSuspensionCFM, 0.2 );
+			//dJointSetHinge2Param( jID, dParamSuspensionERP, 0.95 );
+			//dJointSetHinge2Param( jID, dParamSuspensionCFM, 0.2 );
 
-			dJointSetHinge2Param( jID, dParamStopERP, 0.95 );
-			dJointSetHinge2Param( jID, dParamStopCFM, 0.1 );
+			//dJointSetHinge2Param( jID, dParamStopERP, 0.95 );
+			//dJointSetHinge2Param( jID, dParamStopCFM, 0.1 );
+
 			//dJointSetHinge2Param( hinges_[i], dParamStopERP, (!(i&2) ? FRONT_TURN_ERP : REAR_TURN_ERP) );
 			//dJointSetHinge2Param( hinges_[i], dParamStopCFM, (!(i&2) ? FRONT_TURN_CFM : REAR_TURN_CFM) );
 		}
@@ -445,6 +471,14 @@
 		mpWheel->getCreator()->destroyActor( mpWheel );
 		mpWheel = 0;
 	}
+	void OdeWheel::brake(const real ratio)
+	{
+		mBrakeRatio = ratio;
+		if (mBrakeRatio > 1.)
+			mBrakeRatio = 1.;
+		else if (mBrakeRatio < 0.)
+			mBrakeRatio = 0.;
+	}
 	void OdeWheel::setSteering( const real s )
 	{
 		mTargetSteer = s;
@@ -475,6 +509,49 @@
 		YAKE_ASSERT( mpWheel );
 		return mpWheel->getOrientation();
 	}
+	void OdeWheel::_applyDriveTq( const real tq )
+	{
+		//std::cout << "DTQ=" << tq << "\n";
+		//_applyTq( Vector3::kUnitX * tq );
+
+		if (mBrakeRatio > 0.01)
+			_applyBrakeTq( Vector3::kUnitX * mBrakeRatio * 1.5 );
+
+		const real targetVel = tq < 0. ? -80 : 80;
+		_applyMotor( targetVel, - tq / 50. );
+	}
+	void OdeWheel::_applyTq( const Vector3& torque )
+	{
+		mpWheel->getBody().addTorque( mpWheel->getOrientation() * torque );
+	}
+	void OdeWheel::_applyBrakeTq( const Vector3 & torque )
+	{
+		Vector3 linVel = mpWheel->getBody().getLinearVelocity();
+		Vector3 dir = mpWheel->getOrientation() * Vector3::kUnitX;
+		if (dir.dotProduct(linVel) > 0)
+		{
+			std::cout << "BRK+\n";
+			mpWheel->getBody().addLocalTorque( torque );
+		}
+		else
+		{
+			std::cout << "BRK-\n";
+			mpWheel->getBody().addLocalTorque( -torque );
+		}
+	}
+	void OdeWheel::_applyMotor( real velocity, real fmax )
+	{
+		if (mpJoint->getType() == physics::JT_HINGE)
+		{
+			mpJoint->setMotor( 0, velocity, fmax );
+			mpJoint->setMotorEnabled( 0, true );
+		}
+		else if (mpJoint->getType() == physics::JT_HINGE2)
+		{
+			mpJoint->setMotor( 1, velocity, fmax );
+			mpJoint->setMotorEnabled( 1, true );
+		}
+	}
 #endif // YAKE_VEHICLE_USE_ODE
 	//-----------------------------------------------------
 	// Class: GenericThruster

Modified: trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-10-19 23:04:08 UTC (rev 1034)
+++ trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-10-19 23:04:42 UTC (rev 1035)
@@ -34,31 +34,6 @@
 	//-----------------------------------------------------
 	// Class: GearBox
 	//-----------------------------------------------------
-	class GearBox
-	{
-	public:
-		enum GearMode {
-			GM_REVERSE,
-			GM_NEUTRAL,
-			GM_FORWARD
-		};
-		void setSpeed( uint8 numGears );
-		uint8 getSpeed() const;
-
-		void setGearRatio( uint8 gear, real ratio );
-		void setGearMode( uint8 gear, const GearMode mode );
-		real getGearRatio( uint8 gear );
-
-		void setFromTemplate( const VehicleTemplate::GearTplList & gears );
-	private:
-		struct Gear
-		{
-			real		ratio_;
-			GearMode	mode_;
-		};
-		typedef Vector< Gear > GearList;
-		GearList	mGears;
-	};
 	void GearBox::setSpeed(uint8 numGears)
 	{
 		mGears.resize( numGears );
@@ -151,6 +126,11 @@
 		real engineTorque = mThrottle * getMaxTorque( mCurrentRPM );
 		mDriveTorque = engineTorque * mGearRatio * mDifferentialRatio * 0.75/*just a guess*/;
 	}
+	GearBox& GenericCarEngine::getGearBox()
+	{
+		YAKE_ASSERT( mpGearBox );
+		return *mpGearBox;
+	}
 	void GenericCarEngine::setThrottle( real throttle )
 	{
 		mThrottle = throttle;



From codeandroid at berlios.de  Thu Oct 20 01:06:02 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 20 Oct 2005 01:06:02 +0200
Subject: [Yake-svn] r1036 - trunk/yake/yapp/vehicle
Message-ID: <200510192306.j9JN62lN021519@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-20 01:05:46 +0200 (Thu, 20 Oct 2005)
New Revision: 1036

Modified:
   trunk/yake/yapp/vehicle/yakeDotVehicle.h
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeNativeOde.h
   trunk/yake/yapp/vehicle/yakeTemplates.h
Log:
improvements for ground vehicles

Modified: trunk/yake/yapp/vehicle/yakeDotVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-19 23:04:42 UTC (rev 1035)
+++ trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-19 23:05:46 UTC (rev 1036)
@@ -58,6 +58,8 @@
 		    void parseShapeSphere( const data::dom::INode& n );
 		   void parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt = 0 );
 		 void parseEngine( const data::dom::INode& n );
+		  void parseRPM( vehicle::VehicleTemplate::CarEngineTpl&, const data::dom::INode& n );
+		  void parseGearBox( vehicle::VehicleTemplate::CarEngineTpl&, const data::dom::INode& n );
 		 //void parseAxle( const data::dom::INode& n );
 		 void parseSteeringGroup( const data::dom::INode& n );
 		 void parseWheel( const data::dom::INode& n );

Modified: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-19 23:04:42 UTC (rev 1035)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-19 23:05:46 UTC (rev 1036)
@@ -168,6 +168,7 @@
 		virtual ~IWheel() {}
 
 		virtual real getRadius() const = 0;
+		virtual void brake(const real ratio) = 0;
 	};
 
 } // namespace vehicle

Modified: trunk/yake/yapp/vehicle/yakeNativeOde.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-19 23:04:42 UTC (rev 1035)
+++ trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-19 23:05:46 UTC (rev 1036)
@@ -32,6 +32,35 @@
 namespace yake {
 namespace vehicle {
 
+	//-----------------------------------------------------
+	// Class: GearBox
+	//-----------------------------------------------------
+	class GearBox
+	{
+	public:
+		enum GearMode {
+			GM_REVERSE,
+			GM_NEUTRAL,
+			GM_FORWARD
+		};
+		void setSpeed( uint8 numGears );
+		uint8 getSpeed() const;
+
+		void setGearRatio( uint8 gear, real ratio );
+		void setGearMode( uint8 gear, const GearMode mode );
+		real getGearRatio( uint8 gear );
+
+		void setFromTemplate( const VehicleTemplate::GearTplList & gears );
+	private:
+		struct Gear
+		{
+			real		ratio_;
+			GearMode	mode_;
+		};
+		typedef Vector< Gear > GearList;
+		GearList	mGears;
+	};
+
 	class DotVehicleParser;
 	class YAKE_VEH_API GenericVehicleSystem : public IVehicleSystem
 	{
@@ -78,11 +107,12 @@
 
 		void _create(const VehicleTemplate&, physics::IWorld& PWorld);
 
-		YAKE_MEMBERSIGNAL(private,void(real),UpdateThrusterSimulation);
+		YAKE_MEMBERSIGNAL(private,void(real),UpdateEngineSimulation);
 		YAKE_MEMBERSIGNAL(private,void(void),ApplyThrusterToTargets);
 
 	private:
 		void _createMountPoint(const String& id, const VehicleTemplate::MountPointTpl&,MountPoint* parentMtPt = 0);
+		void _applyDriveTorqueToAxles( real timeElapsed );
 	private:
 		typedef AssocVector<String,IEngine*> EnginePtrList;
 		EnginePtrList		mEngines; // owner of all engine objects
@@ -92,6 +122,10 @@
 		typedef AssocVector<uint32,Deque<OdeWheel*> > SteeringGroupList;
 		SteeringGroupList	mSteeringGroups;
 
+		typedef std::pair<ICarEngine*,Deque<OdeWheel*> > CarEngineWheelsPair;
+		typedef AssocVector<uint32,CarEngineWheelsPair> AxleList;
+		AxleList			mAxles;
+
 		typedef AssocVector<String,OdeWheel*> WheelList;
 		WheelList			mWheels;
 
@@ -173,8 +207,16 @@
 
 		virtual real getRadius() const;
 
+		virtual void brake(const real ratio);
+
 		void setSteering( const real s );
+
+		void _applyDriveTq( const real tq );
 	private:
+		void _applyTq( const Vector3 & torque );
+		void _applyBrakeTq( const Vector3 & torque );
+		void _applyMotor( real velocity, real fmax );
+
 		void _onPreStepInternal( const real dt );
 	private:
 		physics::IJointPtr		mpJoint;
@@ -183,6 +225,7 @@
 		real					mTargetSteer;
 		real					mCurrSteer;
 		SignalConnection		mPostStepSigConn;
+		real					mBrakeRatio;
 	};
 #endif // YAKE_VEHICLE_USE_ODE
 	class GenericMountPoint : public MountPoint

Modified: trunk/yake/yapp/vehicle/yakeTemplates.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-19 23:04:42 UTC (rev 1035)
+++ trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-19 23:05:46 UTC (rev 1036)
@@ -76,7 +76,7 @@
 		{
 			real				ratio_;
 			GearMode			mode_;
-			GearTpl() : ratio_(1.), mode_(GM_FORWARD) {}
+			GearTpl(const real r = 1., const GearMode m = GM_FORWARD) : ratio_(r), mode_(m) {}
 		};
 		typedef Vector<GearTpl> GearTplList;
 		struct EngineTpl
@@ -92,6 +92,7 @@
 		};
 		struct CarEngineTpl : public EngineTpl
 		{
+			uint32				axle_;
 			real				rpmMin_;
 			real				rpmMax_;
 			real				rpmRedline_;
@@ -108,7 +109,8 @@
 				rpmDieOff_(real(800.)),
 				rpmRise_(real(2000.)),
 				minShiftingTime_(real(0.15)),
-				differentialRatio(real(3.14))
+				differentialRatio(real(3.14)),
+				axle_(0)
 			{}
 		};
 
@@ -130,6 +132,7 @@
 
 		struct WheelTpl
 		{
+			uint32			mAxle;
 			Vector3			mPosition;
 			Quaternion		mOrientation;
 			uint32			mSteeringGroup;
@@ -143,12 +146,13 @@
 			WheelTpl(
 				const Vector3& position = Vector3::kZero,
 				const Quaternion& orientation = Quaternion::kIdentity,
-				const real radius = real(0.8),
-				const real mass = real(0.01),
+				const real radius = real(0.2),
+				const real mass = real(0.018),
 				const bool massRelativeToChassis = true,
 				const uint32 steeringGrp = SG_NO_STEERING_GROUP,
-				const real suspensionSpring = real(1),
-				const real suspensionDamping = real(0.9)
+				const real suspensionSpring = real(30),
+				const real suspensionDamping = real(3),
+				const uint32 axle = 0
 				) :
 				mPosition(position),
 				mOrientation(orientation),
@@ -157,7 +161,8 @@
 				mMass(mass),
 				mMassRelativeToChassis(massRelativeToChassis),
 				mSuspensionSpring(suspensionSpring),
-				mSuspensionDamping(suspensionDamping)
+				mSuspensionDamping(suspensionDamping),
+				mAxle(axle)
 			{}
 		};
 



From codeandroid at berlios.de  Thu Oct 20 01:07:12 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Thu, 20 Oct 2005 01:07:12 +0200
Subject: [Yake-svn] r1037 - in trunk/yake: src/yapp/samples/misc src/yapp/samples/misc/car yapp/samples/misc yapp/samples/misc/car
Message-ID: <200510192307.j9JN7Cpr021788@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-20 01:06:47 +0200 (Thu, 20 Oct 2005)
New Revision: 1037

Added:
   trunk/yake/src/yapp/samples/misc/car/
   trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp
   trunk/yake/src/yapp/samples/misc/car/yakePCH.cpp
   trunk/yake/yapp/samples/misc/car/
   trunk/yake/yapp/samples/misc/car/yakePCH.h
Log:
initial revision of "car sample"

Added: trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp	2005-10-19 23:05:46 UTC (rev 1036)
+++ trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp	2005-10-19 23:06:47 UTC (rev 1037)
@@ -0,0 +1,267 @@
+#include <yapp/samples/misc/car/yakePCH.h>
+#include <yake/audio/yakeAudio.h>
+#include <yapp/raf/yakeRaf.h>
+#include <yapp/model/yakeModelMovableLink.h>
+#include <yapp/vehicle/yakeVehicle.h>
+#include <yake/input/yakeInput.h>
+
+// temporary stuff (until factory registration issues have been sorted out):
+#include <yapp/vehicle/yakeNativeOde.h>
+
+using namespace yake;
+
+const input::ActionId ACTIONID_BRAKE( input::ACTIONID_USER+1, "brake" );
+
+/** Configuration of the application */
+struct TheConfiguration : public raf::ApplicationConfiguration
+{
+	virtual StringVector getLibraries()
+	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsOde"; }
+
+	//virtual StringVector getScriptingSystems()
+	//{ return MakeStringVector() << "lua"; }
+
+	virtual StringVector getGraphicsSystems()
+	{ return MakeStringVector() << "ogre3d"; }
+
+	virtual StringVector getInputSystems()
+	{ return MakeStringVector() << "ogre"; }
+
+	virtual StringVector getPhysicsSystems()
+	{ return MakeStringVector() << "ode"; }
+};
+
+class VehicleHumanInputController
+{
+public:
+	void setVehicle(vehicle::IVehicle*);
+};
+
+/** Main application state */
+class TheMainState : public raf::RtMainState
+{
+public:
+	TheMainState(raf::Application& owner) :
+		raf::RtMainState(owner),
+		mVehicle(0),
+		mComplex(0),
+		mGround(0)
+	{
+		enableInstantQuitByKey( input::KC_ESCAPE );
+	}
+	~TheMainState()
+	{
+	}
+private:
+	void _createWheelVisual(const String& wheelId, graphics::ISceneNode& parentSN)
+	{
+		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode();
+		graphics::IEntity* pE = getGraphicalWorld()->createEntity("wheel1.mesh");
+		pSN->attachEntity( pE );
+		mComplex->addLink( mVehicle->getWheelInterface(wheelId), pSN );
+	}
+protected:
+	virtual void onCreateScene()
+	{
+		YAKE_LOG_INFORMATION("Creating scene");
+
+		// create a light
+		graphics::ILight* pLight = getGraphicalWorld()->createLight();
+		pLight->setType( graphics::ILight::LT_DIRECTIONAL );
+		pLight->setDirection( Vector3(0,-1,1) );
+		getGraphicalWorld()->createSceneNode("lightnode0")->attachLight( pLight );
+
+		// position camera and look at the ninja
+		getDefaultCamera()->setNearClipDistance( 1 );
+		getDefaultCamera()->setFixedYawAxis(Vector3::kUnitY);
+		getDefaultCamera()->setPosition(Vector3(7,4,-7));
+
+		// create ground
+		mGround = new model::complex::Model();
+		{
+			// visual
+			graphics::ISceneNode* pGroundSN = getGraphicalWorld()->createSceneNode();
+			graphics::IEntity* pGroundE = getGraphicalWorld()->createEntity("plane_1x1.mesh");
+			pGroundE->setMaterial("box");
+			pGroundSN->attachEntity( pGroundE );
+			pGroundSN->setScale( Vector3(200,1,200) );
+			pGroundSN->setPosition( Vector3(0,-10,0) );
+
+			model::Graphical* pG = new model::Graphical();
+			pG->addSceneNode( pGroundSN );
+			mGround->addGraphical( pG );
+
+			// physical
+			physics::IActorPtr pGroundPlane = getPhysicalWorld()->createActor( physics::ACTOR_STATIC );
+			pGroundPlane->createShape( physics::IShape::PlaneDesc( Vector3(0,1,0), -2 ) );
+
+			model::Physical* pP = new model::Physical();
+			pP->addActor( pGroundPlane, "groundPlane" );
+			mGround->addPhysical( pP );
+		}
+
+		// vehicle
+		SharedPtr<vehicle::IVehicleSystem> pVS = //create<vehicle::IVehicleSystem>("generic");
+			SharedPtr<vehicle::IVehicleSystem>(new vehicle::GenericVehicleSystem());
+
+		pVS->loadTemplates("../../media/vehicles/delorean.xml");
+
+		// It's possible retrieve the template and make further adjustments to it before
+		// instantiating vehicles.
+		// e.g.: vehicle::VehicleTemplate* tpl = pVS->getTemplate("delorean");
+
+		// instantiate
+		mVehicle = pVS->create("delorean", *getPhysicalWorld() );
+
+		// create container (e.g. for graphical objects and links)
+		mComplex = new model::complex::Model();
+		model::Graphical* pG = new model::Graphical();
+		mComplex->addGraphical( SharedPtr<model::Graphical>(pG) );
+
+		// create visuals
+		// - ship body
+		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode("root");
+		pSN->attachEntity( getGraphicalWorld()->createEntity("delorean.mesh") );
+		//pSN->setScale( Vector3::kUnitScale * razorMeshScale );
+		pG->addSceneNode(pSN);
+
+		// - wheel visuals
+		if (mVehicle->getWheelInterface("leftFrontWheel"))
+		{
+			_createWheelVisual( "leftFrontWheel", *pSN );
+			_createWheelVisual( "rightFrontWheel", *pSN );
+			_createWheelVisual( "leftRearWheel", *pSN );
+			_createWheelVisual( "rightRearWheel", *pSN );
+		}
+
+		// create visual <-> physics links
+		mComplex->addLink( mVehicle->getChassisMovable(), pSN );
+
+		// sky box
+		getGraphicalWorld()->setSkyBox("Examples/SpaceSkyBox");
+	}
+	virtual void onDestroyScene()
+	{
+		YAKE_SAFE_DELETE( mGround );
+
+		YAKE_SAFE_DELETE( mComplex );
+		YAKE_SAFE_DELETE( mVehicle );
+	}
+	virtual void onEnter()
+	{
+		RtMainState::onEnter();
+		using namespace input;
+
+		// front wheel controls
+
+		mActionMap.reg( ACTIONID_LEFT,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_LEFT, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_LEFT, boost::bind(&TheMainState::onFrontWheelLeft,this) );
+
+		mActionMap.reg( ACTIONID_RIGHT,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_RIGHT, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_RIGHT, boost::bind(&TheMainState::onFrontWheelRight,this) );
+
+		mActionMap.reg( ACTIONID_FORWARD,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_UP, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_FORWARD, boost::bind(&TheMainState::onForward,this) );
+
+		mActionMap.reg( ACTIONID_BRAKE,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_DOWN, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_BRAKE, boost::bind(&TheMainState::onReverse,this) );
+
+		//mActionMap.reg( ACTIONID_UP,
+		//	new input::KeyboardActionCondition( getApp().getKeyboard(), KC_PGUP, KAM_CONTINUOUS ) );
+		//mActionMap.subscribeToActionId( ACTIONID_UP, boost::bind(&TheMainState::onUp,this) );
+	}
+	virtual void onExit()
+	{
+	}
+	virtual void onFrame(const real timeElapsed)
+	{
+		mActionMap.update();
+
+		vehicle::IEnginePtrList engines = mVehicle->getEngineInterfaces();
+		ConstDequeIterator< vehicle::IEnginePtrList > itEngine( engines );
+		while (itEngine.hasMoreElements())
+		{
+			vehicle::IEngine* pEngine = itEngine.getNext();
+			pEngine->setThrottle( pEngine->getThrottle() - timeElapsed * 1.7 );
+		}
+
+		real steering0 = 0;
+		real braking0 = 0;
+
+		ConstDequeIterator< ActionIdList > itAction( mActiveActions );
+		while (itAction.hasMoreElements())
+		{
+			const input::ActionId activeId = itAction.getNext();
+			if (activeId == input::ACTIONID_FORWARD)
+				mVehicle->getEngineInterface("main")->setThrottle(1.);
+			else if (activeId == ACTIONID_BRAKE)
+				braking0 = 1.;
+			else if (activeId == input::ACTIONID_LEFT)
+				steering0 -= 0.7;
+			else if (activeId == input::ACTIONID_RIGHT)
+				steering0 += 0.7;
+		}
+		mVehicle->setSteering( 0, steering0 );
+		mVehicle->getWheelInterface("leftFrontWheel")->brake(braking0);
+		mVehicle->getWheelInterface("rightFrontWheel")->brake(braking0);
+
+		mVehicle->updateSimulation( timeElapsed );
+		mComplex->updatePhysics( timeElapsed );
+
+		getDefaultCamera()->lookAt(mVehicle->getChassisPosition());
+		mComplex->updateGraphics( timeElapsed );
+
+		mActiveActions.clear();
+	}
+protected:
+	void onForward()
+	{ mActiveActions.insert( input::ACTIONID_FORWARD ); }
+	void onReverse()
+	{ mActiveActions.insert( ACTIONID_BRAKE ); }
+	void onUp()
+	{ mActiveActions.insert( input::ACTIONID_UP ); }
+	void onFrontWheelLeft()
+	{ mActiveActions.insert( input::ACTIONID_LEFT ); }
+	void onFrontWheelRight()
+	{ mActiveActions.insert( input::ACTIONID_RIGHT ); }
+private:
+private:
+	model::complex::Model*	mGround;
+	vehicle::IVehicle*		mVehicle;
+	model::complex::Model*	mComplex;
+	typedef AssocVector<String,real> EmitterRealMap;
+	EmitterRealMap			mEmitterMinVel;
+	EmitterRealMap			mEmitterMaxVel;
+	EmitterRealMap			mEmitterEmissionRate;
+	typedef AssocVector<String,graphics::IParticleSystem*> ThrusterPsMap;
+	ThrusterPsMap			mThrusterPs;
+	input::ActionMap		mActionMap;
+
+	typedef std::set<input::ActionId> ActionIdList;
+	ActionIdList			mActiveActions;
+};
+
+/** The mighty application itself! */
+class TheApp : public raf::ExampleApplication<TheConfiguration>
+{
+public:
+	TheApp() {}
+protected:
+	virtual raf::MainState* createMainState()
+	{
+		return new TheMainState(*this);
+	}
+};
+
+int main( int argc, char** argv )
+{
+	// Use default executor for convenience.
+	// It's always possible to manually execute TheApp::initialise() etc.
+	TheApp theApp;
+	return (raf::runApplication( theApp )) ? 0 : 1;
+}
+

Added: trunk/yake/src/yapp/samples/misc/car/yakePCH.cpp
===================================================================
--- trunk/yake/src/yapp/samples/misc/car/yakePCH.cpp	2005-10-19 23:05:46 UTC (rev 1036)
+++ trunk/yake/src/yapp/samples/misc/car/yakePCH.cpp	2005-10-19 23:06:47 UTC (rev 1037)
@@ -0,0 +1 @@
+#include <yapp/samples/misc/car/yakePCH.h>

Added: trunk/yake/yapp/samples/misc/car/yakePCH.h
===================================================================
--- trunk/yake/yapp/samples/misc/car/yakePCH.h	2005-10-19 23:05:46 UTC (rev 1036)
+++ trunk/yake/yapp/samples/misc/car/yakePCH.h	2005-10-19 23:06:47 UTC (rev 1037)
@@ -0,0 +1,9 @@
+//============================================================================
+//    IMPLEMENTATION HEADERS
+//============================================================================
+// STL
+#include <iostream>
+// Yake
+#include <yake/base/yake.h>
+#include <yake/scripting/yakeScriptingSystem.h>
+#include <yapp/base/yapp.h>



From codeandroid at berlios.de  Sun Oct 30 00:21:28 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:21:28 +0200
Subject: [Yake-svn] r1038 - trunk/yake/yake/base/templates
Message-ID: <200510292221.j9TMLScR020060@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:21:26 +0200 (Sun, 30 Oct 2005)
New Revision: 1038

Modified:
   trunk/yake/yake/base/templates/yakeFastMap.h
Log:
added at()

Modified: trunk/yake/yake/base/templates/yakeFastMap.h
===================================================================
--- trunk/yake/yake/base/templates/yakeFastMap.h	2005-10-19 23:06:47 UTC (rev 1037)
+++ trunk/yake/yake/base/templates/yakeFastMap.h	2005-10-29 22:21:26 UTC (rev 1038)
@@ -330,8 +330,18 @@
 
         friend bool operator<=(const AssocVector& lhs, const AssocVector& rhs)
         { return !(rhs < lhs); }
-    };
 
+		const_reference at(size_type _Pos) const
+		{	// subscript nonmutable sequence with checking
+			return Base::at(_Pos);
+		}
+		reference at(size_type _Pos)
+		{
+			return Base::at(_Pos);
+		}
+
+	};
+
     // specialized algorithms:
     template <class K, class V, class C, class A>
     void swap(AssocVector<K, V, C, A>& lhs, AssocVector<K, V, C, A>& rhs)



From codeandroid at berlios.de  Sun Oct 30 00:22:10 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:22:10 +0200
Subject: [Yake-svn] r1039 - trunk/yake/yake/base
Message-ID: <200510292222.j9TMMAZG020141@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:22:00 +0200 (Sun, 30 Oct 2005)
New Revision: 1039

Modified:
   trunk/yake/yake/base/yakeLibrary.h
Log:
fixed stringify

Modified: trunk/yake/yake/base/yakeLibrary.h
===================================================================
--- trunk/yake/yake/base/yakeLibrary.h	2005-10-29 22:21:26 UTC (rev 1038)
+++ trunk/yake/yake/base/yakeLibrary.h	2005-10-29 22:22:00 UTC (rev 1039)
@@ -70,7 +70,7 @@
 // windows : ".dll"
 // linux : ".so"
 #define YAKE_USE_LIB( dllname ) \
-	yake::SharedPtr< yake::base::Library > pDynLib##dllname( new yake::base::Library( ## #dllname ## ".dll" ) ); \
+	yake::SharedPtr< yake::base::Library > pDynLib##dllname( new yake::base::Library( ## #dllname ".dll" ) ); \
 	YAKE_ASSERT( pDynLib##dllname ).debug( "Out of memory." );
 
 #endif // YAKE_BASE_LIBRARY_H



From codeandroid at berlios.de  Sun Oct 30 00:22:55 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:22:55 +0200
Subject: [Yake-svn] r1040 - in trunk/yake/src/yake/plugins: physicsNX physicsODE
Message-ID: <200510292222.j9TMMtoC020259@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:22:54 +0200 (Sun, 30 Oct 2005)
New Revision: 1040

Modified:
   trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakeShapeNx.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
Log:
materials can now be named,
shapes' properties can be queried

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -160,12 +160,7 @@
 		if (!mpNxActor)
 			return 0;
 
-		MaterialNx* pMaterial = 0;
-		if (rkShapeDesc.pMaterial)
-		{
-			pMaterial = dynamic_cast<MaterialNx*>(rkShapeDesc.pMaterial);
-			YAKE_ASSERT( pMaterial ).debug("Specified material is invalid! => using default material!");
-		}
+		MaterialNx* pMaterial = static_cast<MaterialNx*>(this->mWorld.getMaterial(rkShapeDesc.material));
 		YAKE_ASSERT( pMaterial ).warning("No material specified => using default material!");
 
 		ShapeNx* pShape = new ShapeNx( mpNxActor, this, pMaterial );

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -33,8 +33,9 @@
 	using namespace math;
 namespace physics {
 
-	MaterialNx::MaterialNx( const NxMaterialIndex index ) :
-		mNxMatIndex( index )
+	MaterialNx::MaterialNx( const NxMaterialIndex index, const String& id ) :
+		mNxMatIndex( index ),
+		mId(id)
 	{
 	}
 	MaterialNx::MaterialNx() :

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeShapeNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeShapeNx.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeShapeNx.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -110,6 +110,8 @@
 		YAKE_ASSERT( desc.isValid() );
 
 		attachAndCreate_(desc);
+
+		mProps["radius"] = radius;
 	}
 	void ShapeNx::createAsBox_( const Vector3 & rkDimensions )
 	{
@@ -121,6 +123,8 @@
 		YAKE_ASSERT( desc.isValid() );
 
 		attachAndCreate_(desc);
+
+		mProps["dimensions"] = rkDimensions;
 	}
 	void ShapeNx::createAsPlane_( const Vector3 & rkNormal, const real d )
 	{
@@ -133,6 +137,9 @@
 		YAKE_ASSERT( desc.isValid() );
 
 		attachAndCreate_(desc);
+
+		mProps["normal"] = rkNormal;
+		mProps["d"] = d;
 	}
 	void ShapeNx::createAsCapsule_( const real height, const real radius )
 	{
@@ -145,6 +152,9 @@
 		YAKE_ASSERT( desc.isValid() );
 
 		attachAndCreate_(desc);
+
+		mProps["height"] = height;
+		mProps["radius"] = radius;
 	}
 	void ShapeNx::createAsMesh_( const TriangleMeshId id )
 	{
@@ -183,6 +193,22 @@
 		YAKE_ASSERT( mpNxShape ).error("Cannot access property as long as object isn't finalized!");
 		return fromNx( mpNxShape->getLocalOrientation() );
 	}
+	Vector3 ShapeNx::getPropertyVector3(const String& id) const
+	{
+		PropMap::const_iterator itFind = mProps.find( id );
+		YAKE_ASSERT(itFind != mProps.end());
+		if (itFind == mProps.end())
+			return Vector3();
+		return boost::any_cast<Vector3>(itFind->second);
+	}
+	real ShapeNx::getPropertyReal(const String& id) const
+	{
+		PropMap::const_iterator itFind = mProps.find( id );
+		YAKE_ASSERT(itFind != mProps.end());
+		if (itFind == mProps.end())
+			return real(0.);
+		return boost::any_cast<real>(itFind->second);
+	}
 
 }
 }
\ No newline at end of file

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -53,7 +53,9 @@
 		std::for_each( mJoints.begin(), mJoints.end(), Deleter<JointNxVector>() );
 		mJoints.clear();
 
-		std::for_each( mMaterials.begin(), mMaterials.end(), Deleter<MaterialNxVector>() );
+		ConstVectorIterator< MaterialNxVector > itMat( mMaterials );
+		while (itMat.hasMoreElements())
+			delete itMat.getNext().second;
 		mMaterials.clear();
 
 		TrimeshNxManager::destroyAll();
@@ -282,7 +284,7 @@
 		mMaterials.erase( std::find(mMaterials.begin(), mMaterials.end(), rMaterial.lock() ) );
 	}
 	*/
-	IMaterialPtr WorldNx::createMaterial( const IMaterial::Desc & rkMatDesc )
+	IMaterialPtr WorldNx::createMaterial( const IMaterial::Desc & rkMatDesc, const String& id /*= ""*/ )
 	{
 		MaterialNx* pMaterial = new MaterialNx();
 		YAKE_ASSERT( pMaterial );
@@ -290,9 +292,17 @@
 			return 0;
 		pMaterial->_createFromDesc( rkMatDesc, mpScene );
 
-		mMaterials.push_back( pMaterial );
+		const String matId = (id.empty()) ? uniqueName::create("ode_mat_") : id;
+		mMaterials.insert( std::make_pair(matId,pMaterial) );
 		return pMaterial;
 	}
+	IMaterialPtr WorldNx::getMaterial( const String& id ) const
+	{
+		MaterialNxVector::const_iterator itFind = mMaterials.find( id );
+		if (itFind == mMaterials.end())
+			return 0;
+		return itFind->second;
+	}
 	IJointPtr WorldNx::createJoint( const IJoint::DescBase & rkJointDesc )
 	{
 		YAKE_ASSERT( mpScene );
@@ -382,7 +392,10 @@
 	void WorldNx::destroyMaterial( IMaterialPtr pMaterial )
 	{
 		YAKE_ASSERT( pMaterial );
-		mMaterials.remove( static_cast<MaterialNx*>(pMaterial) );
+		MaterialNxVector::iterator itFind = mMaterials.find( static_cast<MaterialNx*>(pMaterial)->getId() );
+		if (itFind == mMaterials.end())
+			return;
+		mMaterials.erase( itFind );
 		delete pMaterial;
 	}
 	TriangleMeshId WorldNx::createTriangleMesh( const TriangleMeshDesc & rkTrimeshDesc )

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -86,8 +86,8 @@
 														const Vector3& rOffset,
 														const Quaternion& rRelOrientation )
 	{
-		if ( rOffset == Vector3::kZero && rRelOrientation == Quaternion::kIdentity )
-			return pGeom;
+		//if ( rOffset == Vector3::kZero && rRelOrientation == Quaternion::kIdentity )
+		//	return pGeom;
 			
 		OdeTransformGeom* pTrans = new OdeTransformGeom( mOdeWorld->_getOdeSpace(), this );
 		pTrans->attachGeom( pGeom );
@@ -103,11 +103,11 @@
 	{
 		IShape::Desc* pShapeDesc = &const_cast<IShape::Desc&>( rShapeDesc );
 		
-		IMaterial* pMaterial = pShapeDesc->pMaterial;
-		OdeMaterial* pOdeMaterial = 0;
-		
-		if (pMaterial)
-			pOdeMaterial = dynamic_cast<OdeMaterial*>( pMaterial );
+		IMaterial* pMaterial = this->getCreator()->getMaterial( pShapeDesc->material );
+		if ( !pMaterial )
+			pMaterial = this->getCreator()->getMaterial("default");
+
+		YAKE_ASSERT( pMaterial );
 	
 		OdeGeom* result = 0;
 		
@@ -165,11 +165,19 @@
 		YAKE_ASSERT( result != 0 ).error( "Unsupported shape type!" );
 	
 		/// setting material if any
-		if ( pOdeMaterial != 0 )
-			result->setMaterial( *pOdeMaterial );
 
+		YAKE_ASSERT( pMaterial );
+		result->setMaterial( static_cast<OdeMaterial*>(pMaterial) );
+
 		if (result)
+		{
 			mShapes.push_back( SharedPtr<OdeGeom>(result) );
+			if (result->getType() != ST_PLANE)
+			{
+				result->setPosition( pShapeDesc->position );
+				result->setOrientation( pShapeDesc->orientation );
+			}
+		}
 
 		return result;
 	}
@@ -239,8 +247,8 @@
 		OdeActor* pActorA = pShapeA->getOwner();
 		OdeActor* pActorB = pShapeB->getOwner();
 
-		const OdeMaterial& rMatA = pShapeA->getMaterial();
-		const OdeMaterial& rMatB = pShapeB->getMaterial();
+		const OdeMaterial& rMatA = *pShapeA->getMaterial();
+		const OdeMaterial& rMatB = *pShapeB->getMaterial();
 		
 		/// FIXME Implement materials!
 		float softness =  rMatA.mSoftness + rMatB.mSoftness; //this->getSoftness() + pOther->getSoftness();

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeMaterial.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -31,16 +31,28 @@
 namespace physics {
 
 	//---------------------------------------------------
-	OdeMaterial::OdeMaterial() : 
+	OdeMaterial::OdeMaterial(const String& name) : 
 		mSoftness(0),
 		mFriction(10),
 		mFriction2(5),
 		mLateralSlip(false),
 		mSlipNormal(Vector3::kZero),
 		mSlipLinearCoeff(0),
-		mSlipAngularCoeff(0)
+		mSlipAngularCoeff(0),
+		mName(name)
 	{
 	}
+	OdeMaterial::OdeMaterial(const physics::IMaterial::Desc& desc, const String& name) : 
+		mSoftness(desc.mSoftness),
+		mFriction(desc.mFriction),
+		mFriction2(desc.mFriction),
+		mLateralSlip(false),
+		mSlipNormal(Vector3::kZero),
+		mSlipLinearCoeff(0),
+		mSlipAngularCoeff(0),
+		mName(name)
+	{
+	}
 	void OdeMaterial::setBounciness(const real bounciness)
 	{
 		//@todo

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -41,7 +41,8 @@
 				mOdeGeomID( 0 ),
 				mOdeSpace( 0 ),
 				mOdeGeom( 0 ),
-				mOwner( pOwner )
+				mOwner( pOwner ),
+				mMaterial( 0 )
 		{
 			YAKE_ASSERT( mOwner );
 		}
@@ -91,15 +92,15 @@
 		}
 
 		//-----------------------------------------------------
-		const OdeMaterial& OdeGeom::getMaterial() const
+		OdeMaterial* OdeGeom::getMaterial() const
 		{
 			return mMaterial;
 		}
 
 		//-----------------------------------------------------
-		void OdeGeom::setMaterial( OdeMaterial const& rMaterial )
+		void OdeGeom::setMaterial( OdeMaterial* pMaterial )
 		{
-			mMaterial = rMaterial;
+			mMaterial = pMaterial;
 		}
 
 		//-----------------------------------------------------
@@ -141,6 +142,48 @@
 		}
 
 		//-----------------------------------------------------
+		Vector3 OdeGeom::getDerivedPosition() const
+		{
+			dBodyID bodyId = dGeomGetBody( mOdeGeomID );
+			const dReal* pos = dBodyGetPosition( bodyId );
+			return Vector3( real(pos[0]), real(pos[1]), real(pos[2]) );
+		}
+
+		//-----------------------------------------------------
+		Quaternion OdeGeom::getDerivedOrientation() const
+		{
+			dBodyID bodyId = dGeomGetBody( mOdeGeomID );
+			const dReal* q = dBodyGetQuaternion( bodyId );
+			return Quaternion( real(q[0]), real(q[1]), real(q[2]), real(q[3]) );
+		}
+
+		//-----------------------------------------------------
+		bool operator == (const std::pair<const String,boost::any>& lhs, const std::pair<const String,boost::any>& rhs)
+		{
+			return (lhs.first == rhs.first);
+		}
+
+		//-----------------------------------------------------
+		Vector3 OdeGeom::getPropertyVector3(const String& id) const
+		{
+			PropMap::const_iterator itFind = mProps.find( id );
+			YAKE_ASSERT(itFind != mProps.end());
+			if (itFind == mProps.end())
+				return Vector3();
+			return boost::any_cast<Vector3>(itFind->second);
+		}
+
+		//-----------------------------------------------------
+		real OdeGeom::getPropertyReal(const String& id) const
+		{
+			PropMap::const_iterator itFind = mProps.find( id );
+			YAKE_ASSERT(itFind != mProps.end());
+			if (itFind == mProps.end())
+				return real(0.);
+			return boost::any_cast<real>(itFind->second);
+		}
+
+		//-----------------------------------------------------
 		//	OdeTriMesh
 		//-----------------------------------------------------
 
@@ -279,6 +322,8 @@
 			mOdeGeomID = mOdeGeom->id();
 
 			_setData( this );
+
+			mProps["radius"] = radius;
 		}
 
 		//-----------------------------------------------------
@@ -307,6 +352,9 @@
 			mOdeGeomID = mOdeGeom->id();
 
 			_setData( this );
+
+			mProps["radius"] = radius;
+			mProps["length"] = length;
 		}
 
 		//-----------------------------------------------------
@@ -332,6 +380,8 @@
 			mOdeGeomID = mOdeGeom->id();
 
 			_setData( this );
+
+			mProps["dimensions"] = Vector3(sizex,sizey,sizez);
 		}
 
 		//-----------------------------------------------------
@@ -366,6 +416,9 @@
 			mOdeGeomID = mOdeGeom->id();
 
 			_setData( this );
+
+			mProps["normal"] = Vector3(a,b,c);
+			mProps["d"] = d;
 		}
 
 		//-----------------------------------------------------
@@ -400,7 +453,7 @@
 		//-----------------------------------------------------
 		ShapeType OdeTransformGeom::getType() const
 		{
-			return ST_OTHER;
+			return mAttachedGeom ? mAttachedGeom->getType() : ST_OTHER;
 		}
 
 		//-----------------------------------------------------
@@ -417,6 +470,8 @@
 
 			pSpace->remove( mAttachedGeom->_getOdeGeomID() );
 			dGeomTransformSetGeom( mOdeGeomID, mAttachedGeom->_getOdeGeomID() );
+
+			mProps = mAttachedGeom->mProps;
 		}
 
 		//-----------------------------------------------------
@@ -425,6 +480,71 @@
 			return mAttachedGeom;
 		}
 
+		//-----------------------------------------------------
+		Vector3 OdeTransformGeom::getDerivedPosition() const
+		{
+			return (mAttachedGeom ?
+				(getPosition() + getDerivedOrientation() * mAttachedGeom->getPosition()) :
+				getPosition() );
+		}
+
+		//-----------------------------------------------------
+		Quaternion OdeTransformGeom::getDerivedOrientation() const
+		{
+			return (mAttachedGeom ?
+				mAttachedGeom->getDerivedOrientation() :
+				getOrientation() );
+		}
+
+		//-----------------------------------------------------
+		void OdeTransformGeom::setPosition( Vector3 const& rPosition )
+		{
+			if (getType() == ST_PLANE)
+				return;
+			YAKE_ASSERT( mAttachedGeom );
+			const dReal* pos = dGeomGetPosition( mOdeGeomID );
+			mAttachedGeom->setPosition( rPosition - Vector3(real(pos[0]), real(pos[1]), real(pos[2])) );
+			//dGeomSetPosition( mOdeGeomID, rPosition.x, rPosition.y, rPosition.z );
+		}
+
+		//-----------------------------------------------------
+		Vector3 OdeTransformGeom::getPosition() const
+		{
+			if (getType() == ST_PLANE)
+				return Vector3::kZero;
+			YAKE_ASSERT( mAttachedGeom );
+
+			const dReal* pos = dGeomGetPosition( mOdeGeomID );
+			dQuaternion q;
+			dGeomGetQuaternion( mOdeGeomID, q );
+			return Vector3( real(pos[0]), real(pos[1]), real(pos[2]) ) + 
+				Quaternion( real(q[0]), real(q[1]), real(q[2]), real(q[3]) ) * mAttachedGeom->getPosition();
+		}
+
+		//-----------------------------------------------------
+		void OdeTransformGeom::setOrientation( Quaternion const& rOrientation )
+		{
+			if (getType() == ST_PLANE)
+				return;
+			YAKE_ASSERT( mAttachedGeom );
+			const dQuaternion q = { rOrientation.w, rOrientation.x, rOrientation.y, rOrientation.z };
+			dGeomSetQuaternion( mOdeGeomID, q );
+		}
+
+		//-----------------------------------------------------
+		Quaternion OdeTransformGeom::getOrientation() const
+		{
+			if (getType() == ST_PLANE)
+				return Quaternion::kIdentity;
+			YAKE_ASSERT( mAttachedGeom );
+			dQuaternion q;
+			dGeomGetQuaternion( mOdeGeomID, q );
+
+			YAKE_ASSERT( mAttachedGeom );
+
+			return mAttachedGeom->getOrientation() * Quaternion( real(q[0]), real(q[1]), real(q[2]), real(q[3]) );
+		}
+
 		// /*		//-----------------------------------------------------
 		// 		void OdeCollisionGeomBase::tfAttachGeom( ICollisionGeometry* pGeom )
 		// 		{ YAKE_ASSERT(1==0).error("not implemented"); }

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-29 22:22:00 UTC (rev 1039)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-10-29 22:22:54 UTC (rev 1040)
@@ -65,6 +65,8 @@
 			dWorldSetContactSurfaceLayer( mOdeWorld->id(), 0.025 );
 
 			mTime = real(0.);
+
+			mMaterials["default"] = SharedPtr<OdeMaterial>(new OdeMaterial("default"));
 		}
 
 		//-----------------------------------------------------
@@ -291,25 +293,33 @@
 		}
 
 		//-----------------------------------------------------
-		bool operator==(const SharedPtr<OdeMaterial>& lhs, const OdeMaterial* rhs)
-		{
-			return (lhs.get() == rhs);
-		}
 		void OdeWorld::destroyMaterial( IMaterialPtr pMaterial )
 		{
 			YAKE_ASSERT( pMaterial );
-			mMaterials.erase( std::find(mMaterials.begin(), mMaterials.end(), dynamic_cast<OdeMaterial*>(pMaterial) ) );
+			mMaterials.erase( mMaterials.find( dynamic_cast<OdeMaterial*>(pMaterial)->mName ) );
 		}
 
 		//-----------------------------------------------------
-		IMaterialPtr OdeWorld::createMaterial( IMaterial::Desc const& rMatDesc )
+		IMaterialPtr OdeWorld::createMaterial( IMaterial::Desc const& rMatDesc, const String& id /*= ""*/ )
 		{
-			SharedPtr<OdeMaterial> pMat( new OdeMaterial );
-			mMaterials.push_back( pMat );
+			String matId = id.empty() ? uniqueName::create("ode.material_") : id;
+			SharedPtr<OdeMaterial> pMat( new OdeMaterial(rMatDesc,matId) );
+			mMaterials.insert( std::make_pair(matId,pMat) );
 			return pMat.get();
 		}
 
 		//-----------------------------------------------------
+		bool operator == (const std::pair<const String,SharedPtr<OdeMaterial> >& lhs, const std::pair<const String,SharedPtr<OdeMaterial> >& rhs)
+		{
+			return lhs.first == rhs.first;
+		}
+		IMaterialPtr OdeWorld::getMaterial( const String& id ) const
+		{
+			OdeMaterialVector::const_iterator itFind = mMaterials.find( id );
+			return (itFind == mMaterials.end()) ? 0 : itFind->second.get();
+		}
+
+		//-----------------------------------------------------
 		void OdeWorld::step( const real timeElapsed )
 		{
 			static real overflow = 0.;



From codeandroid at berlios.de  Sun Oct 30 00:23:07 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:23:07 +0200
Subject: [Yake-svn] r1041 - in trunk/yake/yake/plugins: physicsNX physicsODE
Message-ID: <200510292223.j9TMN7Ed020302@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:23:06 +0200 (Sun, 30 Oct 2005)
New Revision: 1041

Modified:
   trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h
   trunk/yake/yake/plugins/physicsNX/yakeShapeNx.h
   trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h
   trunk/yake/yake/plugins/physicsODE/OdeMaterial.h
   trunk/yake/yake/plugins/physicsODE/OdeShapes.h
   trunk/yake/yake/plugins/physicsODE/OdeWorld.h
Log:
materials can now be named,
shapes' properties can be queried

Modified: trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h	2005-10-29 22:22:54 UTC (rev 1040)
+++ trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h	2005-10-29 22:23:06 UTC (rev 1041)
@@ -33,7 +33,7 @@
 	class MaterialNx : public IMaterial
 	{
 	public:
-		MaterialNx( const NxMaterialIndex index );
+		MaterialNx( const NxMaterialIndex index, const String& id );
 		MaterialNx();
 		~MaterialNx();
 
@@ -49,8 +49,11 @@
 		void _createFromDesc( const IMaterial::Desc & rDesc, NxScene* pScene );
 		inline NxMaterialIndex _getNxMatIndex() const
 		{ return mNxMatIndex; }
+		inline String getId() const
+		{ return mId; }
 	private:
 		NxMaterialIndex	mNxMatIndex;
+		String			mId;
 		NxScene* mpScene;
 	};
 

Modified: trunk/yake/yake/plugins/physicsNX/yakeShapeNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeShapeNx.h	2005-10-29 22:22:54 UTC (rev 1040)
+++ trunk/yake/yake/plugins/physicsNX/yakeShapeNx.h	2005-10-29 22:23:06 UTC (rev 1041)
@@ -45,6 +45,9 @@
 		virtual void setOrientation( const Quaternion & rkOrientation );
 		virtual Quaternion getOrientation() const;
 
+		virtual Vector3 getPropertyVector3(const String&) const;
+		virtual real getPropertyReal(const String&) const;
+
 		// helpers
 
 		void createAsSphere_( const real radius = real(1.) );
@@ -67,6 +70,9 @@
 		TriangleMeshId	mTrimeshId;
 
 		MaterialNx*		mMaterial;
+
+		typedef std::map<String,boost::any> PropMap;
+		PropMap			mProps;
 	};
 
 }

Modified: trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h	2005-10-29 22:22:54 UTC (rev 1040)
+++ trunk/yake/yake/plugins/physicsNX/yakeWorldNx.h	2005-10-29 22:23:06 UTC (rev 1041)
@@ -64,7 +64,8 @@
 		virtual IActorPtr createActor( const IActor::Desc& rActorDesc = IActor::Desc(ACTOR_MOVABLE) );
 		virtual ActorNx* _createActor(const IActor::Desc & rkActorDesc);
 		virtual IAvatarPtr createAvatar( const IAvatar::Desc & rkAvatarDesc );
-		virtual IMaterialPtr createMaterial( const IMaterial::Desc & rkMatDesc );
+		virtual IMaterialPtr createMaterial( const IMaterial::Desc & rkMatDesc, const String& id = "" );
+		virtual IMaterialPtr getMaterial( const String& id ) const;
 		virtual void destroyJoint( IJointPtr pJoint );
 		virtual void destroyActor( IActorPtr pActor );
 		virtual void destroyAvatar( IAvatarPtr pAvatar );
@@ -126,7 +127,7 @@
 		typedef std::list<JointNx*> JointNxVector;
 		JointNxVector			mJoints;
 
-		typedef std::list<MaterialNx*> MaterialNxVector;
+		typedef std::map<String,MaterialNx*> MaterialNxVector;
 		MaterialNxVector		mMaterials;
 
 		typedef std::list<AvatarNx*> AvatarNxVector;

Modified: trunk/yake/yake/plugins/physicsODE/OdeMaterial.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeMaterial.h	2005-10-29 22:22:54 UTC (rev 1040)
+++ trunk/yake/yake/plugins/physicsODE/OdeMaterial.h	2005-10-29 22:23:06 UTC (rev 1041)
@@ -36,7 +36,8 @@
 	class YAKE_PHYSICSODE_API OdeMaterial : public IMaterial
 	{
 	public:
-		OdeMaterial();
+		OdeMaterial(const physics::IMaterial::Desc& desc, const String& name);
+		OdeMaterial(const String& name);
 		virtual void setBounciness(const real bounciness);
 		virtual void setSoftness(const real softness);
 		virtual void setRollingFriction( const real friction );
@@ -54,6 +55,8 @@
 		Vector3					mSlipNormal;
 		real					mSlipLinearCoeff;
 		real					mSlipAngularCoeff;
+
+		String					mName;
 	};
 
 } // physics

Modified: trunk/yake/yake/plugins/physicsODE/OdeShapes.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeShapes.h	2005-10-29 22:22:54 UTC (rev 1040)
+++ trunk/yake/yake/plugins/physicsODE/OdeShapes.h	2005-10-29 22:23:06 UTC (rev 1041)
@@ -48,8 +48,8 @@
 			virtual dSpace* _getOdeSpace() const;
 			virtual dGeom* _getOdeGeomPtr();
 
-			const OdeMaterial&	getMaterial() const;
-			void setMaterial( OdeMaterial const& rMaterial );
+			OdeMaterial* getMaterial() const;
+			void setMaterial( OdeMaterial* pMaterial );
 
 			OdeActor* getOwner() const
 			{ return mOwner; }
@@ -59,6 +59,12 @@
 			virtual void setOrientation( Quaternion const& rOrientation );
 			virtual Quaternion getOrientation() const;
 
+			virtual Vector3 getDerivedPosition() const;
+			virtual Quaternion getDerivedOrientation() const;
+
+			virtual Vector3 getPropertyVector3(const String&) const;
+			virtual real getPropertyReal(const String&) const;
+
 		protected:
 			virtual void _setData( void* pData );
 			virtual void* _getData() const;
@@ -67,8 +73,10 @@
 			dGeomID				mOdeGeomID;
 			dSpace*				mOdeSpace;
 			dGeom*				mOdeGeom;
-			OdeMaterial			mMaterial;
+			OdeMaterial*		mMaterial;
 			OdeActor*			mOwner;
+			typedef std::map<String,boost::any> PropMap;
+			PropMap				mProps;
 		};
 		
 		class YAKE_PHYSICSODE_API OdeTransformGeom : public OdeGeom
@@ -78,9 +86,16 @@
 			
 			virtual ShapeType getType() const;
 			
+			virtual void setPosition( Vector3 const& rPosition);
+			virtual Vector3 getPosition() const;
+			virtual void setOrientation( Quaternion const& rOrientation );
+			virtual Quaternion getOrientation() const;
+
 			void attachGeom( OdeGeom* pGeom );
 			OdeGeom* getAttachedGeom() const;
 		
+			virtual Vector3 getDerivedPosition() const;
+			virtual Quaternion getDerivedOrientation() const;
 		private:
 			OdeGeom*	mAttachedGeom;
 		};

Modified: trunk/yake/yake/plugins/physicsODE/OdeWorld.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-10-29 22:22:54 UTC (rev 1040)
+++ trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-10-29 22:23:06 UTC (rev 1041)
@@ -56,7 +56,8 @@
 				YAKE_ASSERT( 0 ).warning("not supported.");
 				return IAvatarPtr();
 			}
-			virtual IMaterialPtr createMaterial( const IMaterial::Desc & rkMatDesc );
+			virtual IMaterialPtr getMaterial( const String& id ) const;
+			virtual IMaterialPtr createMaterial( const IMaterial::Desc & rkMatDesc, const String& id = "" );
 			virtual void destroyJoint( IJointPtr pJoint );
 			virtual void destroyActor( IActorPtr pActor );
 			virtual void destroyAvatar( IAvatarPtr pAvatar );
@@ -123,7 +124,7 @@
 			typedef Deque<SharedPtr<OdeJoint> > OdeJointVector;
 			OdeJointVector			mJoints;
 
-			typedef Deque<SharedPtr<OdeMaterial> > OdeMaterialVector;
+			typedef std::map<String,SharedPtr<OdeMaterial> > OdeMaterialVector;
 			OdeMaterialVector		mMaterials;
 
 			typedef Deque<SharedPtr<OdeAvatar> > OdeAvatarVector;



From codeandroid at berlios.de  Sun Oct 30 00:23:17 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:23:17 +0200
Subject: [Yake-svn] r1042 - trunk/yake/yake/physics
Message-ID: <200510292223.j9TMNHNF020363@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:23:17 +0200 (Sun, 30 Oct 2005)
New Revision: 1042

Modified:
   trunk/yake/yake/physics/yakePhysicsShape.h
   trunk/yake/yake/physics/yakePhysicsWorld.h
Log:
materials can now be named,
shapes' properties can be queried

Modified: trunk/yake/yake/physics/yakePhysicsShape.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsShape.h	2005-10-29 22:23:06 UTC (rev 1041)
+++ trunk/yake/yake/physics/yakePhysicsShape.h	2005-10-29 22:23:17 UTC (rev 1042)
@@ -70,11 +70,11 @@
 			Desc(	const ShapeType type_,
 					const Vector3& rPosition = Vector3::kZero, 
 					const Quaternion& rOrientation = Quaternion::kIdentity,
-					IMaterialPtr material_ = 0 ) :
+					const String& material_ = "" ) :
 				type( type_ ),
 				position( rPosition ),
 				orientation( rOrientation ),
-				pMaterial( material_ )
+				material( material_ )
 			{}
 
 			virtual ~Desc() {}
@@ -83,13 +83,13 @@
 			ShapeType	type; // superfluous as shape type is determined by dynamic_cast on Desc struct...
 			Vector3		position;
 			Quaternion	orientation;
-			IMaterialPtr	pMaterial;
+			String		material;
 		};
 		struct SphereDesc : Desc
 		{
 			SphereDesc(	real radius_ = real(1.),
 						// base class:
-						IMaterialPtr material_ = 0,
+						const String& material_ = "",
 						const Vector3& rPosition = Vector3::kZero, 
 						const Quaternion& rOrientation = Quaternion::kIdentity
 						 ) :
@@ -102,7 +102,7 @@
 		{
 			BoxDesc(	const Vector3& rDimensions = Vector3(1,1,1),
 						// base class:
-						IMaterialPtr material_ = 0,
+						const String& material_ = "",
 						const Vector3& rPosition = Vector3::kZero, 
 						const Quaternion& rOrientation = Quaternion::kIdentity
 						 ) :
@@ -116,7 +116,7 @@
 			PlaneDesc(	const Vector3& rNormal = Vector3(0,1,0),
 						const real d_ = real(1.),
 						// base class:
-						IMaterialPtr material_ = 0,
+						const String& material_ = "",
 						const Vector3& rPosition = Vector3::kZero, 
 						const Quaternion& rOrientation = Quaternion::kIdentity
 						 ) :
@@ -132,7 +132,7 @@
 			CapsuleDesc(const real height_ = real(2.),
 						const real radius_ = real(1.),
 						// base class:
-						IMaterialPtr material_ = 0,
+						const String& material_ = "",
 						const Vector3& rPosition = Vector3::kZero, 
 						const Quaternion& rOrientation = Quaternion::kIdentity
 						 ) :
@@ -148,7 +148,7 @@
 		{
 			TriMeshDesc(	const TriangleMeshId meshId_,
 							// base class:
-							IMaterialPtr material_ = 0,
+							const String& material_ = "",
 							const Vector3& rPosition = Vector3::kZero, 
 							const Quaternion& rOrientation = Quaternion::kIdentity
 						 ) :
@@ -161,6 +161,12 @@
 		virtual ~IShape() {}
 
 		virtual ShapeType getType() const = 0;
+
+		//virtual Vector3 getDerivedPosition() const = 0;
+		//virtual Quaternion getDerivedOrientation() const = 0;
+
+		virtual Vector3 getPropertyVector3(const String&) const = 0;
+		virtual real getPropertyReal(const String&) const = 0;
 	};
 	YAKE_PHYSICS_COMMON_POINTERS( IShape );
 

Modified: trunk/yake/yake/physics/yakePhysicsWorld.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsWorld.h	2005-10-29 22:23:06 UTC (rev 1041)
+++ trunk/yake/yake/physics/yakePhysicsWorld.h	2005-10-29 22:23:17 UTC (rev 1042)
@@ -62,7 +62,8 @@
 			return createActor( desc ); 
 		}
 		virtual IAvatarPtr createAvatar( const IAvatar::Desc& rkAvatarDesc ) = 0;
-		virtual IMaterialPtr createMaterial( const IMaterial::Desc& rkMatDesc ) = 0;
+		virtual IMaterialPtr createMaterial( const IMaterial::Desc& rkMatDesc, const String& id = "" ) = 0;
+		virtual IMaterialPtr getMaterial( const String& id ) const = 0;
 		virtual void destroyJoint( IJointPtr pJoint ) = 0;
 		virtual void destroyActor( IActorPtr pActor ) = 0;
 		virtual void destroyAvatar( IAvatarPtr pAvatar ) = 0;



From codeandroid at berlios.de  Sun Oct 30 00:23:58 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:23:58 +0200
Subject: [Yake-svn] r1043 - trunk/yake/yapp/loader
Message-ID: <200510292223.j9TMNwIl020496@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:23:58 +0200 (Sun, 30 Oct 2005)
New Revision: 1043

Modified:
   trunk/yake/yapp/loader/yakeXODEParser.h
Log:
material names

Modified: trunk/yake/yapp/loader/yakeXODEParser.h
===================================================================
--- trunk/yake/yapp/loader/yakeXODEParser.h	2005-10-29 22:23:17 UTC (rev 1042)
+++ trunk/yake/yapp/loader/yakeXODEParser.h	2005-10-29 22:23:58 UTC (rev 1043)
@@ -144,7 +144,7 @@
 		
 		virtual void readAnchor( const NodeSharedPtr pAnchorNode, Vector3& rAnchor, Transform& rJointTransform );
 		virtual void readAxis( const NodeSharedPtr pAxisNode, Vector3& rAxis, Transform& rJointTransform );
-		virtual physics::IMaterialPtr XODEParser::readMaterialExt( const NodeSharedPtr pNode );
+		virtual String XODEParser::readMaterialExt( const NodeSharedPtr pNode );
 		
 // 		readGroup
 // 		readJointgroup



From codeandroid at berlios.de  Sun Oct 30 00:24:08 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:24:08 +0200
Subject: [Yake-svn] r1044 - trunk/yake/src/yapp/loader
Message-ID: <200510292224.j9TMO8l4020544@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:24:08 +0200 (Sun, 30 Oct 2005)
New Revision: 1044

Modified:
   trunk/yake/src/yapp/loader/yakeXODEParser.cpp
Log:
material names

Modified: trunk/yake/src/yapp/loader/yakeXODEParser.cpp
===================================================================
--- trunk/yake/src/yapp/loader/yakeXODEParser.cpp	2005-10-29 22:23:58 UTC (rev 1043)
+++ trunk/yake/src/yapp/loader/yakeXODEParser.cpp	2005-10-29 22:24:08 UTC (rev 1044)
@@ -431,7 +431,7 @@
 	* @param pNode - node to search
 	* @return ptr to newly created material or physics::WeakIMaterialPtr()
 	*/
-	physics::IMaterialPtr XODEParser::readMaterialExt( const NodeSharedPtr pNode )
+	String XODEParser::readMaterialExt( const NodeSharedPtr pNode )
 	{
 		YAKE_LOG( "Entered readMaterialExt..." );
 	
@@ -460,10 +460,12 @@
 				// parsing
 				physics::IMaterial::Desc desc;
 	
+				String strName = pParamsNode->getAttributeValueAs<String>( "name" );
 				String strFriction = pParamsNode->getAttributeValueAs<String>( "friction" );
 				String strRestitution = pParamsNode->getAttributeValueAs<String>( "bouncecoeff" );
 				String strSoftness = pParamsNode->getAttributeValueAs<String>( "soften" );
 	
+				YAKE_LOG( "Material name = '" + (strName.empty() ? "<AUTO>" : strName) + "'" );
 				YAKE_LOG( "Read friction = " + strFriction );
 				YAKE_LOG( "Read restitution = " + strRestitution );
 				YAKE_LOG( "Read softness = " + strSoftness );
@@ -472,9 +474,11 @@
 				desc.mRestitution = StringUtil::parseReal( strRestitution );
 				desc.mSoftness = StringUtil::parseReal( strSoftness );
 	
-				physics::IMaterialPtr result = mPWorld->createMaterial( desc );
-	
-				return result;
+
+				if (!mPWorld->getMaterial(strName))
+					mPWorld->createMaterial( desc, strName );
+
+				return strName;
 			}
 			else
 			{
@@ -485,8 +489,7 @@
 		{
 			YAKE_LOG( "readMaterialExt() : didn't find material... returning default one :) " );
 		}
-	
-		return physics::IMaterialPtr();
+		return String("default");
 	}
 	
 	//------------------------------------------------------



From codeandroid at berlios.de  Sun Oct 30 00:24:37 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:24:37 +0200
Subject: [Yake-svn] r1045 - trunk/yake/yapp/model
Message-ID: <200510292224.j9TMObAZ020634@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:24:37 +0200 (Sun, 30 Oct 2005)
New Revision: 1045

Modified:
   trunk/yake/yapp/model/yakeComplexModel.h
Log:
added addGraphicsController() overload

Modified: trunk/yake/yapp/model/yakeComplexModel.h
===================================================================
--- trunk/yake/yapp/model/yakeComplexModel.h	2005-10-29 22:24:08 UTC (rev 1044)
+++ trunk/yake/yapp/model/yakeComplexModel.h	2005-10-29 22:24:37 UTC (rev 1045)
@@ -98,6 +98,7 @@
 		void addGraphical( Graphical* pGraphical, const String & rName = "" );
 
 		void addGraphicsController( const SharedPtr<IObjectController> & pController, const String & rName = "" );
+		void addGraphicsController( IObjectController* pController, const String & rName = "" );
 		void addLink( const SharedPtr<ModelLink> & pModelLink, const String & rName = "" );
 
 		void updatePhysics( real timeElapsed );



From codeandroid at berlios.de  Sun Oct 30 00:24:52 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:24:52 +0200
Subject: [Yake-svn] r1046 - trunk/yake/src/yapp/model
Message-ID: <200510292224.j9TMOqBg020686@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:24:51 +0200 (Sun, 30 Oct 2005)
New Revision: 1046

Modified:
   trunk/yake/src/yapp/model/yakeComplexModel.cpp
Log:
added addGraphicsController() overload

Modified: trunk/yake/src/yapp/model/yakeComplexModel.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-10-29 22:24:37 UTC (rev 1045)
+++ trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-10-29 22:24:51 UTC (rev 1046)
@@ -166,6 +166,12 @@
 	}
 
 	//-----------------------------------------------------
+	void Model::addGraphicsController( IObjectController* pController, const String & rName /*= ""*/ )
+	{
+		addGraphicsController( SharedPtr<IObjectController>( pController ), rName );
+	}
+
+	//-----------------------------------------------------
 	void Model::addLink( const SharedPtr<ModelLink>& pModelLink, const String& rName )
 	{
 		YAKE_ASSERT( pModelLink.get() );



From codeandroid at berlios.de  Sun Oct 30 00:25:37 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:25:37 +0200
Subject: [Yake-svn] r1047 - trunk/yake/yapp/vehicle
Message-ID: <200510292225.j9TMPbJg020812@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:25:36 +0200 (Sun, 30 Oct 2005)
New Revision: 1047

Modified:
   trunk/yake/yapp/vehicle/yakeDotVehicle.h
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeNativeOde.h
   trunk/yake/yapp/vehicle/yakeTemplates.h
Log:
added debug geometry,
improved various interfaces

Modified: trunk/yake/yapp/vehicle/yakeDotVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-29 22:24:51 UTC (rev 1046)
+++ trunk/yake/yapp/vehicle/yakeDotVehicle.h	2005-10-29 22:25:36 UTC (rev 1047)
@@ -54,8 +54,8 @@
 		  void parseBody( const data::dom::INode& n );
 		  void parseShapeSet( const data::dom::INode& n );
 		   void parseShape( const data::dom::INode& n );
-		    void parseShapeBox( const data::dom::INode& n );
-		    void parseShapeSphere( const data::dom::INode& n );
+		    void parseShapeBox( const data::dom::INode& n, const String& matId );
+		    void parseShapeSphere( const data::dom::INode& n, const String& matId );
 		   void parseMountPoint( const data::dom::INode& n, VehicleTemplate::MountPointTpl* parentMtPt = 0 );
 		 void parseEngine( const data::dom::INode& n );
 		  void parseRPM( vehicle::VehicleTemplate::CarEngineTpl&, const data::dom::INode& n );

Modified: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-29 22:24:51 UTC (rev 1046)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-10-29 22:25:36 UTC (rev 1047)
@@ -68,6 +68,9 @@
 		virtual Vector3 getChassisPosition() const = 0;
 		virtual Quaternion getChassisOrientation() const = 0;
 		virtual Movable* getChassisMovable() const = 0;
+
+		virtual void enableDebugGeometry(graphics::IWorld&) = 0;
+		virtual void disableDebugGeometry() = 0;
 	};
 
 	/** Interface to a vehicle engine.

Modified: trunk/yake/yapp/vehicle/yakeNativeOde.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-29 22:24:51 UTC (rev 1046)
+++ trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-10-29 22:25:36 UTC (rev 1047)
@@ -105,6 +105,9 @@
 		virtual void setSteering( const uint32 sg, const real );
 		virtual real getSteering( const uint32 sg ) const;
 
+		virtual void enableDebugGeometry(graphics::IWorld&);
+		virtual void disableDebugGeometry();
+
 		void _create(const VehicleTemplate&, physics::IWorld& PWorld);
 
 		YAKE_MEMBERSIGNAL(private,void(real),UpdateEngineSimulation);
@@ -131,6 +134,8 @@
 
 		typedef AssocVector<String,MountPoint*> MountPointList;
 		MountPointList		mMountPoints;
+
+		model::complex::Model*	mDebugModel;
 	};
 
 	class GearBox;

Modified: trunk/yake/yapp/vehicle/yakeTemplates.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-29 22:24:51 UTC (rev 1046)
+++ trunk/yake/yapp/vehicle/yakeTemplates.h	2005-10-29 22:25:36 UTC (rev 1047)
@@ -141,8 +141,9 @@
 			bool			mMassRelativeToChassis;
 			real			mSuspensionSpring;
 			real			mSuspensionDamping;
-			String			mGfxReference; // e.g. dotScene file
-			String			mGfxReferenceType; // e.g. "dotscene"
+			//String			mGfxReference; // e.g. dotScene file
+			//String			mGfxReferenceType; // e.g. "dotscene"
+			String			mMaterial;
 			WheelTpl(
 				const Vector3& position = Vector3::kZero,
 				const Quaternion& orientation = Quaternion::kIdentity,
@@ -152,6 +153,7 @@
 				const uint32 steeringGrp = SG_NO_STEERING_GROUP,
 				const real suspensionSpring = real(30),
 				const real suspensionDamping = real(3),
+				const String& material = "",
 				const uint32 axle = 0
 				) :
 				mPosition(position),
@@ -162,6 +164,7 @@
 				mMassRelativeToChassis(massRelativeToChassis),
 				mSuspensionSpring(suspensionSpring),
 				mSuspensionDamping(suspensionDamping),
+				mMaterial(material),
 				mAxle(axle)
 			{}
 		};



From codeandroid at berlios.de  Sun Oct 30 00:26:16 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:26:16 +0200
Subject: [Yake-svn] r1048 - trunk/yake/src/yapp/vehicle
Message-ID: <200510292226.j9TMQGpr020928@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:26:16 +0200 (Sun, 30 Oct 2005)
New Revision: 1048

Modified:
   trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
Log:
added debug geometry,
improved various interfaces

Modified: trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-29 22:25:36 UTC (rev 1047)
+++ trunk/yake/src/yapp/vehicle/yakeDotVehicle.cpp	2005-10-29 22:26:16 UTC (rev 1048)
@@ -114,10 +114,11 @@
 			{
 				const INode* pShapeN = itShapeN.getNext().get();
 				const String name = pShapeN->getName();
+				const String matId = pShapeN->getAttributeValueAs<String>("material");
 				if (name == "box")
-					parseShapeBox( *pShapeN );
+					parseShapeBox( *pShapeN, matId );
 				else if (name == "sphere")
-					parseShapeSphere( *pShapeN );
+					parseShapeSphere( *pShapeN, matId );
 				else
 				{
 					YAKE_ASSERT( 0 && "unhandled shape type" )( name );
@@ -125,7 +126,7 @@
 			}
 		}
 	}
-	void DotVehicleParser::parseShapeBox( const data::dom::INode& n )
+	void DotVehicleParser::parseShapeBox( const data::dom::INode& n, const String& matId )
 	{
 		Vector3 dim;
 		dim.x = StringUtil::parseReal( n.getAttributeValueAs<String>("x") );
@@ -135,16 +136,16 @@
 		if (n.getNodeByName("position"))
 			parsePosition( *n.getNodeByName("position"), pos );
 		mpCurrVehTpl->mChassis.mChassisShapes.push_back(
-			new physics::IShape::BoxDesc( dim, 0, pos ) );
+			new physics::IShape::BoxDesc( dim, matId, pos ) );
 	}
-	void DotVehicleParser::parseShapeSphere( const data::dom::INode& n )
+	void DotVehicleParser::parseShapeSphere( const data::dom::INode& n, const String& matId )
 	{
 		real radius = StringUtil::parseReal( n.getAttributeValueAs<String>("radius") );
 		Vector3 pos;
 		if (n.getNodeByName("position"))
 			parsePosition( *n.getNodeByName("position"), pos );
 		mpCurrVehTpl->mChassis.mChassisShapes.push_back(
-			new physics::IShape::SphereDesc( radius, 0, pos ) );
+			new physics::IShape::SphereDesc( radius, matId, pos ) );
 	}
 	void DotVehicleParser::parseEngine( const data::dom::INode& n )
 	{
@@ -300,6 +301,8 @@
 		const bool relToChassis = StringUtil::parseBool( n.getAttributeValueAs<String>("massIsRelativeToChassis") );
 		const real suspSpring = StringUtil::parseReal( n.getAttributeValueAs<String>("suspensionSpring") );
 		const real suspDamping = StringUtil::parseReal( n.getAttributeValueAs<String>("suspensionDamping") );
+		const String matId = n.getAttributeValueAs<String>("material");
+		const uint32 axle = StringUtil::parseInt( n.getAttributeValueAs<String>("axle") );
 
 		mpCurrVehTpl->mWheels[ name ] = VehicleTemplate::WheelTpl(
 											position,
@@ -309,7 +312,9 @@
 											relToChassis,
 											sg,
 											suspSpring,
-											suspDamping );
+											suspDamping,
+											matId,
+											axle);
 
 
 	}

Modified: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-29 22:25:36 UTC (rev 1047)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-10-29 22:26:16 UTC (rev 1048)
@@ -110,11 +110,13 @@
 	//-----------------------------------------------------
 	// Class: GenericVehicle
 	//-----------------------------------------------------
-	GenericVehicle::GenericVehicle() : mpChassis(0)
+	GenericVehicle::GenericVehicle() : mpChassis(0), mDebugModel(0)
 	{
 	}
 	GenericVehicle::~GenericVehicle()
 	{
+		YAKE_SAFE_DELETE( mDebugModel );
+
 		for (SteeringGroupList::const_iterator it = mSteeringGroups.begin(); it != mSteeringGroups.end(); ++it)
 		{
 			ConstDequeIterator< Deque<OdeWheel*> > itWheel( it->second );
@@ -149,6 +151,12 @@
 		mSigUpdateEngineSimulation( timeElapsed );
 		mSigApplyThrusterToTargets();
 		_applyDriveTorqueToAxles( timeElapsed );
+
+		if (mDebugModel)
+		{
+			mDebugModel->updatePhysics(timeElapsed);
+			mDebugModel->updateGraphics(timeElapsed);
+		}
 	}
 	void GenericVehicle::_applyDriveTorqueToAxles( real timeElapsed )
 	{
@@ -382,7 +390,67 @@
 		YAKE_ASSERT(0 && "NOT IMPLEMENTED")(sg);
 		return 0.;
 	}
+	void createDebugGeometry(	const physics::IActor& actor, 
+								graphics::IWorld& GWorld, 
+								model::Graphical& graphical,
+								model::complex::Model& theModel)
+	{
+		physics::IShapePtrList shapes = actor.getShapes();
+		ConstDequeIterator<physics::IShapePtrList> itShape( shapes );
+		while (itShape.hasMoreElements())
+		{
+			const physics::IShapePtr pShape = itShape.getNext();
+			YAKE_ASSERT( pShape );
+			graphics::ISceneNode* pSN = GWorld.createSceneNode();
+			graphics::IEntity* pE = 0;
+			switch (pShape->getType())
+			{
+			case physics::ST_BOX:
+				{
+					pE = GWorld.createEntity("box_1x1x1.mesh");
+					pSN->attachEntity( pE );
+					pSN->setScale( pShape->getPropertyVector3("dimensions") );
+				}
+				break;
+			case physics::ST_SPHERE:
+				{
+					pE = GWorld.createEntity("sphere_1d.mesh");
+					pSN->attachEntity( pE );
+					pSN->setScale( Vector3::kUnitScale * pShape->getPropertyReal("radius") );
+				}
+				break;
+			default:
+				YAKE_ASSERT("0 && NOT IMPLEMENTED FOR THESE SHAPES!");
+				break;
+			}
+			if (pE)
+			{
+				graphical.addSceneNode( pSN );
 
+				model::ModelMovableLink* pLink = new model::ModelMovableLink();
+				pLink->setSource( pShape );
+				pLink->subscribeToPositionChanged( pSN );
+				pLink->subscribeToOrientationChanged( pSN );
+				theModel.addGraphicsController( pLink );
+			}
+			else
+				delete pSN;
+		} // for each shape
+	} // createDebugGeometry()
+	void GenericVehicle::enableDebugGeometry(graphics::IWorld& GWorld)
+	{
+		if (mDebugModel)
+			delete mDebugModel;
+		mDebugModel = new model::complex::Model();
+		model::Graphical* pGraphical = new model::Graphical();
+		createDebugGeometry( *mpChassis, GWorld, *pGraphical, *mDebugModel );
+		mDebugModel->addGraphical( pGraphical );
+	}
+	void GenericVehicle::disableDebugGeometry()
+	{
+		YAKE_SAFE_DELETE( mDebugModel );
+	}
+
 #if defined(YAKE_VEHICLE_USE_ODE)
 	//-----------------------------------------------------
 	// Class: OdeWheel
@@ -406,7 +474,7 @@
 
 		YAKE_ASSERT( chassisObj );
 		mpWheel = PWorld.createActor( physics::ACTOR_DYNAMIC );
-		mpWheel->createShape( physics::IShape::SphereDesc( mRadius ) );
+		mpWheel->createShape( physics::IShape::SphereDesc( mRadius, tpl.mMaterial ) );
 		real mass = tpl.mMassRelativeToChassis ?
 							(tpl.mMass * chassisObj->getBody().getMass()) : tpl.mMass;
 		mpWheel->setPosition( tpl.mPosition );
@@ -493,7 +561,8 @@
 		mCurrSteer = mCurrSteer + /*@todo make this configurable:*/ 1.3 * dt * (mTargetSteer - mCurrSteer);
 
 		YAKE_ASSERT( mpJoint );
-		mpJoint->setLimits( 0, mCurrSteer - 0.05, mCurrSteer + 0.05 );
+		const real maxSteer = 0.7;
+		mpJoint->setLimits( 0, maxSteer * (mCurrSteer - 0.05), maxSteer * (mCurrSteer + 0.05) );
 	}
 	real OdeWheel::getRadius() const
 	{
@@ -517,8 +586,8 @@
 		if (mBrakeRatio > 0.01)
 			_applyBrakeTq( Vector3::kUnitX * mBrakeRatio * 1.5 );
 
-		const real targetVel = tq < 0. ? -80 : 80;
-		_applyMotor( targetVel, - tq / 50. );
+		const real targetVel = tq < 0. ? -40 : 40;
+		_applyMotor( targetVel, - tq * 0.0075 );
 	}
 	void OdeWheel::_applyTq( const Vector3& torque )
 	{



From codeandroid at berlios.de  Sun Oct 30 00:27:21 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:27:21 +0200
Subject: [Yake-svn] r1049 - trunk/yake/src/yapp/samples/misc/car
Message-ID: <200510292227.j9TMRLN7021085@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:27:21 +0200 (Sun, 30 Oct 2005)
New Revision: 1049

Modified:
   trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp
Log:
various small improvements

Modified: trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp	2005-10-29 22:26:16 UTC (rev 1048)
+++ trunk/yake/src/yapp/samples/misc/car/yakeDemo.cpp	2005-10-29 22:27:21 UTC (rev 1049)
@@ -57,6 +57,7 @@
 	{
 		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode();
 		graphics::IEntity* pE = getGraphicalWorld()->createEntity("wheel1.mesh");
+		pE->setCastsShadow( true );
 		pSN->attachEntity( pE );
 		mComplex->addLink( mVehicle->getWheelInterface(wheelId), pSN );
 	}
@@ -71,6 +72,8 @@
 		pLight->setDirection( Vector3(0,-1,1) );
 		getGraphicalWorld()->createSceneNode("lightnode0")->attachLight( pLight );
 
+		getGraphicalWorld()->setShadowsEnabled( true );
+
 		// position camera and look at the ninja
 		getDefaultCamera()->setNearClipDistance( 1 );
 		getDefaultCamera()->setFixedYawAxis(Vector3::kUnitY);
@@ -79,13 +82,15 @@
 		// create ground
 		mGround = new model::complex::Model();
 		{
+			const real groundHeight = -2;
 			// visual
 			graphics::ISceneNode* pGroundSN = getGraphicalWorld()->createSceneNode();
 			graphics::IEntity* pGroundE = getGraphicalWorld()->createEntity("plane_1x1.mesh");
 			pGroundE->setMaterial("box");
+			pGroundE->setCastsShadow( false );
 			pGroundSN->attachEntity( pGroundE );
 			pGroundSN->setScale( Vector3(200,1,200) );
-			pGroundSN->setPosition( Vector3(0,-10,0) );
+			pGroundSN->setPosition( Vector3(0,groundHeight,0) );
 
 			model::Graphical* pG = new model::Graphical();
 			pG->addSceneNode( pGroundSN );
@@ -93,13 +98,18 @@
 
 			// physical
 			physics::IActorPtr pGroundPlane = getPhysicalWorld()->createActor( physics::ACTOR_STATIC );
-			pGroundPlane->createShape( physics::IShape::PlaneDesc( Vector3(0,1,0), -2 ) );
+			pGroundPlane->createShape( physics::IShape::PlaneDesc( Vector3(0,1,0), groundHeight ) );
 
 			model::Physical* pP = new model::Physical();
 			pP->addActor( pGroundPlane, "groundPlane" );
 			mGround->addPhysical( pP );
 		}
 
+		// materials @todo read from .physics:
+		getPhysicalWorld()->createMaterial( physics::IMaterial::Desc( 0.1, 0.01, 0.01 ), "chassis" );
+		getPhysicalWorld()->createMaterial( physics::IMaterial::Desc( 0.1, 0.01, 0.2 ), "chassisTop" );
+		getPhysicalWorld()->createMaterial( physics::IMaterial::Desc( 0.1, 0.01, 0.25 ), "wheel" );
+
 		// vehicle
 		SharedPtr<vehicle::IVehicleSystem> pVS = //create<vehicle::IVehicleSystem>("generic");
 			SharedPtr<vehicle::IVehicleSystem>(new vehicle::GenericVehicleSystem());
@@ -113,6 +123,8 @@
 		// instantiate
 		mVehicle = pVS->create("delorean", *getPhysicalWorld() );
 
+		//mVehicle->enableDebugGeometry( *getGraphicalWorld() );
+
 		// create container (e.g. for graphical objects and links)
 		mComplex = new model::complex::Model();
 		model::Graphical* pG = new model::Graphical();
@@ -121,7 +133,9 @@
 		// create visuals
 		// - ship body
 		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode("root");
-		pSN->attachEntity( getGraphicalWorld()->createEntity("delorean.mesh") );
+		graphics::IEntity* pE = getGraphicalWorld()->createEntity("delorean.mesh");
+		pE->setCastsShadow( true );
+		pSN->attachEntity( pE );
 		//pSN->setScale( Vector3::kUnitScale * razorMeshScale );
 		pG->addSceneNode(pSN);
 



From codeandroid at berlios.de  Sun Oct 30 00:28:09 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 30 Oct 2005 00:28:09 +0200
Subject: [Yake-svn] r1050 - trunk/yake/common/media/vehicles
Message-ID: <200510292228.j9TMS966021214@sheep.berlios.de>

Author: codeandroid
Date: 2005-10-30 00:28:09 +0200 (Sun, 30 Oct 2005)
New Revision: 1050

Modified:
   trunk/yake/common/media/vehicles/delorean.xml
Log:
improved :)

Modified: trunk/yake/common/media/vehicles/delorean.xml
===================================================================
--- trunk/yake/common/media/vehicles/delorean.xml	2005-10-29 22:27:21 UTC (rev 1049)
+++ trunk/yake/common/media/vehicles/delorean.xml	2005-10-29 22:28:09 UTC (rev 1050)
@@ -4,11 +4,14 @@
 		<chassis>
 			<body totalMass="1.5" />
 			<shapeSet>
-				<box x="1.70" y="0.6" z="4">
-					<material ref="chassis" />
-					<material inheritsFrom="default" friction="0.07" />
-					<position x="0" y="0.4" z="0" />
+				<box x="1.70" y="0.6" z="4" material="chassis">
+					<!--<materialRef ref="chassis" />-->
+					<!--<material inheritsFrom="default" friction="0.07" />-->
+					<position x="0" y="0" z="0" />
 				</box>
+				<box x="1.30" y="0.3" z="1.8" material="chassisTop">
+					<position x="0" y="0.45" z="-0.4" />
+				</box>
 			</shapeSet>
 		</chassis>
 		<!-- two axles -->
@@ -33,16 +36,16 @@
 		</engine>
 		<!-- wheels -->
 		<steeringGroup index="0" />
-		<wheel name="leftFrontWheel" axle="front" steeringGroup="0" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+		<wheel name="leftFrontWheel" material="wheel" axle="front" steeringGroup="0" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
 			<position x="-0.78" y="-0.4" z="1.18" />
 		</wheel>
-		<wheel name="rightFrontWheel" axle="front" steeringGroup="0" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+		<wheel name="rightFrontWheel" material="wheel" axle="front" steeringGroup="0" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
 			<position x="0.78" y="-0.4" z="1.18" />
 		</wheel>
-		<wheel name="leftRearWheel" axle="rear" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+		<wheel name="leftRearWheel" material="wheel" axle="rear" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
 			<position x="-0.78" y="-0.4" z="-1.1" />
 		</wheel>
-		<wheel name="rightRearWheel" axle="rear" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
+		<wheel name="rightRearWheel" material="wheel" axle="rear" radius="0.275" mass="0.018" massIsRelativeToChassis="yes" suspensionSpring="30" suspensionDamping="3">
 			<position x="0.78" y="-0.4" z="-1.1" />
 		</wheel>
 	</vehicleTemplate>



