From codeandroid at berlios.de  Sun Jan 15 19:17:29 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:17:29 +0100
Subject: [Yake-svn] r1176 - in trunk/yake/yake: . object
Message-ID: <200601151817.k0FIHTFW015283@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:17:26 +0100 (Sun, 15 Jan 2006)
New Revision: 1176

Added:
   trunk/yake/yake/object/
   trunk/yake/yake/object/ClassAndObjectIdManager.h
   trunk/yake/yake/object/ClassAndObjectIdManager.inl
   trunk/yake/yake/object/ObjectContainer.h
   trunk/yake/yake/object/ObjectId.h
   trunk/yake/yake/object/ObjectId.inl
   trunk/yake/yake/object/ObjectManager.h
   trunk/yake/yake/object/ObjectManager.inl
   trunk/yake/yake/object/common.h
   trunk/yake/yake/object/pch.h
   trunk/yake/yake/object/yakeObjects.h
Log:
initial revision

Added: trunk/yake/yake/object/ClassAndObjectIdManager.h
===================================================================
--- trunk/yake/yake/object/ClassAndObjectIdManager.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ClassAndObjectIdManager.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,92 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef CLASSANDOBJECTIDMANAGER_H
+#define CLASSANDOBJECTIDMANAGER_H
+
+#include "common.h"
+#include "ObjectId.h"
+
+namespace yake {
+namespace OBJECTS_NAMESPACE {
+
+	template<typename classdata_type,typename objectid_type = ::object::ObjectId<default_objectid_traits> >
+	struct ClassEntryT
+	{
+		// official interface:
+		typedef classdata_type data_type;
+		ClassEntryT();
+		virtual ~ClassEntryT(); // <= virtual so as to allow derived class entries.
+		void setData(const classdata_type&);
+		const classdata_type& getData() const;
+		ResultCode addObjectId(const objectid_type& objId);
+		ResultCode removeObjectId(const objectid_type& objId);
+		typename objectid_type::SerialNo nextSerialNo();
+		typename objectid_type::ObjectIdSet getObjectIds() const;
+		// other things:
+	private:
+		typename objectid_type::ObjectIdSet		ids_;
+		typename objectid_type::SerialNo		lastSerialNo_;
+		classdata_type	data_;
+	};
+
+	template<typename classentry_type,typename objectid_type = ::object::ObjectId<default_objectid_traits> >
+	struct ClassAndObjectIdManager
+	{
+	public:
+		typedef objectid_type ObjectId;
+		// pull in types
+		typedef typename objectid_type::ClassId ClassId;
+		typedef typename objectid_type::ObjectIdSet ObjectIdSet;
+		typedef typename objectid_type::ClassIdSet ClassIdSet;
+
+		ClassAndObjectIdManager();
+		~ClassAndObjectIdManager();
+
+		typedef typename classentry_type::data_type classdata_type;
+		ResultCode registerClassId(const ClassId, const classdata_type& = classdata_type());
+		const ClassIdSet& getRegisteredClasses() const;
+		const classdata_type& getClassData(const ClassId) const; // may throw
+		bool hasClass(const ClassId) const;
+		void clear();
+
+		ObjectId createObjectId(const ClassId);
+		ResultCode addObjectId(const ObjectId&);
+		ObjectIdSet getObjectIds(const ClassId) const;
+		ResultCode removeObjectId(const ObjectId&);
+	private:
+		typedef classentry_type ClassEntry;
+		typedef std::map<ClassId,ClassEntry> ClassMap;
+		ClassMap		classes_;
+		ClassIdSet		classIds_;
+	};
+
+	#include "ClassAndObjectIdManager.inl"
+
+} // namespace object
+} // namespace yake
+
+#endif

Added: trunk/yake/yake/object/ClassAndObjectIdManager.inl
===================================================================
--- trunk/yake/yake/object/ClassAndObjectIdManager.inl	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ClassAndObjectIdManager.inl	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,168 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+
+	template<typename classdata_type,typename objectid_type>
+	typename objectid_type::SerialNo ClassEntryT<classdata_type,objectid_type>::nextSerialNo()
+	{
+		if (lastSerialNo_ == std::numeric_limits<typename objectid_type::SerialNo>::max())
+			return lastSerialNo_;
+		return ++lastSerialNo_;
+	}
+	template<typename classdata_type,typename objectid_type>
+	ClassEntryT<classdata_type,objectid_type>::ClassEntryT() 
+		: lastSerialNo_(0)
+	{
+	}
+	template<typename classdata_type,typename objectid_type>
+	ClassEntryT<classdata_type,objectid_type>::~ClassEntryT()
+	{
+	}
+	template<typename classdata_type,typename objectid_type>
+	ResultCode ClassEntryT<classdata_type,objectid_type>::addObjectId(const objectid_type& objId)
+	{
+	#ifdef _DEBUG // set::insert() doesn't hurt...
+		if (ids_.find( objId ) != ids_.end())
+			return RC_ALREADY_REGISTERED;
+	#endif
+		ids_.insert( objId );
+		return RC_OK;
+	}
+	template<typename classdata_type,typename objectid_type>
+	ResultCode ClassEntryT<classdata_type,objectid_type>::removeObjectId(const objectid_type& objId)
+	{
+		typename objectid_type::ObjectIdSet::iterator itId = ids_.find( objId );
+		if (itId != ids_.end())
+		{
+			ids_.erase( objId );
+			return RC_OK;
+		}
+		return RC_NOT_FOUND;
+	}
+	template<typename classdata_type,typename objectid_type>
+	typename objectid_type::ObjectIdSet ClassEntryT<classdata_type,objectid_type>::getObjectIds() const
+	{
+		return ids_;
+	}
+	template<typename classdata_type,typename objectid_type>
+	void ClassEntryT<classdata_type,objectid_type>::setData(const classdata_type& data)
+	{
+		data_ = data;
+	}
+	template<typename classdata_type,typename objectid_type>
+	const classdata_type& ClassEntryT<classdata_type,objectid_type>::getData() const
+	{
+		return data_;
+	}
+
+	//--------
+
+	template<typename classentry_type,typename objectid_type>
+	ClassAndObjectIdManager<classentry_type,objectid_type>::ClassAndObjectIdManager()
+	{
+	}
+	template<typename classentry_type,typename objectid_type>
+	ClassAndObjectIdManager<classentry_type,objectid_type>::~ClassAndObjectIdManager()
+	{
+		clear();
+	}
+	template<typename classentry_type,typename objectid_type>
+	void ClassAndObjectIdManager<classentry_type,objectid_type>::clear()
+	{
+		classes_.clear();
+		classIds_.clear();
+	}
+	template<typename classentry_type,typename objectid_type>
+	bool ClassAndObjectIdManager<classentry_type,objectid_type>::hasClass(const ClassId clsId) const
+	{
+		return util::contains(classIds_,clsId);
+	}
+	template<typename classentry_type,typename objectid_type>
+	ResultCode ClassAndObjectIdManager<classentry_type,objectid_type>::registerClassId(const ClassId clsId, const classdata_type& data)
+	{
+		ClassMap::const_iterator it = classes_.find( clsId );
+		if (it != classes_.end())
+		{
+			if (classIds_.find( clsId ) != classIds_.end())
+				classIds_.insert( clsId );
+			return RC_ALREADY_REGISTERED;
+		}
+		ClassEntry e;
+		e.setData(data);
+		classes_.insert( ClassMap::value_type(clsId,e) );
+		classIds_.insert( clsId );
+		return RC_OK;
+	}
+	template<typename classentry_type,typename objectid_type>
+	const typename objectid_type::ClassIdSet& ClassAndObjectIdManager<classentry_type,objectid_type>::getRegisteredClasses() const
+	{
+		return classIds_;
+	}
+	template<typename classentry_type,typename objectid_type>
+	objectid_type ClassAndObjectIdManager<classentry_type,objectid_type>::createObjectId(const typename objectid_type::ClassId clsId)
+	{
+		ClassMap::iterator it = classes_.find( clsId );
+		if (it == classes_.end())
+			return ObjectId::kNull;
+		uint16 no = it->second.nextSerialNo();
+		if (no == std::numeric_limits<uint16>::max())
+			return ObjectId::kNull;
+		ObjectId id( clsId, no );
+		it->second.addObjectId( id );
+		return id;
+	}
+	template<typename classentry_type,typename objectid_type>
+	ResultCode ClassAndObjectIdManager<classentry_type,objectid_type>::addObjectId(const ObjectId& objId)
+	{
+		ClassMap::iterator it = classes_.find( objId.classId() );
+		if (it == classes_.end())
+			return RC_UNKNOWN_CLASS;
+		return it->second.addObjectId(objId);
+	}
+	template<typename classentry_type,typename objectid_type>
+	typename objectid_type::ObjectIdSet ClassAndObjectIdManager<classentry_type,objectid_type>::getObjectIds(const ClassId clsId) const
+	{
+		ClassMap::const_iterator it = classes_.find( clsId );
+		if (it == classes_.end())
+			return ObjectIdSet();
+		return it->second.getObjectIds();
+	}
+	template<typename classentry_type,typename objectid_type>
+	ResultCode ClassAndObjectIdManager<classentry_type,objectid_type>::removeObjectId(const ObjectId& objId)
+	{
+		ClassMap::iterator it = classes_.find( objId.classId() );
+		if (it == classes_.end())
+			return RC_UNKNOWN_CLASS;
+		return it->second.removeObjectId( objId );
+	}
+	template<typename classentry_type,typename objectid_type>
+	typename const classentry_type::data_type& ClassAndObjectIdManager<classentry_type,objectid_type>::getClassData(const ClassId clsId) const
+	{
+		ClassMap::const_iterator it = classes_.find( clsId );
+		if (it == classes_.end())
+			throw "ClassAndObjectIdManager<>::getClassData(): Class entry not found!";
+		return it->second.getData();
+	}
\ No newline at end of file

Added: trunk/yake/yake/object/ObjectContainer.h
===================================================================
--- trunk/yake/yake/object/ObjectContainer.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ObjectContainer.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,104 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef OBJECTCONTAINER_H
+#define OBJECTCONTAINER_H
+
+namespace yake {
+namespace OBJECTS_NAMESPACE {
+
+	template<typename object_type,typename objectid_type = ObjectId<default_objectid_traits> >
+	struct ObjectContainer
+	{
+	public:
+		typedef objectid_type ObjectId;
+
+		ObjectContainer();
+		~ObjectContainer();
+
+		bool addObject(const ObjectId&, object_type*);
+		object_type* removeObject(const ObjectId&);
+		//void removeObject(object_type*);
+		//bool destroyObject(const ObjectId&); //<= needs destruction policy?
+		object_type* getObject(const ObjectId&) const;
+	private:
+		typedef std::map<ObjectId,object_type*> IdObjMap;
+		IdObjMap	id2obj_;
+	};
+	template<typename object_type,typename objectid_type>
+	ObjectContainer<object_type,objectid_type>::ObjectContainer()
+	{}
+	template<typename object_type,typename objectid_type>
+	ObjectContainer<object_type,objectid_type>::~ObjectContainer()
+	{
+		assert( id2obj_.empty() );
+	}
+	template<typename object_type,typename objectid_type>
+	bool ObjectContainer<object_type,objectid_type>::addObject(const ObjectId& objId, object_type* obj)
+	{
+		assert( obj );
+		if (!obj)
+			return false;
+		assert( !objId.isNull() );
+		if (objId.isNull())
+			return false;
+		const bool exists = util::map_contains( id2obj_, objId );
+		assert( !exists );
+		if (exists)
+			return false;
+		id2obj_.insert( IdObjMap::value_type(objId,obj) );
+		return true;
+	}
+	template<typename object_type,typename objectid_type>
+	object_type* ObjectContainer<object_type,objectid_type>::removeObject(const ObjectId& objId)
+	{
+		assert( !objId.isNull() );
+		if (objId.isNull())
+			return 0;
+		IdObjMap::iterator it = id2obj_.find( objId );
+		assert( it != id2obj_.end() );
+		if (it == id2obj_.end())
+			return 0;
+		object_type* obj = it->second;
+		id2obj_.erase( it );
+		return obj;
+	}
+	template<typename object_type,typename objectid_type>
+	object_type* ObjectContainer<object_type,objectid_type>::getObject(const ObjectId& objId) const
+	{
+		assert( !objId.isNull() );
+		if (objId.isNull())
+			return 0;
+		IdObjMap::const_iterator it = id2obj_.find( objId );
+		assert( it != id2obj_.end() );
+		if (it == id2obj_.end())
+			return 0;
+		return it->second;
+	}
+} // namespace object
+} // namespace yake
+
+#endif

Added: trunk/yake/yake/object/ObjectId.h
===================================================================
--- trunk/yake/yake/object/ObjectId.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ObjectId.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,96 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef OBJECTID_H
+#define OBJECTID_H
+
+#include "common.h"
+
+namespace yake {
+namespace OBJECTS_NAMESPACE {
+
+	struct default_objectid_traits
+	{
+		typedef uint16 classid_type;
+		typedef uint16 serialno_type;
+		typedef uint32 classid_combined_type;
+		static const size_t kNumClassIdBits = 16;
+		static const size_t kNumSerialNoBits = 16;
+		static const classid_type kFullClassIdMask = 0xffff;
+		static const serialno_type kFullSerialNoMask = 0xffff;
+	};
+
+	template<typename objectid_traits = default_objectid_traits>
+	struct ObjectId
+	{
+	public:
+		typedef objectid_traits traits;
+		typedef typename traits::classid_type ClassId;
+		typedef typename traits::serialno_type SerialNo;
+		typedef typename traits::classid_combined_type CombinedType;
+		typedef ObjectId<traits> this_type;
+
+		static const ObjectId kNull;
+
+		typedef std::vector<ClassId> ClassIdList;
+		typedef std::set<ClassId> ClassIdSet;
+		typedef std::map<ClassId,ClassId> ClassIdMap;
+		typedef std::vector<this_type> ObjectIdList;
+		typedef std::set<this_type> ObjectIdSet;
+
+		ObjectId(const ClassId, const SerialNo);
+		ObjectId(const ObjectId&);
+		ObjectId(const CombinedType = 0); // also default c'tor
+		ObjectId& operator=(const ObjectId&);
+		ObjectId& operator=(const CombinedType);
+		ClassId classId() const;
+		SerialNo serialNo() const;
+		void setClassId(const ClassId);
+		void setSerialNo(const SerialNo);
+		bool operator==(const ObjectId& rhs);
+		bool operator!=(const ObjectId& rhs);
+		bool operator<(const ObjectId& rhs);
+		bool operator<=(const ObjectId& rhs);
+		bool operator>(const ObjectId& rhs);
+		bool operator>=(const ObjectId& rhs);
+		operator CombinedType() const;
+		bool isNull() const;
+	private:
+		CombinedType	id_;
+	};
+
+	#include "ObjectId.inl"
+} // namespace object
+} // namespace yake
+
+template<typename T>
+inline std::ostream& operator << (std::ostream& os, const ::yake::OBJECTS_NAMESPACE::ObjectId<T>& rhs)
+{
+	os << "ObjectId(ClassId=" << std::hex << "0x" << rhs.classId() << ", SerialNo=" << std::hex << "0x" << rhs.serialNo() << ")" << std::dec;
+	return os;
+}
+
+#endif

Added: trunk/yake/yake/object/ObjectId.inl
===================================================================
--- trunk/yake/yake/object/ObjectId.inl	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ObjectId.inl	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,113 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+template<typename objectid_traits>
+const typename ObjectId<objectid_traits>::this_type ObjectId<objectid_traits>::kNull = ObjectId<objectid_traits>(std::numeric_limits<CombinedType>::max());
+
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::isNull() const
+{
+	return (*this == kNull);
+}
+template<typename objectid_traits>
+ObjectId<objectid_traits>::ObjectId(const ClassId clsId, const SerialNo no) : id_( no | (clsId<<16) )
+{
+}
+template<typename objectid_traits>
+ObjectId<objectid_traits>::ObjectId(const ObjectId& other) : id_(other.id_)
+{
+}
+template<typename objectid_traits>
+ObjectId<objectid_traits>::ObjectId(const CombinedType id) : id_(id)
+{
+}
+template<typename objectid_traits>
+ObjectId<objectid_traits>& ObjectId<objectid_traits>::operator=(const ObjectId& rhs)
+{
+	id_ = rhs.id_;
+	return *this;
+}
+template<typename objectid_traits>
+ObjectId<objectid_traits>& ObjectId<objectid_traits>::operator=(const CombinedType id)
+{
+	id_ = id;
+	return *this;
+}
+template<typename objectid_traits>
+typename ObjectId<objectid_traits>::ClassId ObjectId<objectid_traits>::classId() const
+{
+	return ((id_>>CombinedType(traits::kNumSerialNoBits)) & traits::kFullClassIdMask);
+}
+template<typename objectid_traits>
+void ObjectId<objectid_traits>::setClassId(const ClassId clsId)
+{
+	id_ = serialNo() | (clsId<<traits::kNumSerialNoBits);
+}
+template<typename objectid_traits>
+typename ObjectId<objectid_traits>::SerialNo ObjectId<objectid_traits>::serialNo() const
+{
+	return (id_ & traits::kFullSerialNoMask);
+}
+template<typename objectid_traits>
+void ObjectId<objectid_traits>::setSerialNo(const SerialNo no)
+{
+	id_ = no | (classId()<<traits::kNumSerialNoBits);
+}
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::operator==(const ObjectId& rhs)
+{
+	return id_ == rhs.id_;
+}
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::operator!=(const ObjectId& rhs)
+{
+	return !(*this == rhs);
+}
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::operator<(const ObjectId& rhs)
+{
+	return (id_ < rhs.id_);
+}
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::operator<=(const ObjectId& rhs)
+{
+	return (id_ <= rhs.id_);
+}
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::operator>(const ObjectId& rhs)
+{
+	return (id_ > rhs.id_);
+}
+template<typename objectid_traits>
+bool ObjectId<objectid_traits>::operator>=(const ObjectId& rhs)
+{
+	return (id_ >= rhs.id_);
+}
+template<typename objectid_traits>
+ObjectId<objectid_traits>::operator CombinedType() const
+{
+	return id_;
+}

Added: trunk/yake/yake/object/ObjectManager.h
===================================================================
--- trunk/yake/yake/object/ObjectManager.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ObjectManager.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,178 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef OBJECTMANAGER_H
+#define OBJECTMANAGER_H
+
+namespace yake {
+namespace OBJECTS_NAMESPACE {
+	/**
+		@Remarks Requirements for object_type:
+					- method: ObjectId id() const
+	*/
+	template<typename obj_type,typename objectid_type = ObjectId<default_objectid_traits> >
+	struct ObjectManager
+	{
+	public:
+		typedef obj_type object_type;
+		typedef objectid_type ObjectId;
+		typedef typename objectid_type::ClassId ClassId;
+		typedef typename objectid_type::ClassIdSet ClassIdSet;
+
+		typedef boost::function<object_type*(const ObjectId&)> CreateObjectFn;
+		typedef boost::function<void(object_type*)> DestroyObjectFn;
+		typedef ObjectContainer<object_type> object_ctr_type;
+
+		typedef boost::function<void(object_type*)> AboutToDestroyObjectFn; //@todo use!!
+		typedef boost::function<void(object_type*)> ObjectCreatedFn; //@todo use!!
+
+		typedef std::map<ClassId,ClassId> ClassIdMap;
+
+		ObjectManager();
+		~ObjectManager();
+
+		// class registration
+		void setClassIdGenerationRange(const ClassId min, const ClassId max);
+
+		/** Register class auto-generating an id in the process. */
+		std::pair<ResultCode,ClassId> registerClass(const std::string& name, const CreateObjectFn&, const DestroyObjectFn&);
+		/** Register class with specific id. */
+		ResultCode registerClass(const ClassId clsId, const std::string& name, const CreateObjectFn&, const DestroyObjectFn&);
+		/** Return class id for string id. */
+		std::pair<ResultCode,ClassId> getClassId(const std::string& name) const;
+		/** Return name for class id. */
+		std::pair<ResultCode,std::string> getClassName(const ClassId) const;
+		/** Register class alias to registered class using ClassIds.
+			@Remarks One *cannot* create an alias to an alias.
+				Furthermore the aliasClsId shall not be identical to targetClsId!
+		*/
+		ResultCode registerClassAlias(const ClassId aliasClsId, const ClassId targetClsId);
+		/** Register class alias to registered class using string class id.
+			@Remarks One *cannot* create an alias to an alias.
+				Furthermore "aliasId" shall not be the string id of a registered class!
+		*/
+		ResultCode registerClassAlias(const std::string& aliasName, const ClassId targetClsId);
+
+		const ClassIdSet& getRegisteredClasses() const;
+		const ClassIdMap& getClassAliases() const;
+
+		void unregisterClasses();
+		void unregisterAliases();
+
+		// object management
+		object_type* createObject(const ClassId, const ObjectId& userObjId = ObjectId::kNull);
+		object_type* createObject(const std::string&, const ObjectId& userObjId = ObjectId::kNull);
+		void destroyObject(object_type*);
+		void destroyAllObjects();
+
+	private:
+		uint8 determineClassIdBitsForRange(const ClassId min, const ClassId max) const;
+
+		object_ctr_type					objCtr_;
+
+		struct ClassEntryData
+		{
+			CreateObjectFn	create_;
+			DestroyObjectFn	destroy_;
+			std::string		name_;
+		};
+		typedef ClassAndObjectIdManager<ClassEntryT<ClassEntryData> > TheClassAndObjectIdManager;
+		TheClassAndObjectIdManager		idMgr_;
+
+		ClassIdMap						idAliases_;
+
+		typedef std::map<std::string,ClassId> StringToClassIdMap;
+		StringToClassIdMap				strIdAliases_;
+
+		ClassId							lastClsId_;
+		ClassId							minGenClsId_;
+		ClassId							maxGenClsId_;
+
+		typedef std::map<ObjectId,object_type*> IdObjMap;
+		IdObjMap						objs_;
+	};
+
+#include "ObjectManager.inl"
+
+	template<class objmgr_type>
+	inline std::ostream& dump(std::ostream& out, const objmgr_type& objMgr)
+	{
+		out << "ObjectManager=\n";
+		out << "  classes = \n";
+		const typename objmgr_type::ClassIdSet& ids = objMgr.getRegisteredClasses();
+		for (typename objmgr_type::ClassIdSet::const_iterator itId = ids.begin(); itId != ids.end(); ++itId)
+		{
+			const std::string name = objMgr.getClassName(*itId).second;
+			out << "    '" << (name.empty() ? "(not found)" : name) << "' 0x" << std::hex << *itId << "\n";
+		}
+
+		out << "  aliases = \n";
+		const typename objmgr_type::ClassIdMap& idMap = objMgr.getClassAliases();
+		for (typename objmgr_type::ClassIdMap::const_iterator it = idMap.begin(); it != idMap.end(); ++it)
+		{
+			const std::string name = objMgr.getClassName(it->second).second;
+			out << "    0x" << std::hex << it->first << " -> 0x" << it->second << " '" << (name.empty() ? "(not found)" : name) << "'\n";
+		}
+		out << std::dec << "\n";
+		return out;
+	}
+
+	template<typename objmgr_type>
+	inline size_t createOptimizedClassIdMap(const objmgr_type& objMgr, size_t& reqBits, typename objmgr_type::ObjectId::ClassIdMap& idMap, const typename objmgr_type::ClassId minId = 0/*, const bool includedAliases = false*/)
+	{
+		typedef typename objmgr_type::ClassId ClassId;
+		typedef typename objmgr_type::ClassIdSet ClassIdSet;
+		typedef typename objmgr_type::ObjectId::ClassIdMap ClassIdMap;
+
+		ClassIdSet ids = objMgr.getRegisteredClasses();
+		idMap.clear();
+		ClassId lastId = minId;
+		for (ClassIdSet::const_iterator itId = ids.begin(); itId != ids.end(); ++itId)
+		{
+			idMap.insert( std::make_pair(lastId++,*itId) );
+		}
+		/*
+		if (includedAliases)
+		{
+			//@todo const ClassIdMap& aliases = objMgr.getClassAliases();
+			for (ClassIdMap::const_iterator it = aliases.begin(); it != aliases.end(); ++it)
+			...
+		}
+		*/
+		reqBits = 0;
+		while (lastId > 0)
+		{
+			++reqBits;
+			lastId = lastId >> 1;
+		}
+		return idMap.size();
+	}
+
+
+} // namespace object
+} // namespace yake
+
+#endif

Added: trunk/yake/yake/object/ObjectManager.inl
===================================================================
--- trunk/yake/yake/object/ObjectManager.inl	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/ObjectManager.inl	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,319 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+	template<typename obj_type, typename objectid_type>
+	ObjectManager<obj_type,objectid_type>::ObjectManager() : minGenClsId_(0), maxGenClsId_(std::numeric_limits<ClassId>::max())
+	{
+		lastClsId_ = minGenClsId_;
+	}
+	template<typename obj_type, typename objectid_type>
+	ObjectManager<obj_type,objectid_type>::~ObjectManager()
+	{
+	}
+	template<typename obj_type, typename objectid_type>
+	void ObjectManager<obj_type,objectid_type>::unregisterClasses()
+	{
+		assert( objs_.empty() );
+		if (!objs_.empty()) //@TODO is this desirable behaviour?
+			destroyAllObjects();
+
+		unregisterAliases();
+		idMgr_.clear();
+		lastClsId_ = minGenClsId_;
+	}
+	template<typename obj_type, typename objectid_type>
+	void ObjectManager<obj_type,objectid_type>::unregisterAliases()
+	{
+		idAliases_.clear();
+		strIdAliases_.clear();
+	}
+	template<typename obj_type, typename objectid_type>
+	std::pair<ResultCode,typename objectid_type::ClassId> ObjectManager<obj_type,objectid_type>::getClassId(const std::string& id) const
+	{
+		assert( !id.empty() );
+		if (id.empty())
+			return std::make_pair(RC_INVALID_INPUT,0);
+		StringToClassIdMap::const_iterator it = strIdAliases_.find( id );
+		if (it == strIdAliases_.end())
+			return std::make_pair(RC_NOT_FOUND,0);
+		return std::make_pair(RC_OK,it->second);
+	}
+	template<typename obj_type, typename objectid_type>
+	std::pair<ResultCode,std::string> ObjectManager<obj_type,objectid_type>::getClassName(const ClassId clsId) const
+	{
+		assert( idMgr_.hasClass( clsId ) );
+		if (!idMgr_.hasClass( clsId ))
+			return std::make_pair(RC_NOT_FOUND,"");
+		return std::make_pair(RC_OK,idMgr_.getClassData( clsId ).name_);
+	}
+	template<typename obj_type, typename objectid_type>
+	ResultCode ObjectManager<obj_type,objectid_type>::registerClass(const ClassId clsId, const std::string& name, const CreateObjectFn& createFn, const DestroyObjectFn& destroyFn)
+	{
+		// check params
+		assert( !name.empty() );
+		if (name.empty())
+			return RC_INVALID_INPUT;
+		assert( !createFn.empty() );
+		if (createFn.empty())
+			return RC_INVALID_INPUT;
+		assert( !destroyFn.empty() );
+		if (destroyFn.empty())
+			return RC_INVALID_INPUT;
+
+		// try to register class
+		ClassEntryData data;
+		data.name_ = name;
+		data.create_ = createFn;
+		data.destroy_ = destroyFn;
+
+		ResultCode rc = idMgr_.registerClassId( clsId, data );
+		assert( rc == RC_OK );
+		if (rc != RC_OK)
+			return rc;
+
+		strIdAliases_.insert( StringToClassIdMap::value_type(name,clsId) );
+
+		return RC_OK;
+	}
+	template<typename obj_type, typename objectid_type>
+	std::pair<ResultCode,typename objectid_type::ClassId> ObjectManager<obj_type,objectid_type>::registerClass(const std::string& name, const CreateObjectFn& createFn, const DestroyObjectFn& destroyFn)
+	{
+		// check params
+		assert( !name.empty() );
+		if (name.empty())
+			return std::make_pair(RC_INVALID_INPUT,0);
+		assert( !createFn.empty() );
+		if (createFn.empty())
+			return std::make_pair(RC_INVALID_INPUT,0);
+		assert( !destroyFn.empty() );
+		if (destroyFn.empty())
+			return std::make_pair(RC_INVALID_INPUT,0);
+
+		// generate class id
+		ClassId clsId = lastClsId_++;
+
+		// try to register class
+		ResultCode rc = this->registerClass(clsId, name, createFn, destroyFn);
+		if (rc != RC_OK)
+		{
+			--lastClsId_;
+		}
+		return std::make_pair(rc,clsId);
+	}
+	template<typename obj_type, typename objectid_type>
+	ResultCode ObjectManager<obj_type,objectid_type>::registerClassAlias(const ClassId aliasClsId, const ClassId targetClsId)
+	{
+		// check params
+		assert( aliasClsId != targetClsId );
+		if (aliasClsId == targetClsId)
+			return RC_NOT_FOUND;
+		assert( idMgr_.hasClass( targetClsId ) );
+		if (!idMgr_.hasClass( targetClsId ))
+			return RC_NOT_FOUND;
+
+		// check for existing alias
+		assert( !util::map_contains(idAliases_,aliasClsId) );
+		if (util::map_contains(idAliases_,aliasClsId))
+			return RC_ALREADY_EXISTS;
+
+		// register alias
+		idAliases_.insert( std::make_pair( aliasClsId, targetClsId ) );
+		return RC_OK;
+	}
+	template<typename obj_type, typename objectid_type>
+	ResultCode ObjectManager<obj_type,objectid_type>::registerClassAlias(const std::string& aliasName, const ClassId targetClsId)
+	{
+		// check params
+		assert( !aliasName.empty() );
+		if (aliasName.empty())
+			return RC_INVALID_INPUT;
+		assert( idMgr_.hasClass( targetClsId ) );
+		if (!idMgr_.hasClass( targetClsId ))
+			return RC_NOT_FOUND;
+
+		// check for existing alias
+		assert( !util::map_contains(strIdAliases_,aliasName) );
+		if (util::map_contains(strIdAliases_,aliasName))
+			return RC_ALREADY_EXISTS;
+
+		// register alias
+		strIdAliases_.insert( std::make_pair( aliasName, targetClsId ) );
+		return RC_OK;
+	}
+	template<typename obj_type, typename objectid_type>
+	void ObjectManager<obj_type,objectid_type>::setClassIdGenerationRange(const ClassId min, const ClassId max)
+	{
+		//@FIXME make this whole thingy safer...
+		minGenClsId_ = min;
+		maxGenClsId_ = max;
+		lastClsId_ = minGenClsId_;
+	}
+	template<typename obj_type, typename objectid_type>
+	uint8 ObjectManager<obj_type,objectid_type>::determineClassIdBitsForRange(const ClassId min, const ClassId max) const
+	{
+		uint8 count = 0;
+		ClassId curr = max - min;
+		if (curr == 0)
+			return 1;
+		while (curr > 0)
+		{
+			++count;
+			curr = curr >> 1;
+		}
+		return count;
+	}
+	template<typename obj_type, typename objectid_type>
+	const typename ObjectManager<obj_type,objectid_type>::ClassIdSet& ObjectManager<obj_type,objectid_type>::getRegisteredClasses() const
+	{
+		return idMgr_.getRegisteredClasses();
+	}
+	template<typename obj_type, typename objectid_type>
+	const typename ObjectManager<obj_type,objectid_type>::ClassIdMap& ObjectManager<obj_type,objectid_type>::getClassAliases() const
+	{
+		return this->idAliases_;
+	}
+	template<typename obj_type, typename objectid_type>
+	void ObjectManager<obj_type,objectid_type>::destroyAllObjects()
+	{
+		IdObjMap objs = objs_; // copy!
+		for (IdObjMap::const_iterator it = objs.begin(); it != objs.end(); ++it)
+		{
+			destroyObject( it->second );
+		}
+		assert( objs_.empty() );
+	}
+	template<typename obj_type, typename objectid_type>
+	void ObjectManager<obj_type,objectid_type>::destroyObject(object_type* obj)
+	{
+		if (!obj)
+			return;
+
+		// erase reference to object
+		assert( !obj->id().isNull() );
+		if (!obj->id().isNull())
+		{
+			IdObjMap::iterator it = objs_.find( obj->id() );
+			if (it != objs_.end())
+				objs_.erase( obj->id() );
+		}
+
+		// look up class
+		ClassId clsId = obj->id().classId();
+		if (!idMgr_.hasClass( clsId ))
+		{
+			// try alias
+			ClassIdMap::const_iterator it = idAliases_.find( clsId );
+			assert( it != idAliases_.end() );
+			if (it == idAliases_.end())
+				return; //@FIXME or throw ?
+			clsId = it->second;
+			assert( idMgr_.hasClass( clsId ) );
+			if (!idMgr_.hasClass( clsId ))
+				return; //@FIXME or throw ?
+		}
+		// try to destroy instance
+		const ClassEntryData& data = idMgr_.getClassData( clsId );
+		assert( !data.destroy_.empty() );
+		if (data.destroy_.empty())
+		{
+			return; //@FIXME or throw ?
+		}
+
+		data.destroy_( obj );
+	}
+	template<typename obj_type, typename objectid_type>
+	typename ObjectManager<obj_type,objectid_type>::object_type* ObjectManager<obj_type,objectid_type>::createObject(const std::string& id, const objectid_type& userObjId = objectid_type::kNull)
+	{
+		// check params
+		assert( !id.empty() );
+		if (id.empty())
+			return 0;
+
+		// look up class id and try to create object if the class id could be found.
+		std::pair<ResultCode,ClassId> ret = this->getClassId( id );
+		if (ret.first != RC_OK)
+			return 0;
+		return this->createObject( ret.second, userObjId );
+	}
+	template<typename obj_type, typename objectid_type>
+	typename ObjectManager<obj_type,objectid_type>::object_type* ObjectManager<obj_type,objectid_type>::createObject(const ClassId clsId, const objectid_type& userObjId = objectid_type::kNull)
+	{
+		if (!userObjId.isNull())
+		{
+			assert( clsId == userObjId.classId() );
+		}
+
+		ClassId theClsId = clsId;
+
+		// look up class
+		if (!idMgr_.hasClass( theClsId ))
+		{
+			// try alias
+			ClassIdMap::const_iterator it = idAliases_.find( theClsId );
+			assert( it != idAliases_.end() );
+			if (it == idAliases_.end())
+				return 0;
+			theClsId = it->second;
+			assert( idMgr_.hasClass( theClsId ) );
+			if (!idMgr_.hasClass( theClsId ))
+				return 0;
+		}
+
+		// try to create instance
+		const ClassEntryData& data = idMgr_.getClassData( theClsId );
+		assert( !data.create_.empty() );
+		if (data.create_.empty())
+			return 0;
+
+		ObjectId objId;
+		if (!userObjId.isNull())
+		{
+			objId = userObjId;
+		}
+		else
+		{
+			objId = idMgr_.createObjectId( theClsId );
+			assert( !objId.isNull() );
+			if (objId.isNull())
+				return 0;
+		}
+		assert( !objId.isNull() );
+		if (objId.isNull())
+			return 0;
+
+		object_type* obj = data.create_( objId );
+		assert( obj );
+		if (!obj)
+		{
+			idMgr_.removeObjectId( objId );
+			return 0;
+		}
+
+		assert( obj->id() == objId );
+
+		objs_.insert( std::make_pair( obj->id(), obj ) );
+		return obj;
+	}

Added: trunk/yake/yake/object/common.h
===================================================================
--- trunk/yake/yake/object/common.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/common.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,113 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef COMMON_H
+#define COMMON_H
+
+/**
+	All include files needed by this library.
+	This file ("common.h") could be used in a precompiled header, for example.
+*/
+
+#include <cassert>
+#include <limits>
+#include <iostream>
+#include <vector>
+#include <map>
+#include <set>
+#include <boost/function.hpp>
+#include <boost/bind.hpp>
+
+#define OBJECTS_NAMESPACE object
+
+namespace yake {
+namespace OBJECTS_NAMESPACE {
+
+	/** Common types */
+
+	typedef unsigned __int16 uint16;
+	typedef unsigned __int32 uint32;
+	typedef unsigned __int8 uint8;
+
+	enum ResultCode
+	{
+		RC_OK,
+		RC_ALREADY_EXISTS,
+		RC_ALREADY_REGISTERED = RC_ALREADY_EXISTS,
+		RC_UNKNOWN_CLASS,
+		RC_NOT_FOUND,
+		RC_INVALID_INPUT
+	};
+
+} // namespace object
+
+//--------------------------
+
+namespace util {
+
+	#include <algorithm>
+
+	template<typename T>
+		std::pair<typename T::key_type,typename T::key_type> get_minmax_keys( const T& ctr )
+	{
+		return std::make_pair(
+			ctr.begin()->first,
+			(--ctr.end())->second );
+	}
+
+	/** Erases an element from a STL container. Element is identified by value.
+		@return true if element was erased, false if element couldn't be found in the container.
+	*/
+	template<typename T>
+		bool safeErase( T& container, typename const T::value_type value)
+	{
+		typename T::iterator it = std::find(container.begin(), container.end(), value);
+		if (it == container.end())
+			return false;
+		container.erase(it);
+		return true;
+	}
+	/** Determines whether an element is in a given STL or STL-like container.
+		@return true if element was found in the container, false if not.
+	*/
+	template<typename T>
+		bool contains( const T& container, typename const T::value_type& value)
+	{
+		return (container.end() != std::find(container.begin(), container.end(), value));
+	}
+	/** Determines whether an element is in a given STL or STL-like associative container.
+		@return true if element was found in the container, false if not.
+	*/
+	template<typename T>
+		bool map_contains( const T& container, typename const T::key_type key)
+	{
+		return (container.end() != container.find(key));
+	}
+
+} // namespace util
+} // namespace yake
+
+#endif

Added: trunk/yake/yake/object/pch.h
===================================================================
--- trunk/yake/yake/object/pch.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/pch.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,33 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef PCH_H
+#define PCH_H
+#pragma once
+
+#include "common.h"
+
+#endif

Added: trunk/yake/yake/object/yakeObjects.h
===================================================================
--- trunk/yake/yake/object/yakeObjects.h	2005-12-07 22:44:06 UTC (rev 1175)
+++ trunk/yake/yake/object/yakeObjects.h	2006-01-15 18:17:26 UTC (rev 1176)
@@ -0,0 +1,36 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_OBJECT_H
+#define YAKE_OBJECT_H
+
+#include "common.h"
+#include "ObjectId.h"
+#include "ClassAndObjectIdManager.h"
+#include "ObjectContainer.h"
+#include "ObjectManager.h"
+
+#endif



From codeandroid at berlios.de  Sun Jan 15 19:18:19 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:18:19 +0100
Subject: [Yake-svn] r1177 - trunk/yake/scripts/msvc8
Message-ID: <200601151818.k0FIIJsA015947@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:18:18 +0100 (Sun, 15 Jan 2006)
New Revision: 1177

Added:
   trunk/yake/scripts/msvc8/object.vcproj
Log:
initial revision

Added: trunk/yake/scripts/msvc8/object.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/object.vcproj	2006-01-15 18:17:26 UTC (rev 1176)
+++ trunk/yake/scripts/msvc8/object.vcproj	2006-01-15 18:18:18 UTC (rev 1177)
@@ -0,0 +1,241 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="8,00"
+	Name="object"
+	ProjectGUID="{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}"
+	RootNamespace="object"
+	Keyword="Win32Proj"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="../../common/bin/debug"
+			IntermediateDirectory="../../common/obj/debug/$(ProjectName)"
+			ConfigurationType="2"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="../../;../../dependencies/boost/;../../dependencies/ttl/;..dependencies/tinyxml"
+				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_WINDOWS;_USRDLL;YAKE_OBJECT_EXPORTS"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/object/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				OutputFile="$(OutDir)/$(ProjectName).dll"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="../../common/lib/debug;../../dependencies/lib"
+				GenerateDebugInformation="true"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="2"
+				ImportLibrary="../../common/lib/debug/$(TargetName).lib"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="../../common/bin/release"
+			IntermediateDirectory="../../common/obj/release/$(ProjectName)"
+			ConfigurationType="2"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="../../;../../dependencies/boost/;../../dependencies/ttl/;..dependencies/tinyxml"
+				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;YAKE_OBJECT_EXPORTS"
+				RuntimeLibrary="2"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/object/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				OutputFile="$(OutDir)/$(ProjectName).dll"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="../../common/lib/release;../../dependencies/lib"
+				GenerateDebugInformation="false"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				ImportLibrary="../../common/lib/release/$(TargetName).lib"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="src"
+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
+			UniqueIdentifier="{4D6F1EC1-BCCC-48f4-AC21-9C1EAFD63A3D}"
+			>
+		</Filter>
+		<Filter
+			Name="inc"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{7333152F-A433-4b12-BCF7-4462FCB76B08}"
+			>
+			<File
+				RelativePath="..\..\yake\object\ClassAndObjectIdManager.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\ClassAndObjectIdManager.inl"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\common.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\ObjectContainer.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\ObjectId.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\ObjectId.inl"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\ObjectManager.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\ObjectManager.inl"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\pch.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\yake\object\yakeObjects.h"
+				>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>



From codeandroid at berlios.de  Sun Jan 15 19:43:38 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:43:38 +0100
Subject: [Yake-svn] r1178 - trunk/yake/yapp/ent
Message-ID: <200601151843.k0FIhcfD027287@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:43:31 +0100 (Sun, 15 Jan 2006)
New Revision: 1178

Modified:
   trunk/yake/yapp/ent/yakeActor.h
   trunk/yake/yapp/ent/yakeEnt.h
   trunk/yake/yapp/ent/yakeEntity.h
   trunk/yake/yapp/ent/yakeObject.h
   trunk/yake/yapp/ent/yakePCH.h
   trunk/yake/yapp/ent/yakeSim.h
   trunk/yake/yapp/ent/yakeTrigger.h
Log:
refactored to use yake::object

Modified: trunk/yake/yapp/ent/yakeActor.h
===================================================================
--- trunk/yake/yapp/ent/yakeActor.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakeActor.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -35,7 +35,7 @@
 
 	class YAKE_ENT_API Actor : public Pawn
 	{
-		YAKE_DECLARE_ENTITY(Actor)
+		YAKE_DECLARE_ENTITY(Actor,"Actor")
 	public:
 		enum LifeState {
 			kSpawning,

Modified: trunk/yake/yapp/ent/yakeEnt.h
===================================================================
--- trunk/yake/yapp/ent/yakeEnt.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakeEnt.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -37,6 +37,7 @@
 #include <yapp/base/yapp.h>
 #include <yake/scripting/yakeScriptingSystem.h>
 #include <yapp/msg/yakeMsg.h>
+#include <yake/object/yakeObjects.h>
 #include <yapp/ent/yakeCommon.h>
 #include <yapp/ent/yakeEvent.h>
 #include <yapp/ent/yakeMessaging.h>

Modified: trunk/yake/yapp/ent/yakeEntity.h
===================================================================
--- trunk/yake/yapp/ent/yakeEntity.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakeEntity.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -40,7 +40,7 @@
 	class YAKE_ENT_API Entity : public Object
 	{
 		friend class sim;
-		DECLARE_OBJECT(Entity)
+		DECLARE_OBJECT(Entity,"Entity")
 	private:
 		Entity(const Entity&);
 	protected:
@@ -90,7 +90,7 @@
 		void _initialiseComponents(object_creation_context& creationCtx);
 	};
 
-#define YAKE_DECLARE_ENTITY( ENTITYCLASS ) DECLARE_OBJECT( ENTITYCLASS )
+#define YAKE_DECLARE_ENTITY( ENTITYCLASS,STRINGID ) DECLARE_OBJECT( ENTITYCLASS, STRINGID )
 #define YAKE_DEFINE_ENTITY( ENTITYCLASS ) DEFINE_OBJECT( ENTITYCLASS )
 #define YAKE_DEFINE_ENTITY_1( ENTITYCLASS, PARENT0 ) DEFINE_OBJECT_1( ENTITYCLASS, PARENT0 )
 
@@ -111,7 +111,7 @@
 
 	class YAKE_ENT_API Pawn : public Entity
 	{
-		YAKE_DECLARE_ENTITY(Pawn)
+		YAKE_DECLARE_ENTITY(Pawn,"Pawn")
 	public:
 		OBJECT_PROPS_BEGIN(Pawn)
 			OBJECT_PROP("position", Vector3, Vector3(0,0,0))
@@ -136,7 +136,7 @@
 
 	class YAKE_ENT_API Light : public Entity
 	{
-		YAKE_DECLARE_ENTITY(Light)
+		YAKE_DECLARE_ENTITY(Light,"Pawn")
 	public:
 		void enableLight( bool yes );
 		bool isLightEnabled() const;
@@ -152,6 +152,6 @@
 		virtual void onTick();
 	};
 
+} // namespace ent
 } // namespace yake
-} // namespace ent
 #endif

Modified: trunk/yake/yapp/ent/yakeObject.h
===================================================================
--- trunk/yake/yapp/ent/yakeObject.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakeObject.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -33,12 +33,18 @@
 	}
 namespace ent {
 
-	class sim;
+	class Simulation;
 
-	typedef YAKE_ENT_API yake::String ObjectClassId;
-	typedef YAKE_ENT_API uint32 ObjectId;
-	typedef YAKE_ENT_API boost::function<Object*(void)> ObjectCreatorFn;
+	typedef YAKE_ENT_API yake::String ObjectClassName;
+	typedef YAKE_ENT_API object::ObjectId<object::default_objectid_traits> ObjectId;
+	typedef YAKE_ENT_API boost::function<Object*(const ObjectId&)> ObjectCreatorFn;
+	typedef YAKE_ENT_API boost::function<void(Object*)> ObjectDestroyFn;
 
+	typedef ObjectId::ClassId ClassId;
+	typedef ObjectId::ClassIdSet ClassIdSet;
+	typedef ObjectId::ClassIdMap ClassIdMap;
+	typedef ObjectId::ObjectIdSet ObjectIdSet;
+
 	/** Data is passed to a newly created object.
 	*/
 	struct YAKE_ENT_API object_creation_context
@@ -129,7 +135,7 @@
 		object_class(const object_class&);
 	public:
 		object_class(const String& name) : mName(name) {}
-		object_class(const String& name, const ObjectCreatorFn& creatorFn) : mName(name), mCreatorFn(creatorFn) {}
+		object_class(const String& name, const ObjectCreatorFn& creatorFn, const ObjectDestroyFn& destroyFn) : mName(name), mCreatorFn(creatorFn), mDestroyFn(destroyFn) {}
 		bool operator == (const object_class& rhs)
 		{ return mName == rhs.getName(); }
 		String getName() const
@@ -143,13 +149,16 @@
 		const ClassPtrList& getParents() const;
 		const ClassPtrList& getChildren() const;
 		const ObjectCreatorFn& getCreatorFn() const;
-		Object* createInstance() const;
+		const ObjectDestroyFn& getDestroyFn() const;
+		Object* createInstance(const ObjectId&) const;
+		void destroyInstance(Object*) const;
 	private:
-		String				mName;
-		PropertyDefMap		mPropDefs;
-		ClassPtrList		mParents;
-		ClassPtrList		mChilds;
+		String					mName;
+		PropertyDefMap			mPropDefs;
+		ClassPtrList			mParents;
+		ClassPtrList			mChilds;
 		ObjectCreatorFn		mCreatorFn;
+		ObjectDestroyFn		mDestroyFn;
 	};
 
 	#define DECLARE_OBJECT_BASIC(CLASSNAME) \
@@ -171,7 +180,7 @@
 	*/
 	class YAKE_ENT_API Object
 	{
-		friend class sim;
+		friend class Simulation;
 		DECLARE_OBJECT_ROOT(Object)
 	private:
 		Object(const Object&);
@@ -191,6 +200,8 @@
 		virtual void onGetDefaultEventParams(ParamList& params) {};
 	public:
 		ObjectId getId() const;
+		ObjectId id() const;
+		void setId(const ObjectId& id);
 		bool isServer() const;
 
 		Event* getEventByName(const String& name) const;
@@ -205,7 +216,7 @@
 		ObjectMessage* createMessage(const MessageId& id);
 		void addMessageHandler(const MessageId& id, const MessageHandlerFn& fn, Object* source = 0);
 	protected:
-		// supposed to be called only by sim!
+		// supposed to be called only by Simulation!
 		void postMessage(ObjectMessage* pMessage)
 		{
 			mMessageManager.postMessage( pMessage );
@@ -238,17 +249,23 @@
 #define OBJECT_PROPS_END() \
 		}
 
-	#define DECLARE_OBJECT(CLASSNAME) \
+
+	#define DECLARE_OBJECT(CLASSNAME,STRINGID) \
 		DECLARE_OBJECT_BASIC(CLASSNAME) \
 	private: \
-		static Object* create() \
+		static Object* create(const ObjectId& id) \
 		{ \
 			CLASSNAME* pObj = new CLASSNAME(); \
+			pObj->setId(id); \
 			initEntity(pObj); \
 			return pObj; \
 		} \
+		static void destroy(Object* obj) \
+		{ \
+			delete obj; \
+		} \
 	public: \
-		static void reg( ::yake::ent::sim& theSim ); \
+		static void init(); \
 		static CLASSNAME* cast( Object* other ) \
 		{  return dynamic_cast<CLASSNAME*>(other); } \
 		static const CLASSNAME* cast( const Object* other ) \
@@ -257,7 +274,7 @@
 	#define DEFINE_OBJECT_CLASS_WITH_CREATOR(CLASSNAME) \
 		::yake::ent::object_class* CLASSNAME::getClass() \
 		{ \
-			static ::yake::ent::object_class g_class(#CLASSNAME,&CLASSNAME::create); \
+			static ::yake::ent::object_class g_class(#CLASSNAME,&CLASSNAME::create,&CLASSNAME::destroy); \
 			return &g_class; \
 		}
 	#define DEFINE_OBJECT_CLASS_WITHOUT_CREATOR(CLASSNAME) \
@@ -284,20 +301,18 @@
 	#define DEFINE_OBJECT(CLASSNAME) \
 		DEFINE_OBJECT_CLASS_WITH_CREATOR(CLASSNAME) \
 		DEFINE_OBJECT_BASIC(CLASSNAME) \
-		void CLASSNAME::reg( ::yake::ent::sim& theSim ) \
+		void CLASSNAME::init() \
 		{ \
 			CLASSNAME::regPropDefs##CLASSNAME(getClass()->getPropertyDef()); \
-			theSim.regObjectClass(getClass()); \
 		}
 
 	#define DEFINE_OBJECT_1(CLASSNAME,PARENT0) \
 		DEFINE_OBJECT_CLASS_WITH_CREATOR(CLASSNAME) \
 		DEFINE_OBJECT_BASIC(CLASSNAME) \
-		void CLASSNAME::reg( ::yake::ent::sim& theSim ) \
+		void CLASSNAME::init() \
 		{ \
 			getClass()->addParent(PARENT0::getClass()); \
 			CLASSNAME::regPropDefs##CLASSNAME(getClass()->getPropertyDef()); \
-			theSim.regObjectClass(getClass()); \
 		}
 
 	template<class T>

Modified: trunk/yake/yapp/ent/yakePCH.h
===================================================================
--- trunk/yake/yapp/ent/yakePCH.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakePCH.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -31,5 +31,6 @@
 #include <yapp/base/yapp.h>
 #include <yake/scripting/yakeScriptingSystem.h>
 #include <yapp/msg/yakeMsg.h>
+#include <yake/object/yakeObjects.h>
 
 #endif

Modified: trunk/yake/yapp/ent/yakeSim.h
===================================================================
--- trunk/yake/yapp/ent/yakeSim.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakeSim.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -30,76 +30,101 @@
 namespace yake {
 namespace ent {
 
-	typedef Deque<ObjectClassId> ObjectClassIdList;
-	class YAKE_ENT_API sim
+	typedef ::yake::object::ObjectManager<Object> ObjectManager;
+
+	class YAKE_ENT_API Simulation
 	{
 	public:
-		sim(scripting::IScriptingSystem& scriptingSystem,
-			const real ticksPerSecond = 10.f,
-			graphics::IWorld* pGWorld = 0,
-			audio::IWorld* pAWorld = 0,
-			physics::IWorld* pPWorld = 0);
-		~sim();
+		Simulation();
+		~Simulation();
+
+		// registration / setup
+
 		void setTicksPerSecond(const real ticksPerSecond);
 		simtime getTime() const;
 		real getTimeAsSeconds() const;
-		void tick(const real timeElapsed);
-		void regObjectClass( object_class* theClass );
+
+		/** Register a class. */
+		template<class T>
+		void regClass(const String& clsName)
+		{
+			ClassId clsId =
+				mObjMgr.registerClass(	clsName,
+												boost::bind(&object_class::createInstance,T::getClass(),_1),
+												boost::bind(&object_class::destroyInstance,T::getClass(),_1)).second;
+		}
+		/** VM binders can be used to bind features the entity's VMs. */
 		void addEntityVMBinder( scripting::IBinder* pBinder, const bool bTransferOwnership = true );
-		Entity* createEntity(	const ObjectClassId& id, 
-								const StringPairVector& components,
-								const StringVector& scriptFiles );
-		void destroyEntity( Entity* pEnt );
-		void removeAndDestroyAll();
 
-		graphics::IWorld* getGraphicsWorld() const
-		{ return mpGWorld; }
+		// start / stop / run
 
-		// temp
-		static sim& getSim();
-		
-		msg::MessageManager& getMessageMgr();
+		bool start(	scripting::IScriptingSystem* pScripting = 0,
+						graphics::IWorld* pGWorld = 0,
+						audio::IWorld* pAWorld = 0,
+						physics::IWorld* pPWorld = 0);
+		void stop();
 
-		// post message to another object
+		void tick(const real timeElapsed);
+
+		// object/entity management
+
+		/**
+			@Remarks "scriptFiles" and "components" are ignored for non-Entity derived objects.
+		*/
+		Object* createObject(const String& clsName,
+									const StringPairVector& components = StringPairVector(),
+									const StringVector& scriptFiles = StringVector());
+		Object* createObject(const ClassId clsId,
+									const StringPairVector& components = StringPairVector(),
+									const StringVector& scriptFiles = StringVector());
+		void destroyObject( Object* );
+		void removeAndDestroyObjects();
+
+		// messaging
+
 		void postMessage(ObjectMessage* pMessage, Object* target);
 
-		Event& getEvent_onEntitySpawned();
+		// events
+
 		Event& getEvent_onEntityVMCreated();
+		Event& getEvent_onEntityVMSpawned();
 
-		const ObjectClassIdList& getRegisteredObjectClasses() const;
+		// @fixme temporary accessors
+
+		static Simulation& getSim();
+		graphics::IWorld* getGraphicsWorld() const
+		{ return mpGWorld; }
 	private:
 		scripting::IVM* createEntityVM();
 	private:
-		typedef std::map<ObjectClassId,object_class*> ObjectClassMap;
-		typedef std::list<SharedPtr<Object> > ObjectList;
-		typedef std::map<ObjectClassId,uint16> ClassIdMap;
+		ObjectManager					mObjMgr;
+		msg::MessageManager			mMsgMgr;
+		typedef std::list<Object*> ObjectList;
+		ObjectList						mObjs;
 
-		ObjectClassMap		mObjectClasses;
-		ObjectClassIdList	mObjectClassIds;
-		ObjectList			mObjects;
-		ClassIdMap			mNumericClassIds;
-		uint16				mLastNumericClassId;
+		scripting::IScriptingSystem*	mpScripting;
 
-		real				mSimTimeInSecs;
-		simtime				mSimTime;
-		real				mTickTime;
-		real				mCurrTickTime;
+		// timing
+		real								mSimTimeInSecs;
+		simtime							mSimTime;
+		real								mTickTime;
+		real								mCurrTickTime;
 
-		Event				mEvtEntitySpawned;
-		Event				mEvtEntityVMCreated;
-		scripting::IScriptingSystem&	mScripting;
-
-		typedef SharedPtr<scripting::IBinder> BinderPtr;
-		typedef std::deque<BinderPtr> BinderList;
+		// scripting binders
+		typedef SharedPtr<scripting::IBinder> BinderSharedPtr;
+		typedef std::deque<BinderSharedPtr> BinderList;
 		typedef std::deque<scripting::IBinder*> PureBinderPtrList;
-		BinderList			mBinders;
-		PureBinderPtrList	mNonOwnedBinders;
+		BinderList						mBinders;
+		PureBinderPtrList				mNonOwnedBinders;
 
-		graphics::IWorld*	mpGWorld;
-		audio::IWorld*		mpAWorld;
-		physics::IWorld*	mpPWorld;
+		// graphics / audio / physics ....
+		graphics::IWorld*				mpGWorld;
+		audio::IWorld*					mpAWorld;
+		physics::IWorld*				mpPWorld;
 
-		msg::MessageManager	mMsgMgr;
+		// events
+		Event								mEvtEntityVMSpawned;
+		Event								mEvtEntityVMCreated;
 	};
 
 } // namespace yake

Modified: trunk/yake/yapp/ent/yakeTrigger.h
===================================================================
--- trunk/yake/yapp/ent/yakeTrigger.h	2006-01-15 18:18:18 UTC (rev 1177)
+++ trunk/yake/yapp/ent/yakeTrigger.h	2006-01-15 18:43:31 UTC (rev 1178)
@@ -134,7 +134,7 @@
 	};
 	class YAKE_ENT_API Trigger : public Entity
 	{
-		YAKE_DECLARE_ENTITY(Trigger)
+		YAKE_DECLARE_ENTITY(Trigger,"Trigger")
 	public:
 		OBJECT_PROPS_BEGIN(Trigger)
 			OBJECT_PROP("position", Point3, Point3(0,0,0))



From codeandroid at berlios.de  Sun Jan 15 19:44:02 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:44:02 +0100
Subject: [Yake-svn] r1179 - trunk/yake/yapp/plugins/entLua
Message-ID: <200601151844.k0FIi27s027600@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:43:52 +0100 (Sun, 15 Jan 2006)
New Revision: 1179

Modified:
   trunk/yake/yapp/plugins/entLua/yakeEntLua.h
   trunk/yake/yapp/plugins/entLua/yakeLuaBinder.h
Log:
refactored to use yake::object

Modified: trunk/yake/yapp/plugins/entLua/yakeEntLua.h
===================================================================
--- trunk/yake/yapp/plugins/entLua/yakeEntLua.h	2006-01-15 18:43:31 UTC (rev 1178)
+++ trunk/yake/yapp/plugins/entLua/yakeEntLua.h	2006-01-15 18:43:52 UTC (rev 1179)
@@ -33,7 +33,7 @@
 namespace ent {
 namespace lua {
 
-	YAKE_ENTLUA_API bool bindSim( sim& theSim );
+	YAKE_ENTLUA_API bool bindSim( Simulation& theSim );
 
 } // namespace lua
 } // namespace ent

Modified: trunk/yake/yapp/plugins/entLua/yakeLuaBinder.h
===================================================================
--- trunk/yake/yapp/plugins/entLua/yakeLuaBinder.h	2006-01-15 18:43:31 UTC (rev 1178)
+++ trunk/yake/yapp/plugins/entLua/yakeLuaBinder.h	2006-01-15 18:43:52 UTC (rev 1179)
@@ -33,7 +33,7 @@
 namespace ent {
 namespace lua {
 
-	YAKE_ENTLUA_API ent::EventCallback* createEntitySpawnedCb();
+	YAKE_ENTLUA_API ent::EventCallback* createEntityVMSpawnedCb();
 	YAKE_ENTLUA_API ent::EventCallback* createEntityVMCreatedCb();
 
 	struct YAKE_ENTLUA_API Binder : public scripting::IBinder



From codeandroid at berlios.de  Sun Jan 15 19:44:42 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:44:42 +0100
Subject: [Yake-svn] r1180 - trunk/yake/src/yapp/ent
Message-ID: <200601151844.k0FIigPE027767@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:44:38 +0100 (Sun, 15 Jan 2006)
New Revision: 1180

Modified:
   trunk/yake/src/yapp/ent/yakeObject.cpp
   trunk/yake/src/yapp/ent/yakeSim.cpp
Log:
refactored to use yake::object

Modified: trunk/yake/src/yapp/ent/yakeObject.cpp
===================================================================
--- trunk/yake/src/yapp/ent/yakeObject.cpp	2006-01-15 18:43:52 UTC (rev 1179)
+++ trunk/yake/src/yapp/ent/yakeObject.cpp	2006-01-15 18:44:38 UTC (rev 1180)
@@ -34,17 +34,30 @@
 namespace yake {
 namespace ent {
 
-	Object* object_class::createInstance() const
+	Object* object_class::createInstance(const ObjectId& id) const
 	{
 		YAKE_ASSERT( !mCreatorFn.empty() )( mName ).debug("Class has no registered creation function!");
 		if (mCreatorFn.empty())
 			return 0;
-		return mCreatorFn();
+		return mCreatorFn(id);
 	}
 	const ObjectCreatorFn& object_class::getCreatorFn() const
 	{
 		return mCreatorFn;
 	}
+	void object_class::destroyInstance(Object* obj) const
+	{
+		if (!obj)
+			return;
+		YAKE_ASSERT( !mDestroyFn.empty() )( mName ).debug("Class has no registered destruction function!");
+		if (mDestroyFn.empty())
+			return;
+		return mDestroyFn(obj);
+	}
+	const ObjectDestroyFn& object_class::getDestroyFn() const
+	{
+		return mDestroyFn;
+	}
 	void object_class::addParent(object_class* parent)
 	{
 		YAKE_ASSERT( parent );
@@ -82,14 +95,15 @@
 
 	DEFINE_OBJECT_ROOT( Object )
 
-	Object::Object() : mEvtSpawn("onSpawn"), mEvtTick("onTick")
+	Object::Object() : mId(ObjectId::kNull), mEvtSpawn("onSpawn"), mEvtTick("onTick")
 	{
-		static ObjectId lastId = 1;
-		mId = lastId++;
-
 		regEvent(&mEvtSpawn);
 		regEvent(&mEvtTick);
 	}
+	void Object::setId(const ObjectId& id)
+	{
+		mId = id;
+	}
 	void Object::initialise(object_creation_context& creationCtx)
 	{
 		onInitialise(creationCtx);
@@ -133,6 +147,10 @@
 	{
 		return mId;
 	}
+	ObjectId Object::id() const
+	{
+		return mId;
+	}
 	Event* Object::getEventByName(const String& name) const
 	{
 		EventMap::const_iterator itFind = mEvents.find(name);

Modified: trunk/yake/src/yapp/ent/yakeSim.cpp
===================================================================
--- trunk/yake/src/yapp/ent/yakeSim.cpp	2006-01-15 18:43:52 UTC (rev 1179)
+++ trunk/yake/src/yapp/ent/yakeSim.cpp	2006-01-15 18:44:38 UTC (rev 1180)
@@ -38,74 +38,57 @@
 namespace ent {
 
 	namespace private_ {
-		sim* g_sim = 0;
+		Simulation* g_sim = 0;
 	}
-	sim& sim::getSim()
+	Simulation& Simulation::getSim()
 	{
 		return *(private_::g_sim);
 	}
 
-	sim::sim(	scripting::IScriptingSystem& scriptingSystem,
-				const real ticksPerSecond, 
-				graphics::IWorld* pGWorld /*= 0*/,
-				audio::IWorld* pAWorld /*= 0*/,
-				physics::IWorld* pPWorld /*= 0*/
-			) : 
+	Simulation::Simulation() :
+		mpGWorld(0),
+		mpAWorld(0),
+		mpPWorld(0),
+		mpScripting(0),
+		mEvtEntityVMSpawned("onEntitySpawned"),
+		mEvtEntityVMCreated("onEntityVMCreated"),
 		mSimTime(0),
-		mpGWorld(pGWorld),
-		mpAWorld(pAWorld),
-		mpPWorld(pPWorld),
-		mScripting(scriptingSystem),
-		mEvtEntitySpawned("onEntitySpawned"),
-		mEvtEntityVMCreated("onEntityVMCreated"),
 		mTickTime(0.1f),
 		mCurrTickTime(0.f),
-		mSimTimeInSecs(0.f),
-		mLastNumericClassId(1)
+		mSimTimeInSecs(0.f)
 	{
+	}
+	Simulation::~Simulation()
+	{
+		stop();
+	}
+	bool Simulation::start(	scripting::IScriptingSystem* pScripting /*= 0*/,
+					graphics::IWorld* pGWorld /*= 0*/,
+					audio::IWorld* pAWorld /*= 0*/,
+					physics::IWorld* pPWorld /*= 0*/)
+	{
 		private_::g_sim = this;
-
-		if (ticksPerSecond > 0)
-			mTickTime = 1.f / ticksPerSecond;
+		mpScripting = pScripting;
+		mpGWorld = pGWorld;
+		mpAWorld = pAWorld;
+		mpPWorld = pPWorld;
+		return true;
 	}
-	sim::~sim()
+	void Simulation::stop()
 	{
+		removeAndDestroyObjects();
 		mNonOwnedBinders.clear();
 		mBinders.clear();
-		mObjectClasses.clear();
-		mObjectClassIds.clear();
-		mObjects.clear();
 		private_::g_sim = 0;
 	}
-	void sim::setTicksPerSecond(const real ticksPerSecond)
+	void Simulation::tick(const real timeElapsed)
 	{
-		if (ticksPerSecond > 0)
-			mTickTime = 0.1f;
-	}
-	Event& sim::getEvent_onEntitySpawned()
-	{
-		return mEvtEntitySpawned;
-	}
-	Event& sim::getEvent_onEntityVMCreated()
-	{
-		return mEvtEntityVMCreated;
-	}
-	simtime sim::getTime() const
-	{
-		return mSimTime;
-	}
-	real sim::getTimeAsSeconds() const
-	{
-		return mSimTimeInSecs;
-	}
-	void sim::tick(const real timeElapsed)
-	{
 		mCurrTickTime += timeElapsed;
 		while (mCurrTickTime > 0)
 		{
 			mMsgMgr.execute();
 
-			ConstVectorIterator<ObjectList> itEntity( mObjects );
+			ConstVectorIterator<ObjectList> itEntity( mObjs );
 			while (itEntity.hasMoreElements())
 			{
 				itEntity.getNext()->tick();
@@ -117,37 +100,115 @@
 			mSimTimeInSecs += mTickTime;
 		}
 	}
-	void sim::removeAndDestroyAll()
+	Object* Simulation::createObject(const String& clsName,
+												const StringPairVector& components,
+												const StringVector& scriptFiles )
 	{
-		mObjects.clear();
+		std::pair<object::ResultCode,ClassId> clsId = mObjMgr.getClassId( clsName );
+		YAKE_ASSERT( clsId.first == object::RC_OK );
+		if (clsId.first != object::RC_OK)
+			return 0;
+		return createObject( clsId.second, components, scriptFiles );
 	}
-	void sim::regObjectClass( object_class* theClass )
+	Object* Simulation::createObject(const ClassId clsId,
+												const StringPairVector& components,
+												const StringVector& scriptFiles)
 	{
-		YAKE_ASSERT( theClass ).debug("Trying to register 0 class!");
-		if (!theClass)
-			return;
-		const ObjectClassId id = theClass->getName();
-		mObjectClassIds.push_back( id );
-		mObjectClasses[ id ] = theClass;
-		mNumericClassIds[ id ] = mLastNumericClassId++;
+		Object* pObject = mObjMgr.createObject( clsId );
+		if (!pObject)
+			return 0;
+		Entity* pEntity = Entity::cast(pObject);
+
+		if (!pEntity)
+			mObjs.push_back( pObject );
+		else
+		{
+
+			// create VMs & load & execute entity scripts
+			const size_t numVMs = (scriptFiles.size() > 0) ? scriptFiles.size() : 1; // at least one VM
+			ParamList params;
+			params["object"] = pObject;
+			params["entity"] = pEntity;
+			if (mpScripting)
+			{
+				for (size_t i=0; i<numVMs; ++i)
+				{
+					// create VM
+					scripting::IVM* pVM = createEntityVM();
+					pEntity->addVM( pVM );
+
+					// fire "entity VM created"
+					params["vm"] = pVM;
+					mEvtEntityVMCreated.fire(params);
+
+					// load & execute entity script
+					if (i <= scriptFiles.size())
+					{
+						const String scriptFile = scriptFiles.at(i);
+						if (scriptFile.empty())
+							continue;
+						AutoPtr<scripting::IScript> pScript( mpScripting->createScriptFromFile(scriptFile) );
+						YAKE_ASSERT( pScript.get() );
+						pVM->execute( pScript.get() );
+					} // for each script
+				} // for each VM
+			} // if mpScripting
+
+			// create components
+			ConstVectorIterator<StringPairVector> itC( components );
+			while (itC.hasMoreElements())
+			{
+				const StringPair stringPair = itC.getNext();
+				pEntity->addComponent( stringPair.first, create<EntityComponent>( stringPair.second, *pEntity ) );
+			}
+
+			// minimal first time setup
+			object_creation_context ctx;
+			ctx.mpGWorld = mpGWorld;
+			ctx.mpAWorld = mpAWorld;
+			ctx.mpPWorld = mpPWorld;
+			pEntity->initialise( ctx );
+
+			// store entity & fire events
+			mObjs.push_back( pObject );
+
+			// fire "entity spawned" for each VM
+
+			params.clear();
+			params["object"] = pObject;
+			params["entity"] = pEntity;
+			for (size_t i=0; i<pEntity->getVMCount(); ++i)
+			{
+				params["vm"] = pEntity->getVM(i);
+				mEvtEntityVMSpawned.fire(params);
+			}
+
+			// spawn entity itself
+
+			pEntity->spawn();
+
+			ObjectMessage* pMsg = pEntity->createMessage( MSGID_EntitySpawned );
+			pMsg->set("entity", pEntity );
+			mMsgMgr.postMessage( pMsg );
+		}
+		return pObject;
 	}
-	const ObjectClassIdList& sim::getRegisteredObjectClasses() const
+	void Simulation::addEntityVMBinder( scripting::IBinder* pBinder, const bool bTransferOwnership )
 	{
-		return mObjectClassIds;
-	}
-	void sim::addEntityVMBinder( scripting::IBinder* pBinder, const bool bTransferOwnership )
-	{
 		YAKE_ASSERT( pBinder );
 		if (!pBinder)
 			return;
 		if (bTransferOwnership)
-			mBinders.push_back( BinderPtr( pBinder ) );
+			mBinders.push_back( BinderSharedPtr( pBinder ) );
 		else
 			mNonOwnedBinders.push_back( pBinder );
 	}
-	scripting::IVM* sim::createEntityVM()
+	scripting::IVM* Simulation::createEntityVM()
 	{
-		scripting::IVM* pVM = mScripting.createVM();
+		YAKE_ASSERT( mpScripting );
+		if (!mpScripting)
+			return 0;
+		scripting::IVM* pVM = mpScripting->createVM();
 		YAKE_ASSERT( pVM );
 
 		// bind complete entity system to VM
@@ -170,103 +231,29 @@
 
 		return pVM;
 	}
-	Entity* sim::createEntity( const ObjectClassId& id, const StringPairVector& components, const StringVector& scriptFiles )
+	void Simulation::destroyObject( Object* obj )
 	{
-		ObjectClassMap::const_iterator itFind = mObjectClasses.find( id );
-		if (itFind == mObjectClasses.end())
+		if (!obj)
+			return;
+		// remove from list
+		ObjectList::iterator itFind = std::find( mObjs.begin(), mObjs.end(), obj );
+		if (itFind != mObjs.end())
+			mObjs.erase( itFind );
+		// destroy
+		mObjMgr.destroyObject( obj );
+	}
+	void Simulation::removeAndDestroyObjects()
+	{
+		ConstDequeIterator<ObjectList> itObj( mObjs );
+		while (itObj.hasMoreElements())
 		{
-			std::stringstream msg;
-			msg << "Could not find creator for object class: " << id.c_str();
-			YAKE_EXCEPT(msg.str());
+			Object* obj = itObj.getNext();
+			mObjMgr.destroyObject(obj);
 		}
-		YAKE_ASSERT( itFind->second );
-		Object* pObject = itFind->second->createInstance();
-		Entity* pEntity = Entity::cast( pObject );
-		YAKE_ASSERT( pEntity ).debug("The created object is an Object but not an Entity!");
-		if (!pEntity)
-		{
-			delete pObject;
-			return 0;
-		}
-
-		// create VMs & load & execute entity scripts
-		const size_t numVMs = (scriptFiles.size() > 0) ? scriptFiles.size() : 1; // at least one VM
-		ParamList params;
-		params["object"] = pObject;
-		params["entity"] = pEntity;
-		for (size_t i=0; i<numVMs; ++i)
-		{
-			// create VM
-			scripting::IVM* pVM = createEntityVM();
-			pEntity->addVM( pVM );
-
-			// fire "entity VM created"
-			params["vm"] = pVM;
-			mEvtEntityVMCreated.fire(params);
-
-			// load & execute entity script
-			if (i <= scriptFiles.size())
-			{
-				const String scriptFile = scriptFiles.at(i);
-				if (scriptFile.empty())
-					continue;
-				AutoPtr<scripting::IScript> pScript( mScripting.createScriptFromFile(scriptFile) );
-				YAKE_ASSERT( pScript.get() );
-				pVM->execute( pScript.get() );
-			}
-		}
-
-		// create components
-		ConstVectorIterator<StringPairVector> itC( components );
-		while (itC.hasMoreElements())
-		{
-			const StringPair stringPair = itC.getNext();
-			pEntity->addComponent( stringPair.first, create<EntityComponent>( stringPair.second, *pEntity ) );
-		}
-
-		// minimal first time setup
-		object_creation_context ctx;
-		ctx.mpGWorld = mpGWorld;
-		ctx.mpAWorld = mpAWorld;
-		ctx.mpPWorld = mpPWorld;
-		pEntity->initialise( ctx );
-
-		// store entity & fire events
-		mObjects.push_back( SharedPtr<Entity>(pEntity) );
-
-		// fire "entity spawned"
-
-		params.clear();
-		params["object"] = pObject;
-		params["entity"] = pEntity;
-		for (size_t i=0; i<pEntity->getVMCount(); ++i)
-		{
-			params["vm"] = pEntity->getVM(i);
-			mEvtEntitySpawned.fire(params);
-		}
-
-		// spawn entity itself
-
-		pEntity->spawn();
-
-		ObjectMessage* pMsg = pEntity->createMessage( MSGID_EntitySpawned );
-		pMsg->set("entity", pEntity );
-		mMsgMgr.postMessage( pMsg );
-
-		return pEntity;
+		mObjs.clear();
 	}
-	bool operator == (const SharedPtr<Object>& lhs, const Object* rhs)
-	{ return lhs.get() == rhs; }
-	void sim::destroyEntity( Entity* pEnt )
+	void Simulation::postMessage(ObjectMessage* pMessage, Object* target)
 	{
-		if (!pEnt)
-			return;
-		ObjectList::iterator itFind = std::find( mObjects.begin(), mObjects.end(), pEnt );
-		if (itFind != mObjects.end())
-			mObjects.erase( itFind );
-	}
-	void sim::postMessage(ObjectMessage* pMessage, Object* target)
-	{
 		YAKE_ASSERT( pMessage ).warning("null message");
 		if (!pMessage)
 			return;
@@ -278,6 +265,27 @@
 		// forward/post
 		target->postMessage( pMessage );
 	}
-
+	void Simulation::setTicksPerSecond(const real ticksPerSecond)
+	{
+		YAKE_ASSERT( ticksPerSecond > 0. );
+		if (ticksPerSecond > 0.)
+			mTickTime = 1. / ticksPerSecond;
+	}
+	Event& Simulation::getEvent_onEntityVMSpawned()
+	{
+		return mEvtEntityVMSpawned;
+	}
+	Event& Simulation::getEvent_onEntityVMCreated()
+	{
+		return mEvtEntityVMCreated;
+	}
+	simtime Simulation::getTime() const
+	{
+		return mSimTime;
+	}
+	real Simulation::getTimeAsSeconds() const
+	{
+		return mSimTimeInSecs;
+	}
 } // namespace yake
 } // namespace ent



From codeandroid at berlios.de  Sun Jan 15 19:45:15 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:45:15 +0100
Subject: [Yake-svn] r1181 - trunk/yake/src/yapp/plugins/entLua
Message-ID: <200601151845.k0FIjFXp027956@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:45:02 +0100 (Sun, 15 Jan 2006)
New Revision: 1181

Modified:
   trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp
Log:
refactored to use yake::object

Modified: trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp
===================================================================
--- trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp	2006-01-15 18:44:38 UTC (rev 1180)
+++ trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp	2006-01-15 18:45:02 UTC (rev 1181)
@@ -36,9 +36,9 @@
 namespace ent {
 namespace lua {
 
-	struct EntitySpawnedCb : public ent::EventCallback
+	struct EntityVMSpawnedCb : public ent::EventCallback
 	{
-		EntitySpawnedCb() {}
+		EntityVMSpawnedCb () {}
 		virtual void onFire(const ent::EventData& evtData)
 		{
 			scripting::IVM* pVM = 0;
@@ -71,9 +71,9 @@
 			}
 		}
 	};
-	ent::EventCallback* createEntitySpawnedCb()
+	ent::EventCallback* createEntityVMSpawnedCb()
 	{
-		return new EntitySpawnedCb();
+		return new EntityVMSpawnedCb();
 	}
 	struct EntityVMCreatedCb : public ent::EventCallback
 	{
@@ -249,7 +249,7 @@
 		if (!pModel)
 			return;
 		static_cast<PawnVisual*>(pVisual)->setGraphical( pModel );
-		pModel->fromDotScene( fn, sim::getSim().getGraphicsWorld() );
+		pModel->fromDotScene( fn, Simulation::getSim().getGraphicsWorld() );
 	}
 	void entity_machineChangeTo(Entity* pEntity, const String& machine, const String& targetState)
 	{
@@ -262,7 +262,7 @@
 			return;
 		pMsg->set("machine",machine);
 		pMsg->set("to",targetState);
-		sim::getSim().postMessage( pMsg, pEntity );
+		Simulation::getSim().postMessage( pMsg, pEntity );
 	}
 	void entity_machineChangeTo_default(Entity* pEntity, const String& targetState)
 	{
@@ -316,17 +316,23 @@
 
 		module( pL->getLuaState() )
 		[
-			class_<sim>("sim")
-				.def("getTime", &sim::getTimeAsSeconds)
+			class_<ObjectId>("ObjectId")
+				.def("classId", &ObjectId::classId)
+				.def("serialNo", &ObjectId::serialNo)
 		];
 		module( pL->getLuaState() )
 		[
+			class_<Simulation>("Simulation")
+				.def("getTime", &Simulation::getTimeAsSeconds)
+		];
+		module( pL->getLuaState() )
+		[
 			class_<EntityMachine>("EntityMachine")
 				.def("getCurrentState", &EntityMachine::getCurrentStateId)
 		];
 		module( pL->getLuaState() )
 		[
-			class_<Event>("event")
+			class_<Event>("Event")
 				.def("getName", &Event::getName)
 		];
 		module( pL->getLuaState() )
@@ -374,7 +380,7 @@
 		];
 		module( pL->getLuaState() )
 		[
-			def("getSim",&sim::getSim),
+			def("getSim",&Simulation::getSim),
 			def("createEvent",&createEvent),
 			def("fireEvent",&fireEvent),
 			def("rand",&randReal)
@@ -405,7 +411,7 @@
 	}
 
 	//
-	bool bindSim( sim& theSim )
+	bool bindSim( Simulation& theSim )
 	{
 		//Binder* pBinder = create<scripting::IBinder>("yake::ent::luabinder");
 		Binder* pBinder = new Binder();
@@ -417,7 +423,7 @@
 		//mSim.addEntityVMBinder( new yake::ent::lua::MathBinder() );
 
 		// add special callback (no direct deps on lua via interface!)
-		theSim.getEvent_onEntitySpawned().addCallback( ent::lua::createEntitySpawnedCb() );
+		theSim.getEvent_onEntityVMSpawned().addCallback( ent::lua::createEntityVMSpawnedCb() );
 		theSim.getEvent_onEntityVMCreated().addCallback( ent::lua::createEntityVMCreatedCb() );
 		return true;
 	}



From codeandroid at berlios.de  Sun Jan 15 19:45:37 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:45:37 +0100
Subject: [Yake-svn] r1182 - trunk/yake/src/yapp/samples/misc/scripted
Message-ID: <200601151845.k0FIjbxH028231@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:45:33 +0100 (Sun, 15 Jan 2006)
New Revision: 1182

Modified:
   trunk/yake/src/yapp/samples/misc/scripted/yakeDemo.cpp
Log:
refactored to use yake::object

Modified: trunk/yake/src/yapp/samples/misc/scripted/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/misc/scripted/yakeDemo.cpp	2006-01-15 18:45:02 UTC (rev 1181)
+++ trunk/yake/src/yapp/samples/misc/scripted/yakeDemo.cpp	2006-01-15 18:45:33 UTC (rev 1182)
@@ -63,24 +63,31 @@
 		mScene->fromDotScene( mSceneFilename, mGWorld.get() );
 	}
 
-	void initSim(ent::sim& theSim)
+	void initSim(ent::Simulation& theSim)
 	{
-		// register entities with a specific sim
-		ent::Pawn::reg( theSim );
-		ent::Light::reg( theSim );
+		//@fixme: static initialization !?
+		ent::Entity::init();
+		ent::Pawn::init();
+		ent::Light::init();
 
 		// add Lua binder
 		ent::lua::bindSim( theSim );
 
+		// register entities with a specific sim
+		theSim.regClass<ent::Pawn>("Pawn");
+		theSim.regClass<ent::Light>("Light");
+
 		// init done!
 
 		// create entities
-		ent::Entity* e1 = theSim.createEntity("Pawn", 
+		ent::Entity* e1 = ent::Entity::cast( 
+											theSim.createObject("Pawn", 
 												MakeStringPairVector() << StringPair("visual","pawn.visual"),
-												MakeStringVector() << "../../media/samples/scripted/ent_pawn_basic.lua");
-		ent::Entity* eLight1 = theSim.createEntity("Light", 
-													MakeStringPairVector() << StringPair("visual","light.visual"), 
-													MakeStringVector() << "../../media/samples/scripted/ent_light.lua");
+												MakeStringVector() << "../../media/samples/scripted/ent_pawn_basic.lua") );
+		ent::Entity* eLight1 = ent::Entity::cast( 
+											theSim.createObject("Light", 
+												MakeStringPairVector() << StringPair("visual","light.visual"), 
+												MakeStringVector() << "../../media/samples/scripted/ent_light.lua") );
 		eLight1->setProperty( "position", Vector3(50,100,0) );
 		eLight1->setProperty( "diffuseColour", Color(1,1,1,1) );
 }
@@ -119,7 +126,8 @@
 		setupScene();
 
 		// create sim
-		ent::sim theSim( getScriptingSystem(), 10.f, mGWorld.get() );
+		ent::Simulation theSim;
+		theSim.start( &getScriptingSystem(), mGWorld.get() );
 		initSim(theSim);
 
 		// main loop
@@ -165,7 +173,7 @@
 			}
 		}
 
-		theSim.removeAndDestroyAll();
+		theSim.stop();
 
 		//YAKE_SAFE_DELETE( mScene );	
 



From codeandroid at berlios.de  Sun Jan 15 19:46:42 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:46:42 +0100
Subject: [Yake-svn] r1183 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200601151846.k0FIkgbW029071@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:46:40 +0100 (Sun, 15 Jan 2006)
New Revision: 1183

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeAvatar.cpp
Log:


Modified: trunk/yake/src/yake/plugins/physicsODE/OdeAvatar.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeAvatar.cpp	2006-01-15 18:45:33 UTC (rev 1182)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeAvatar.cpp	2006-01-15 18:46:40 UTC (rev 1183)
@@ -79,7 +79,7 @@
 		mDimensions = desc.dimensions;
 
 		mHeightAboveGround = mDimensions.y*real(0.75);
-		mHeightAboveGroundDuck = 0.5 * mHeightAboveGround;
+		mHeightAboveGroundDuck = real(0.5) * mHeightAboveGround;
 
 		mSphereRadius = mDimensions.x * real(0.5);
 		mSphereOffset = Vector3(0,mHeightAboveGround,0);



From codeandroid at berlios.de  Sun Jan 15 19:49:17 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 19:49:17 +0100
Subject: [Yake-svn] r1184 - trunk/yake/yapp/statemachine
Message-ID: <200601151849.k0FInHcE030656@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 19:49:16 +0100 (Sun, 15 Jan 2006)
New Revision: 1184

Modified:
   trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h
Log:
fixed mantis issue 0000001

Modified: trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h
===================================================================
--- trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h	2006-01-15 18:46:40 UTC (rev 1183)
+++ trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h	2006-01-15 18:49:16 UTC (rev 1184)
@@ -299,8 +299,11 @@
 		{
 			typename TransitionMap::const_iterator itFind = mTransitions.find( idPair );
 			if (itFind == mTransitions.end())
-				return SharedTransitionPtr();
-			return itFind->second;
+			{
+				return false;
+			}
+			rTansition = itFind->second;
+			return true;
 		}
 		bool _hasTransition( const StateIdPair& idPair )
 		{



From codeandroid at berlios.de  Sun Jan 15 21:26:52 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 21:26:52 +0100
Subject: [Yake-svn] r1185 - trunk/yake/scripts/msvc8
Message-ID: <200601152026.k0FKQqae006381@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 21:26:52 +0100 (Sun, 15 Jan 2006)
New Revision: 1185

Modified:
   trunk/yake/scripts/msvc8/yake.sln
Log:
added yake::object

Modified: trunk/yake/scripts/msvc8/yake.sln
===================================================================
--- trunk/yake/scripts/msvc8/yake.sln	2006-01-15 18:49:16 UTC (rev 1184)
+++ trunk/yake/scripts/msvc8/yake.sln	2006-01-15 20:26:52 UTC (rev 1185)
@@ -272,6 +272,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleCmdrMayhem", "samples\misc\sampleCmdrMayhem.vcproj", "{1CE9D735-3119-4E08-B4A0-F4DAD35FC8D5}"
 EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "object", "object.vcproj", "{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}"
+EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Win32 = Debug|Win32
@@ -492,6 +494,10 @@
 		{1CE9D735-3119-4E08-B4A0-F4DAD35FC8D5}.Debug|Win32.Build.0 = Debug|Win32
 		{1CE9D735-3119-4E08-B4A0-F4DAD35FC8D5}.Release|Win32.ActiveCfg = Release|Win32
 		{1CE9D735-3119-4E08-B4A0-F4DAD35FC8D5}.Release|Win32.Build.0 = Release|Win32
+		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Debug|Win32.ActiveCfg = Debug|Win32
+		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Debug|Win32.Build.0 = Debug|Win32
+		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Release|Win32.ActiveCfg = Release|Win32
+		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Release|Win32.Build.0 = Release|Win32
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE



From codeandroid at berlios.de  Sun Jan 15 22:36:12 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 22:36:12 +0100
Subject: [Yake-svn] r1186 - in trunk/yake/scripts/msvc8/samples: . net
Message-ID: <200601152136.k0FLaCZf015042@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 22:36:12 +0100 (Sun, 15 Jan 2006)
New Revision: 1186

Added:
   trunk/yake/scripts/msvc8/samples/net/
   trunk/yake/scripts/msvc8/samples/net/sampleRoClient.vcproj
   trunk/yake/scripts/msvc8/samples/net/sampleRoServer.vcproj
Log:
initial revision

Added: trunk/yake/scripts/msvc8/samples/net/sampleRoClient.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/samples/net/sampleRoClient.vcproj	2006-01-15 20:26:52 UTC (rev 1185)
+++ trunk/yake/scripts/msvc8/samples/net/sampleRoClient.vcproj	2006-01-15 21:36:12 UTC (rev 1186)
@@ -0,0 +1,233 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="8,00"
+	Name="sampleRoClient"
+	ProjectGUID="{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}"
+	RootNamespace="sampleDotScene"
+	Keyword="Win32Proj"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="../../../../common/bin/debug"
+			IntermediateDirectory="../../../../common/obj/debug/$(ProjectName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_CONSOLE"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/samples/net/roclient/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib scripting.lib"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="../../../../common/lib/debug;../../../../dependencies/lib"
+				GenerateDebugInformation="true"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="1"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="../../../../common/bin/release"
+			IntermediateDirectory="../../../../common/obj/release/$(ProjectName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
+				RuntimeLibrary="2"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/samples/net/roclient/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib scripting.lib"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="../../../../common/lib/release;../../../../dependencies/lib"
+				GenerateDebugInformation="false"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="inc"
+			>
+			<File
+				RelativePath="..\..\..\..\yake\samples\net\roclient\pch.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\..\yake\samples\net\roclient\ROClient.h"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="src"
+			>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\net\roclient\demo.cpp"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\net\roclient\pch.cpp"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\net\roclient\ROClient.cpp"
+				>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>

Added: trunk/yake/scripts/msvc8/samples/net/sampleRoServer.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/samples/net/sampleRoServer.vcproj	2006-01-15 20:26:52 UTC (rev 1185)
+++ trunk/yake/scripts/msvc8/samples/net/sampleRoServer.vcproj	2006-01-15 21:36:12 UTC (rev 1186)
@@ -0,0 +1,233 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="8,00"
+	Name="sampleRoServer"
+	ProjectGUID="{547611C2-43E2-4678-B8E9-92CF69770C40}"
+	RootNamespace="sampleDotScene"
+	Keyword="Win32Proj"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="../../../../common/bin/debug"
+			IntermediateDirectory="../../../../common/obj/debug/$(ProjectName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_CONSOLE"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/samples/net/roserver/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib scripting.lib"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="../../../../common/lib/debug;../../../../dependencies/lib"
+				GenerateDebugInformation="true"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="1"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="../../../../common/bin/release"
+			IntermediateDirectory="../../../../common/obj/release/$(ProjectName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
+				RuntimeLibrary="2"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/samples/net/roserver/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib scripting.lib"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="../../../../common/lib/release;../../../../dependencies/lib"
+				GenerateDebugInformation="false"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="inc"
+			>
+			<File
+				RelativePath="..\..\..\..\yake\samples\net\roserver\pch.h"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\..\yake\samples\net\roserver\ROServer.h"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="src"
+			>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\net\roserver\demo.cpp"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\net\roserver\pch.cpp"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\net\roserver\ROServer.cpp"
+				>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>



From codeandroid at berlios.de  Sun Jan 15 22:36:43 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 22:36:43 +0100
Subject: [Yake-svn] r1187 - trunk/yake/scripts/msvc8
Message-ID: <200601152136.k0FLahjj015137@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 22:36:43 +0100 (Sun, 15 Jan 2006)
New Revision: 1187

Modified:
   trunk/yake/scripts/msvc8/yake.sln
Log:
added net, roServer, roClient projects

Modified: trunk/yake/scripts/msvc8/yake.sln
===================================================================
--- trunk/yake/scripts/msvc8/yake.sln	2006-01-15 21:36:12 UTC (rev 1186)
+++ trunk/yake/scripts/msvc8/yake.sln	2006-01-15 21:36:43 UTC (rev 1187)
@@ -274,6 +274,12 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "object", "object.vcproj", "{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}"
 EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "net", "net.vcproj", "{90688422-B178-44F3-824A-C8CD6F3BD86F}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleRoServer", "samples\net\sampleRoServer.vcproj", "{547611C2-43E2-4678-B8E9-92CF69770C40}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleRoClient", "samples\net\sampleRoClient.vcproj", "{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}"
+EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Win32 = Debug|Win32
@@ -498,6 +504,18 @@
 		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Debug|Win32.Build.0 = Debug|Win32
 		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Release|Win32.ActiveCfg = Release|Win32
 		{CD73E4D1-5832-4DC1-8E65-06052BBD6F49}.Release|Win32.Build.0 = Release|Win32
+		{90688422-B178-44F3-824A-C8CD6F3BD86F}.Debug|Win32.ActiveCfg = Debug|Win32
+		{90688422-B178-44F3-824A-C8CD6F3BD86F}.Debug|Win32.Build.0 = Debug|Win32
+		{90688422-B178-44F3-824A-C8CD6F3BD86F}.Release|Win32.ActiveCfg = Release|Win32
+		{90688422-B178-44F3-824A-C8CD6F3BD86F}.Release|Win32.Build.0 = Release|Win32
+		{547611C2-43E2-4678-B8E9-92CF69770C40}.Debug|Win32.ActiveCfg = Debug|Win32
+		{547611C2-43E2-4678-B8E9-92CF69770C40}.Debug|Win32.Build.0 = Debug|Win32
+		{547611C2-43E2-4678-B8E9-92CF69770C40}.Release|Win32.ActiveCfg = Release|Win32
+		{547611C2-43E2-4678-B8E9-92CF69770C40}.Release|Win32.Build.0 = Release|Win32
+		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Debug|Win32.ActiveCfg = Debug|Win32
+		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Debug|Win32.Build.0 = Debug|Win32
+		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Release|Win32.ActiveCfg = Release|Win32
+		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Release|Win32.Build.0 = Release|Win32
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE



From codeandroid at berlios.de  Sun Jan 15 22:38:07 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 22:38:07 +0100
Subject: [Yake-svn] r1188 - in trunk/yake/yake: . net net/detail
Message-ID: <200601152138.k0FLc79d015350@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 22:38:07 +0100 (Sun, 15 Jan 2006)
New Revision: 1188

Added:
   trunk/yake/yake/net/
   trunk/yake/yake/net/detail/
   trunk/yake/yake/net/detail/netEnetClientPacketConnection.h
   trunk/yake/yake/net/detail/netEnetServerPacketConnection.h
   trunk/yake/yake/net/detail/netEventConnection.h
   trunk/yake/yake/net/detail/netInternal.h
   trunk/yake/yake/net/net.h
   trunk/yake/yake/net/netBitstream.h
   trunk/yake/yake/net/netBitstream.inl
   trunk/yake/yake/net/netBitstreamAdapters.h
   trunk/yake/yake/net/netCommon.h
   trunk/yake/yake/net/netEvent.h
   trunk/yake/yake/net/netPacket.h
   trunk/yake/yake/net/netPrerequisites.h
   trunk/yake/yake/net/netTypes.h
   trunk/yake/yake/net/pch.h
Log:
initial revision

Added: trunk/yake/yake/net/detail/netEnetClientPacketConnection.h
===================================================================
--- trunk/yake/yake/net/detail/netEnetClientPacketConnection.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/detail/netEnetClientPacketConnection.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,69 @@
+#ifndef NET_ENETCLIENTPACKETCONNECTION_H
+#define NET_ENETCLIENTPACKETCONNECTION_H
+
+namespace net {
+namespace impl {
+
+	//--------------------------------------------------------------------------
+	class EnetClientPacketConnection : public ::net::IClientPacketConnection
+	{
+	public:
+		EnetClientPacketConnection();
+		virtual ~EnetClientPacketConnection();
+
+		virtual void connect( const Address& );
+		virtual void disconnect();
+
+		virtual void send(const void*, const size_t, const SendOptions& opt = SendOptions());
+		virtual void send(const PeerId, const void*, const size_t, const SendOptions& opt = SendOptions());
+
+		virtual void addStartedCallback(const OnStartedFn&);
+		virtual void addPacketReceivedCallback( const OnPacketReceivedFn&);
+		virtual void addTimeOutCallback(const OnTimeOutFn&);
+	private:
+		void sendTo(const PeerId clientId, const void* dataPtr, const size_t dataSize, const Reliability rel, const Ordering, const ChannelId channel);
+		void sendBroadcast(const void* dataPtr, const size_t dataSize, const Reliability rel, const Ordering, const ChannelId channel);
+	private:
+		void update();
+
+		void fireCallback_Started()
+		{
+			for (OnStartedFnList::const_iterator it = startedFnList_.begin(); it != startedFnList_.end(); ++it)
+				(*it)();
+		}
+		void fireCallback_PacketReceived(const PeerId peerId, const void* data, const size_t dataLen, const ChannelId channel)
+		{
+			boost::mutex::scoped_lock lck(packetReceivedFnListMtx_);
+			for (OnPacketReceivedFnList::const_iterator it = packetReceivedFnList_.begin(); it != packetReceivedFnList_.end(); ++it)
+				(*it)(peerId,data,dataLen,channel);
+		}
+		void fireCallback_TimeOut()
+		{
+			for (OnTimeOutFnList::const_iterator it = timeOutFnList_.begin(); it != timeOutFnList_.end(); ++it)
+				(*it)();
+		}
+	private:
+		typedef std::deque<OnStartedFn> OnStartedFnList;
+		typedef std::deque<OnPacketReceivedFn> OnPacketReceivedFnList;
+		typedef std::deque<OnTimeOutFn> OnTimeOutFnList;
+		OnStartedFnList					startedFnList_;
+		OnPacketReceivedFnList			packetReceivedFnList_;
+		boost::mutex					packetReceivedFnListMtx_;
+		OnTimeOutFnList					timeOutFnList_;
+
+	private:
+		ENetAddress		m_address;
+		ENetHost*		m_host;
+		ENetPeer*		m_peer;
+		ENetPeer*		m_serverPeer;
+		bool			m_ready;
+		uint32			m_id;
+		bool			m_waitingForConnect;
+		std::string		m_serverIp;
+		Timer			m_connTimer;
+	};
+
+} // namespace impl
+} // namespace net
+
+#endif

Added: trunk/yake/yake/net/detail/netEnetServerPacketConnection.h
===================================================================
--- trunk/yake/yake/net/detail/netEnetServerPacketConnection.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/detail/netEnetServerPacketConnection.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,131 @@
+#ifndef NET_ENETSERVERPACKETCONNECTION_H
+#define NET_ENETSERVERPACKETCONNECTION_H
+
+namespace net {
+namespace impl {
+
+	//--------------------------------------------------------------------------
+	class EnetServerPacketConnection : public ::net::IServerPacketConnection
+	{
+	public:
+		EnetServerPacketConnection();
+		virtual ~EnetServerPacketConnection();
+
+		virtual void start( const Address&, const size_t );
+		virtual void stop();
+
+		virtual void setAllowedClientIps(const std::vector<std::string>&);
+
+		virtual void disconnect( const PeerId client );
+
+		virtual void send(const void*, const size_t, const SendOptions& opt = SendOptions());
+		virtual void send(const PeerId, const void*, const size_t, const SendOptions& opt = SendOptions());
+
+		virtual void addStartedCallback(const OnStartedFn&);
+		virtual void addClientConnectedCallback(const OnClientConnectedFn&);
+		virtual void addClientDisconnectedCallback(const OnClientDisconnectedFn&);
+		virtual void addPacketReceivedCallback( const OnPacketReceivedFn&);
+	private:
+		void sendTo(const PeerId clientId, const void* dataPtr, const size_t dataSize, const Reliability rel, const Ordering, const ChannelId channel);
+		void sendBroadcast(const void* dataPtr, const size_t dataSize, const Reliability rel, const Ordering, const ChannelId channel);
+	private:
+		void update();
+		bool isIpAllowed( const std::string& );
+		std::string ipToStringCached( const uint32 );
+
+		void fireCallback_Started()
+		{
+			for (OnStartedFnList::const_iterator it = startedFnList_.begin(); it != startedFnList_.end(); ++it)
+				(*it)();
+		}
+		void fireCallback_ClientConnected(const PeerId peerId, const Address& addr)
+		{
+			for (OnClientConnectedFnList::const_iterator it = clientConnectedFnList_.begin(); it != clientConnectedFnList_.end(); ++it)
+				(*it)(peerId, addr);
+		}
+		void fireCallback_ClientDisconnected(const PeerId peerId)
+		{
+			for (OnClientDisconnectedFnList::const_iterator it = clientDisconnectedFnList_.begin(); it != clientDisconnectedFnList_.end(); ++it)
+				(*it)(peerId);
+		}
+		void fireCallback_PacketReceived(const PeerId peerId, const void* data, const size_t dataLen, const ChannelId channel)
+		{
+			boost::mutex::scoped_lock lck(packetReceivedFnListMtx_);
+			for (OnPacketReceivedFnList::const_iterator it = packetReceivedFnList_.begin(); it != packetReceivedFnList_.end(); ++it)
+				(*it)(peerId,data,dataLen,channel);
+		}
+	private:
+		typedef std::deque<OnStartedFn> OnStartedFnList;
+		typedef std::deque<OnClientConnectedFn> OnClientConnectedFnList;
+		typedef std::deque<OnClientDisconnectedFn> OnClientDisconnectedFnList;
+		typedef std::deque<OnPacketReceivedFn> OnPacketReceivedFnList;
+		OnStartedFnList					startedFnList_;
+		OnClientConnectedFnList			clientConnectedFnList_;
+		OnClientDisconnectedFnList		clientDisconnectedFnList_;
+		OnPacketReceivedFnList			packetReceivedFnList_;
+		boost::mutex					packetReceivedFnListMtx_;
+
+	private:
+		enum State {
+			S_DEAD,
+			S_STARTING,
+			S_RUNNING,
+			S_STOPPING
+		};
+		struct state_t {
+			State get() const
+			{
+				boost::mutex::scoped_lock lock(mtx_);
+				return state_;
+			}
+			void set(const State state)
+			{
+				boost::mutex::scoped_lock lock(mtx_);
+				state_ = state;
+			}
+		private:
+			State					state_;
+			mutable boost::mutex mtx_;
+		} m_state;
+
+		ENetAddress				m_address;
+		ENetHost*				m_host;
+		uint32					m_id;
+
+		// Could use std::vector<uint32> if not for IPv6 and the std::string interface of IPacketServer.
+		typedef std::vector<std::string> HostList;
+		HostList				m_ipWhiteList;
+		HostList				m_ipBlackList;
+		mutable boost::mutex	m_ipListMtx;
+
+		typedef std::map<uint32,std::string> IpToString;
+		IpToString				m_ip2string;
+
+		enum ClientState
+		{
+			CS_CONNECTED,
+			CS_DISCONNECTING,
+			CS_DEAD
+		};
+		struct Client
+		{
+			ENetPeer*	peer;
+			ClientState	state;
+			PeerId		id;
+			uint32		host;
+			//Address		addr;
+		};
+		typedef std::map<ENetPeer*,Client*> PeerToClientMap;
+		PeerToClientMap			m_clients; // access only via update()
+		typedef std::map<PeerId,Client*> IdToClientMap;
+		IdToClientMap			m_id2client;
+		PeerId					m_nextPeerId;
+		mutable boost::mutex m_clientsMtx;
+	private:
+		ClientState getClientState(ENetPeer* peer) const; // access only via update()
+	};
+
+} // namespace impl
+} // namespace net
+
+#endif

Added: trunk/yake/yake/net/detail/netEventConnection.h
===================================================================
--- trunk/yake/yake/net/detail/netEventConnection.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/detail/netEventConnection.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,96 @@
+#ifndef NET_EVENTCONNECTION_H
+#define NET_EVENTCONNECTION_H
+
+namespace net {
+namespace impl {
+
+	//--------------------------------------------------------------------------
+	class EventConnection : public ::net::INetEventConnection
+	{
+	public:
+		EventConnection();
+		virtual ~EventConnection();
+
+		// INetEventConnection interface
+		virtual void setPacketConnection(IPacketConnection*,const NetEvent::Direction);
+		virtual void setMaxEventErrors(const size_t);
+
+		virtual void registerEvent(const NetEvent::id_type, const NetEvent::Direction,
+									const CreateEventFn& fnCreate, const DestroyEventFn& fnDestroy);
+		virtual void sendEvent(const NetEvent&, const SendOptions& opt = SendOptions());
+		virtual void sendEvent(const PeerId, const NetEvent&, const SendOptions& opt = SendOptions());
+		virtual void setAllowedIncomingEventIds(const std::vector<NetEvent::id_type>&);
+
+		virtual void setProcessEventCallback(const EvtProcessEventFn&);
+		//virtual void removeProcessEventCallback(const EvtProcessEventFn&);
+		virtual void setDisconnectCallback(const EvtDisconnectFn&);
+	private:
+		void onReceivePacket(const PeerId, const void*, const size_t, const ChannelId);
+	private:
+		//typedef std::deque<EvtProcessEventFn> EvtProcessEventFnList;
+		//EvtProcessEventFnList	processEventFns_;
+		EvtProcessEventFn processEventFn_;
+		void fireCallbacks_ProcessEvent(const PeerId peerId, const NetEvent& evt, const ChannelId channel)
+		{
+			if (!processEventFn_.empty())
+				processEventFn_(peerId,evt,channel);
+
+			//EvtProcessEventFnList fns = processEventFns_; // Use a copy as the original container may be modified during the callbacks!
+			//for (EvtProcessEventFnList::const_iterator it = fns.begin(); it != fns.end(); ++it)
+			//	(*it)(peerId,evt,channel);
+		}
+
+	private:
+		typedef NetEvent::id_type event_id;
+		typedef NetEvent::Direction event_direction;
+
+		struct IdEntry
+		{
+			event_direction		dir;
+			CreateEventFn		fnCreate;
+			DestroyEventFn		fnDestroy;
+		};
+		typedef std::map<event_id,IdEntry> EventIdMap;
+		EventIdMap				eventIds_;
+
+		typedef std::vector<NetEvent::id_type> EventIdVector;
+		EventIdVector			allowedEventIds_;
+		mutable boost::mutex	allowedEventIdsMtx_;
+
+		event_direction			dir_;
+		IPacketConnection*		conn_;
+
+		struct statistics_t
+		{
+			statistics_t() : 
+				numInvalidPackets(0),
+				numInvalidEvents(0),
+				numInvalidEventIds(0),
+				numUnregisteredEventIds(0),
+				numWrongEventDirection(0),
+				numEventsProcessed(0),
+				numBlockedEventIds(0)
+			{}
+			size_t		numInvalidPackets;
+			size_t		numInvalidEvents;
+			size_t		numInvalidEventIds;
+			size_t		numUnregisteredEventIds;
+			size_t		numWrongEventDirection;
+			size_t		numEventsProcessed;
+			size_t		numBlockedEventIds;
+			size_t totalErrors() const
+			{
+				return numInvalidPackets +
+						numInvalidEvents +
+						numInvalidEventIds +
+						numUnregisteredEventIds +
+						numWrongEventDirection;
+			}
+		} stats_;
+		size_t					maxErrors_;
+	};
+
+} // namespace impl
+} // namespace net
+
+#endif

Added: trunk/yake/yake/net/detail/netInternal.h
===================================================================
--- trunk/yake/yake/net/detail/netInternal.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/detail/netInternal.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,99 @@
+#ifndef NET_INTERNAL_H
+#define NET_INTERNAL_H
+
+#pragma warning(push)
+#pragma warning(disable: 4251) // C4251:  'T' needs to have dll-interface to be used by clients of class 'X'
+#pragma warning(disable: 4275) // C4275:  'T' used as base for dll-interface class 'X'
+
+#include <cassert>
+#include <sstream>
+#include <iostream>
+#include <map>
+#include <boost/thread/thread.hpp>
+#include <boost/thread/mutex.hpp>
+#include <boost/bind.hpp>
+
+#define NET_ERROR( X ) \
+	{ \
+		std::stringstream s; \
+		s << "net_error: " << X << "\n"; \
+		std::cerr << s.str().c_str(); \
+	}
+
+#define NET_LOG( X ) \
+	{ \
+		std::stringstream s; \
+		s << "net: " << X << "\n"; \
+		std::cout << s.str().c_str(); \
+	}
+
+#define NET_THROW(MSG) \
+	throw Exception(MSG,__FILE__,__LINE__)
+
+#define NET_EXCEPT NET_THROW
+
+namespace net {
+namespace impl {
+
+	boost::mutex& getEnetMtx();
+
+	typedef boost::function<void(void)> UpdateFn;
+	class UpdateThread
+	{
+	private:
+		UpdateThread();
+		~UpdateThread();
+	public:
+		uint32 add( const UpdateFn& );
+		//void remove( const UpdateFn& );
+		void remove( const uint32 );
+		bool dead() const;
+		void requestQuit();
+
+		static bool create();
+		static void destroy();
+		static UpdateThread& instance();
+
+		void __update__() // must only be called from net::update()
+		{ this->callFns(); }
+	private:
+		void threadMain();
+		void callFns();
+
+		typedef std::map<uint32,UpdateFn> UpdateFnMap;
+		UpdateFnMap		fns_;
+		uint32			nextId_;
+		boost::thread*	thread_;
+		mutable boost::mutex	mtx_;
+		bool			quitRequested_;
+
+		bool			dead_;
+		mutable boost::mutex	deadMtx_;
+
+		static UpdateThread* instance_;
+	};
+
+	/** @todo move this into general purpose lib/header
+	*/
+	template<typename ctr_type>
+		bool contains(const ctr_type& ctr, typename const ctr_type::value_type& value)
+	{
+		return (ctr.end() != std::find(ctr.begin(), ctr.end(), value));
+	}
+	template<typename kt, typename vt, typename at>
+		bool contains(const std::map<kt,vt,at>& ctr, typename const std::map<kt,vt,at>::key_type& key)
+	{
+		return (ctr.end() != ctr.find(key));
+	}
+	template<typename map_type>
+		bool map_contains(const map_type& ctr, typename const map_type::key_type& key)
+	{
+		return (ctr.end() != ctr.find(key));
+	}
+
+} // namespace impl
+} // namespace net
+
+#pragma warning(pop)
+
+#endif

Added: trunk/yake/yake/net/net.h
===================================================================
--- trunk/yake/yake/net/net.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/net.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,16 @@
+#ifndef NET_H
+#define NET_H
+
+#include "netPrerequisites.h"
+#include "netCommon.h"
+#include "netPacket.h"
+#include "netEvent.h"
+
+namespace net {
+
+	NET_API bool initialize();
+	NET_API void shutdown();
+
+} // namespace net
+
+#endif

Added: trunk/yake/yake/net/netBitstream.h
===================================================================
--- trunk/yake/yake/net/netBitstream.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netBitstream.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,95 @@
+#ifndef NET_BITSTREAM_H
+#define NET_BITSTREAM_H
+
+#include <bitset>
+
+namespace net {
+
+	/**
+		\todo - optimize: use bit masks ? => have to profile this. newer processor
+					architectures aren't that fast with bit operations...
+				- optimize: remove casts
+	*/
+	template<typename DataStreamType>
+	class ibstream_base
+	{
+	public:
+		ibstream_base& operator = (const ibstream_base&);
+		ibstream_base(const ibstream_base&);
+		ibstream_base( DataStreamType* pds = 0 );
+		~ibstream_base();
+		void setDataSource( DataStreamType*, const bool takeOwnership = false );
+		uint8 read( bool& );
+		uint8 read( void* pd, size_t numBits );
+		uint8 read( uint8&, uint8 numBits );
+		uint8 read( float&, size_t numBits );
+	private:
+		bool _inByte( uint8& );
+		DataStreamType*	mSource;
+		uint8					mBitPos;
+		std::bitset<8>		mBuf;
+		size_t				mTotalBits;
+		size_t				mTotalBytes;
+		bool					mDestroyDataStream;
+	};
+
+	template<class DataStreamType>
+	class obstream_base
+	{
+	public:
+		obstream_base& operator = (const obstream_base&);
+		obstream_base(const obstream_base&);
+		obstream_base( DataStreamType* pds = 0 );
+		~obstream_base();
+		void setDataSink( DataStreamType* s, const bool takeOwnership = false );
+		uint8 write( const uint8, uint8 numBits );
+		void write( const bool );
+		void write( const void*, size_t numBits );
+
+		void write( const uint16, uint8 numBits );
+		void write( const uint32, uint8 numBits );
+		void write( const float, uint8 numBits );
+		void write( const double, uint8 numBits );
+		void flush();
+
+		size_t numBits() const;
+		//size_t numBytes() const; //pre or post flush?
+
+		void setNumBits(const uint8 numBitsForNextStreamOperations);
+		obstream_base& operator << (const uint8);
+		obstream_base& operator << (const uint16);
+		obstream_base& operator << (const uint32);
+		obstream_base& operator << (const int8);
+		obstream_base& operator << (const int16);
+		obstream_base& operator << (const int32);
+		obstream_base& operator << (const float);
+		obstream_base& operator << (const double);
+	private:
+		void _outByte( uint8 );
+		//std::ostream*	mStream;
+		DataStreamType*	mStream;
+		uint8					mBitPos;
+		std::bitset<8>		mBuf;
+		size_t				mTotalBits;
+		size_t				mTotalBytes;
+		uint8					mNumBitsForNextStreamOperations;
+		bool					mDestroyDataStream;
+	};
+
+	struct setNumBits
+	{
+		setNumBits(uint8 numBits) : b(numBits)
+		{}
+		uint8 b;
+	};
+	template<class ostream_type>
+	inline ostream_type& operator << (ostream_type& lhs, const setNumBits& rhs)
+	{
+		lhs.setNumBits(rhs.b);
+		return lhs;
+	}
+} // namespace net
+
+#include "netBitStream.inl"
+
+#endif

Added: trunk/yake/yake/net/netBitstream.inl
===================================================================
--- trunk/yake/yake/net/netBitstream.inl	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netBitstream.inl	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,324 @@
+#ifndef NET_BITSTREAM_INL
+#define NET_BITSTREAM_INL
+
+namespace net {
+
+	//--------------------------------------------------------------------------
+	// Class: ibstream
+	//--------------------------------------------------------------------------
+	template<class DataStreamType>
+	ibstream_base<DataStreamType>& ibstream_base<DataStreamType>::operator = (const ibstream_base<DataStreamType>& other)
+	{
+		mSource			= other.mSource;
+		mBitPos			= other.mBitPos;
+		mBuf				= other.mBuf;
+		mTotalBits		= other.mTotalBits;
+		mTotalBytes		= other.mTotalBytes;
+		mDestroyDataStream = other.mDestroyDataStream;
+		return *this;
+	}
+	template<class DataStreamType>
+	ibstream_base<DataStreamType>::ibstream_base(const ibstream_base<DataStreamType>& other)
+	{
+		mSource			= other.mSource;
+		mBitPos			= other.mBitPos;
+		mBuf				= other.mBuf;
+		mTotalBits		= other.mTotalBits;
+		mTotalBytes		= other.mTotalBytes;
+		mDestroyDataStream = other.mDestroyDataStream;
+	}
+	template<class DataStreamType>
+	ibstream_base<DataStreamType>::ibstream_base( DataStreamType* pds = 0 ) : mSource(pds), mBitPos(8), mTotalBits(0), mTotalBytes(0), mDestroyDataStream(false)
+	{
+		mBuf.set(0);
+	}
+	template<class DataStreamType>
+	ibstream_base<DataStreamType>::~ibstream_base()
+	{
+		if (mDestroyDataStream && mSource)
+			delete mSource;
+	#ifdef _OUTPUT_DEBUG_STUFF
+		std::cout << "ibstream: " << uint32(mTotalBits) << " bits read.\n";
+		std::cout << "ibstream: " << uint32(mTotalBytes) << " bytes read.\n";
+	#endif
+	}
+	template<class DataStreamType>
+	void ibstream_base<DataStreamType>::setDataSource( DataStreamType* s, const bool takeOwnership )
+	{
+		if (mDestroyDataStream && mSource)
+			delete mSource;
+		mDestroyDataStream = takeOwnership;
+		mSource = s;
+	}
+	template<class DataStreamType>
+	bool ibstream_base<DataStreamType>::_inByte( uint8& c )
+	{
+		if (!mSource)
+			return false;
+		if (!mSource->hasMoreData())
+			return false;
+		if (!mSource->read( c ))
+			return false;
+		++mTotalBytes;
+		return true;
+	}
+	template<class DataStreamType>
+	uint8 ibstream_base<DataStreamType>::read( uint8& bits, uint8 numBits )
+	{
+		if (!mSource)
+			return 0;
+		if (numBits > 8)
+			numBits = 8;
+
+		std::bitset<8> d(0);
+		//for (uint8 i = numBits-1; i != 0xff; i--) 
+		for (uint8 i = 0; i < numBits; ++i) 
+		{
+			bool b;
+			read(b);
+			d[i] = b;
+	#ifdef _OUTPUT_DEBUG_STUFF
+			std::cout << "reading bit " << uint32(i) << " = " << d[i] << "\n";
+	#endif
+			mTotalBits++;
+		}
+
+		bits = uint8(d.to_ulong() & 0xFF);
+
+		return numBits;
+	}
+	template<class DataStreamType>
+	uint8 ibstream_base<DataStreamType>::read( bool& bit )
+	{
+		if (mBitPos == 8)
+		{
+			uint8 c;
+			_inByte( c );
+			mBuf = c;
+			mBitPos = 0;
+		}
+
+		bit = mBuf[mBitPos++];
+		return 1;
+	}
+	template<class DataStreamType>
+	uint8 ibstream_base<DataStreamType>::read( void* pd, size_t numBits )
+	{
+		uint8* pc = static_cast<uint8*>(pd);
+		uint8* pe = pc+(numBits >> 3);
+		if (pc == pe)
+		{
+			read( *pc, uint8(numBits) );
+			return uint8(numBits);
+		}
+
+		size_t toread = numBits;
+		while (pc != pe)
+			toread -= read( *pc++, (toread > 8) ? 8 : uint8(toread) );
+
+		if (toread > 0)
+			read( *pc, uint8(toread) );
+
+		return uint8(numBits);
+	}
+	template<class DataStreamType>
+	uint8 ibstream_base<DataStreamType>::read( float& d, size_t numBits )
+	{
+		return read( &d, numBits );
+	}
+
+	//--------------------------------------------------------------------------
+	// Class: obstream
+	//--------------------------------------------------------------------------
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator = (const obstream_base<DataStreamType>& other)
+	{
+		mStream			= other.mStream;
+		mBitPos			= other.mBitPos;
+		mBuf				= other.mBuf;
+		mTotalBits		= other.mTotalBits;
+		mTotalBytes		= other.mTotalBytes;
+		mDestroyDataStream = other.mDestroyDataStream;
+		mNumBitsForNextStreamOperations = other.mNumBitsForNextStreamOperations;
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>::obstream_base(const obstream_base<DataStreamType>& other)
+	{
+		mStream			= other.mStream;
+		mBitPos			= other.mBitPos;
+		mBuf				= other.mBuf;
+		mTotalBits		= other.mTotalBits;
+		mTotalBytes		= other.mTotalBytes;
+		mDestroyDataStream = other.mDestroyDataStream;
+		mNumBitsForNextStreamOperations = other.mNumBitsForNextStreamOperations;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const uint8 rhs)
+	{
+		write( rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const uint16 rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const uint32 rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const int8 rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const int16 rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const int32 rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const float rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>& obstream_base<DataStreamType>::operator << (const double rhs)
+	{
+		write( &rhs, mNumBitsForNextStreamOperations );
+		return *this;
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>::obstream_base( DataStreamType* pds = 0 ) : mStream(pds), mBitPos(0), mTotalBits(0), mTotalBytes(0), mNumBitsForNextStreamOperations(8), mDestroyDataStream(false)
+	{
+		mBuf.set(0);
+	}
+	template<class DataStreamType>
+	obstream_base<DataStreamType>::~obstream_base()
+	{
+		if (mStream && mDestroyDataStream)
+			delete mStream;
+	#ifdef _OUTPUT_DEBUG_STUFF
+		std::cout << "obstream: " << uint32(mTotalBits) << " bits written.\n";
+		std::cout << "obstream: " << uint32(mTotalBytes) << " bytes written.\n";
+	#endif
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::setNumBits(const uint8 numBitsForNextStreamOperations)
+	{
+		mNumBitsForNextStreamOperations = numBitsForNextStreamOperations;
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::setDataSink( DataStreamType* s, const bool takeOwnership )
+	{
+		if (mStream && mDestroyDataStream)
+			delete mStream;
+		mDestroyDataStream = takeOwnership;
+		mStream = s;
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::_outByte( uint8 c )
+	{
+		if (!mStream)
+			return;
+		//*mStream << c;
+		mStream->write( c );
+		++mTotalBytes;
+	}
+	template<class DataStreamType>
+	uint8 obstream_base<DataStreamType>::write( const uint8 bits, uint8 numBits )
+	{
+		if (!mStream)
+			return 0;
+		if (numBits > 8)
+			numBits = 8;
+
+		std::bitset<8> d(bits);
+
+		//for (int8 i = numBits-1; i>=0; --i)
+		for (int8 i = 0; i<numBits; ++i)
+		{
+	#ifdef _OUTPUT_DEBUG_STUFF
+			std::cout << "writing bit " << uint32(i) << " = " << d[i] << "\n";
+	#endif
+			write( d[i] );
+		}
+
+		return numBits;
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::write( const bool bit )
+	{
+		mBuf[ mBitPos ++ ] = bit;
+		if (mBitPos >= 8)
+		{
+			uint8 c = uint8( mBuf.to_ulong() & 0xFF );
+			_outByte( c );
+			mBitPos -= 8;
+		}
+		++mTotalBits;
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::flush()
+	{
+		if (mBitPos > 0)
+		{
+			_outByte( uint8(mBuf.to_ulong() & 0xFF) );
+			mBitPos = 0;
+		}
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::write( const void* pd, size_t numBits )
+	{
+		const uint8* pc = static_cast<const uint8*>(pd);
+		const uint8* pe = pc+(numBits >> 3);
+		if (pc == pe)
+		{
+			write( *pc, uint8(numBits) );
+			return;
+		}
+
+		size_t towrite = numBits;
+		while (pc != pe)
+			towrite -= write( *pc++, (towrite > 8) ? 8 : uint8(towrite) );
+
+		if (towrite > 0)
+			write( *pc, uint8(towrite) );
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::write( const uint16 d, uint8 numBits )
+	{
+		write( &d, numBits );
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::write( const uint32 d, uint8 numBits )
+	{
+		write( &d, numBits );
+	}
+	template<class DataStreamType>
+	void obstream_base<DataStreamType>::write( const float d, uint8 numBits )
+	{
+		write( &d, numBits );
+	}
+	template<class DataStreamType>
+	size_t obstream_base<DataStreamType>::numBits() const
+	{
+		return mTotalBits;
+	}
+
+} // namespace net
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/net/netBitstreamAdapters.h
===================================================================
--- trunk/yake/yake/net/netBitstreamAdapters.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netBitstreamAdapters.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,83 @@
+#ifndef NET_BITSTREAMADAPTERS_H
+#define NET_BITSTREAMADAPTERS_H
+
+namespace net {
+
+	template<class ctr_type>
+	struct bitstream_sink_stlcontainer
+	{
+	private:
+		bitstream_sink_stlcontainer();
+	public:
+		typedef ctr_type container_type;
+		bitstream_sink_stlcontainer(ctr_type& ctr) : ctr_(ctr) {}
+		void write(const net::uint8 c)
+		{
+			ctr_.push_back( c );
+		}
+		ctr_type&	ctr_;
+	};
+	typedef bitstream_sink_stlcontainer<std::vector<net::uint8> > bitstream_stlvector_sink;
+	typedef net::obstream_base<bitstream_stlvector_sink> obitstream_vector;
+
+	template<class ctr_type>
+	struct bitstream_source_stlcontainer
+	{
+	private:
+		bitstream_source_stlcontainer();
+	public:
+		typedef ctr_type container_type;
+		bitstream_source_stlcontainer(const container_type& ctr) : ctr_(ctr), currPos(ctr.begin()), itEnd(ctr.end())
+		{}
+		bool hasMoreData() const
+		{
+			return currPos != itEnd;
+		}
+		bool read(net::uint8& c) const
+		{
+			if (!hasMoreData())
+				return false;
+			c = *currPos++;
+			return true;
+		}
+	private:
+		mutable typename container_type::const_iterator currPos;
+		mutable typename container_type::const_iterator itEnd;
+		const container_type&	ctr_;
+	};
+	typedef bitstream_source_stlcontainer<std::vector<net::uint8> > bitstream_stlvector_source;
+	typedef net::ibstream_base<bitstream_stlvector_source> ibitstream_vector;
+
+	struct bitstream_source_voidptr
+	{
+	private:
+		bitstream_source_voidptr();
+	public:
+		bitstream_source_voidptr(const void* data, const size_t len) : 
+			data_(0), curr_(0), end_(0)
+		{
+			data_ = reinterpret_cast<const uint8*>(data);
+			end_ = data_ + len;
+			curr_ = const_cast<uint8*>(data_);
+		}
+		bool hasMoreData() const
+		{
+			return curr_ != end_;
+		}
+		bool read(net::uint8& c) const
+		{
+			if (!hasMoreData())
+				return false;
+			c = *curr_++;
+			return true;
+		}
+	private:
+		mutable size_t currPos;
+		const uint8*			data_;
+		const uint8*			end_;
+		mutable uint8*			curr_;
+	};
+	typedef net::ibstream_base<bitstream_source_voidptr> ibitstream_voidptr;
+} // namespace net
+
+#endif

Added: trunk/yake/yake/net/netCommon.h
===================================================================
--- trunk/yake/yake/net/netCommon.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netCommon.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,92 @@
+#ifndef NET_COMMON_H
+#define NET_COMMON_H
+
+namespace net {
+
+	typedef uint8 ChannelId;
+	typedef uint32 PeerId;
+
+	enum Reliability
+	{
+		R_RELIABLE = 0,
+		R_UNRELIABLE
+	};
+	enum Ordering
+	{
+		O_ORDERED = 0,
+		O_UNORDERED
+	};
+
+	struct NET_API SendOptions
+	{
+		SendOptions();
+		SendOptions(const SendOptions&);
+		~SendOptions();
+		SendOptions& operator=(const SendOptions&);
+
+		SendOptions& setPeerId(const PeerId);
+		SendOptions& setReliability(const Reliability);
+		SendOptions& setOrdering(const Ordering);
+		SendOptions& setChannel(const ChannelId);
+
+		PeerId			peerId;
+		Reliability		reliability;
+		Ordering		ordering;
+		ChannelId		channelId;
+	};
+
+	struct NET_API Address
+	{
+		Address(const uint16 port);
+		Address(const std::string& ip = std::string("127.0.0.1"), const uint16 port = 0);
+		Address(const Address&);
+		~Address();
+		Address& operator=(const Address&);
+
+		void setIp(const std::string& ip);
+		const std::string& ip() const;
+		void setPort(const uint16 port);
+		const uint16 port() const;
+	private:
+		std::string		ip_;
+		uint16			port_;
+	};
+
+	NET_API std::string ipToString(const uint32);
+
+	namespace native {
+		NET_API void sleep(const uint32 ms);
+	} // namespace native
+
+	struct NET_API Exception : public std::exception
+	{
+		Exception(const std::string& msg, const char* file = 0, const int line = 0);
+		virtual const char* what() const;
+	private:
+		std::string	msg_;
+	};
+
+	namespace detail {
+		class NativeTimer;
+	}
+	class NET_API Timer
+	{
+	public:
+		Timer();
+		~Timer();
+		void start();
+		void stop();
+		void pause();
+		void resume();
+		void reset();
+		double getTime() const;
+	private:
+		detail::NativeTimer*	timer_;
+		double					start_;
+		mutable double			time_;
+		bool					paused_;
+	};
+
+} // namespace net
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/net/netEvent.h
===================================================================
--- trunk/yake/yake/net/netEvent.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netEvent.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,72 @@
+#ifndef NET_EVENT_H
+#define NET_EVENT_H
+
+#include "netBitstream.h"
+#include "netBitstreamAdapters.h"
+
+namespace net {
+
+	typedef obitstream_vector obitstream;
+	typedef ibitstream_vector ibitstream;
+
+	typedef bitstream_stlvector_sink::container_type bitstream_data;
+	typedef bitstream_stlvector_sink bitstream_sink;
+	typedef bitstream_stlvector_source bitstream_source;
+
+	class NET_API NetEvent
+	{
+	public:
+		virtual ~NetEvent() {}
+
+		typedef uint8 id_type;
+		static const id_type EVTID_NONE;
+		enum Direction {
+			DIR_ANY,
+			DIR_CLIENT_TO_SERVER,
+			DIR_SERVER_TO_CLIENT
+		};
+	private:
+		NetEvent();
+		NetEvent(const NetEvent&);
+		NetEvent& operator=(const NetEvent&);
+	protected:
+		NetEvent(const id_type);
+	public:
+
+		id_type id() const;
+		void setId(const id_type id); //@really needed?
+
+		virtual bool pack(obitstream&) const = 0;
+		virtual bool unpack(ibitstream&) = 0;
+	private:
+		id_type		id_;
+	};
+
+	class NET_API INetEventConnection
+	{
+	public:
+		virtual ~INetEventConnection();
+
+		virtual void setPacketConnection(IPacketConnection*,const NetEvent::Direction) = 0;
+		virtual void setMaxEventErrors(const size_t) = 0;
+
+		typedef boost::function<NetEvent*(const NetEvent::id_type)> CreateEventFn;
+		typedef boost::function<void(NetEvent*)> DestroyEventFn;
+
+		virtual void registerEvent(const NetEvent::id_type, const NetEvent::Direction,
+									const CreateEventFn& fnCreate, const DestroyEventFn& fnDestroy) = 0;
+		virtual void sendEvent(const NetEvent&, const SendOptions& opt = SendOptions()) = 0;
+		virtual void sendEvent(const PeerId, const NetEvent&, const SendOptions& opt = SendOptions()) = 0;
+		virtual void setAllowedIncomingEventIds(const std::vector<NetEvent::id_type>&) = 0;
+
+		typedef boost::function<void(const PeerId, const NetEvent&, const ChannelId)> EvtProcessEventFn;
+		typedef boost::function<void(void)> EvtDisconnectFn;
+
+		virtual void setProcessEventCallback(const EvtProcessEventFn&) = 0;
+		virtual void setDisconnectCallback(const EvtDisconnectFn&) = 0;
+	};
+	NET_API INetEventConnection* createEventConnection();
+
+} // namespace net
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/net/netPacket.h
===================================================================
--- trunk/yake/yake/net/netPacket.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netPacket.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,66 @@
+#ifndef NET_PACKET_H
+#define NET_PACKET_H
+
+namespace net {
+
+	typedef std::vector<uint8> byte_chunk;
+
+	class NET_API IPacketSender
+	{
+	public:
+		virtual ~IPacketSender() {}
+		virtual void send(const void*, const size_t, const SendOptions& opt = SendOptions()) = 0;
+		virtual void send(const PeerId, const void*, const size_t, const SendOptions& opt = SendOptions()) = 0;
+	};
+
+	class NET_API IPacketReceiver
+	{
+	public:
+		virtual ~IPacketReceiver() {}
+
+		typedef boost::function<void(const PeerId, const void*, const size_t, const ChannelId)> OnPacketReceivedFn;
+		virtual void addPacketReceivedCallback( const OnPacketReceivedFn&) = 0;
+	};
+
+	class NET_API IPacketConnection : public IPacketSender, public IPacketReceiver
+	{
+	public:
+		typedef boost::function<void(void)> OnStartedFn;
+		typedef boost::function<void(void)> OnTimeOutFn;
+		virtual void addStartedCallback(const OnStartedFn&) = 0;
+	};
+
+	class NET_API IServerPacketConnection : public IPacketConnection
+	{
+	public:
+
+		/*** May throw exception. */
+		virtual void start( const Address&, const size_t ) = 0;
+		virtual void stop() = 0;
+
+		virtual void setAllowedClientIps(const std::vector<std::string>&) = 0;
+		//virtual void setAllowedClientIps(const std::vector<uint32>&) = 0;
+
+		virtual void disconnect( const PeerId ) = 0;
+
+		typedef boost::function<void(const PeerId, const Address&)> OnClientConnectedFn;
+		typedef boost::function<void(const PeerId)> OnClientDisconnectedFn;
+
+		/** Not thread-safe! Call only before calling start()! */
+		virtual void addClientConnectedCallback(const OnClientConnectedFn&) = 0;
+		virtual void addClientDisconnectedCallback(const OnClientDisconnectedFn&) = 0;
+	};
+	class NET_API IClientPacketConnection : public IPacketConnection
+	{
+	public:
+		virtual void connect( const Address& ) = 0;
+		virtual void disconnect() = 0;
+
+		virtual void addTimeOutCallback(const OnTimeOutFn&) = 0;
+	};
+	NET_API IServerPacketConnection* createServerPacketConnection();
+	NET_API IClientPacketConnection* createClientPacketConnection();
+
+} // namespace net
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/net/netPrerequisites.h
===================================================================
--- trunk/yake/yake/net/netPrerequisites.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netPrerequisites.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,36 @@
+#ifndef NET_PREREQUISITES_H
+#define NET_PREREQUISITES_H
+
+#define NET_DLL
+
+#ifdef YAKE_NET_EXPORTS
+#	ifdef NET_DLL
+#		define NET_API __declspec(dllexport)
+#	else
+#		define NET_API
+#	endif
+#else
+#	ifdef NET_DLL
+#		define NET_API __declspec(dllimport)
+#	else
+#		define NET_API
+#	endif
+#	if defined( _DEBUG )
+#		pragma comment(lib,"net_d.lib")
+#	else
+#		pragma comment(lib,"net.lib")
+#	endif
+#endif
+
+#include <cassert>
+#include <string>
+#include <vector>
+#include <deque>
+#include <boost/function.hpp>
+#include "netTypes.h"
+
+#define NET_ASSERT(X) \
+	assert(X)
+
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/net/netTypes.h
===================================================================
--- trunk/yake/yake/net/netTypes.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/netTypes.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,15 @@
+#ifndef NET_TYPES_H
+#define NET_TYPES_H
+
+namespace net {
+
+	typedef unsigned char uint8;
+	typedef unsigned short uint16;
+	typedef unsigned int uint32;
+	typedef signed char int8;
+	typedef signed short int16;
+	typedef signed int int32;
+
+} // namespace net
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/net/pch.h
===================================================================
--- trunk/yake/yake/net/pch.h	2006-01-15 21:36:43 UTC (rev 1187)
+++ trunk/yake/yake/net/pch.h	2006-01-15 21:38:07 UTC (rev 1188)
@@ -0,0 +1,6 @@
+#ifndef YAKE_NET_PCH_H
+#define YAKE_NET_PCH_H
+#pragma once
+
+
+#endif
\ No newline at end of file



From codeandroid at berlios.de  Sun Jan 15 22:39:18 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 22:39:18 +0100
Subject: [Yake-svn] r1189 - in trunk/yake/src/yake/samples: . net net/roclient net/roserver
Message-ID: <200601152139.k0FLdINo015459@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 22:39:17 +0100 (Sun, 15 Jan 2006)
New Revision: 1189

Added:
   trunk/yake/src/yake/samples/net/
   trunk/yake/src/yake/samples/net/roclient/
   trunk/yake/src/yake/samples/net/roclient/demo.cpp
   trunk/yake/src/yake/samples/net/roclient/pch.cpp
   trunk/yake/src/yake/samples/net/roserver/
   trunk/yake/src/yake/samples/net/roserver/demo.cpp
   trunk/yake/src/yake/samples/net/roserver/pch.cpp
Log:
initial revision

Added: trunk/yake/src/yake/samples/net/roclient/demo.cpp
===================================================================
--- trunk/yake/src/yake/samples/net/roclient/demo.cpp	2006-01-15 21:38:07 UTC (rev 1188)
+++ trunk/yake/src/yake/samples/net/roclient/demo.cpp	2006-01-15 21:39:17 UTC (rev 1189)
@@ -0,0 +1,32 @@
+#include <yake/samples/net/roclient/pch.h>
+#include <yake/net/net.h>
+#include <yake/samples/net/common/common.h>
+#include <yake/samples/net/roclient/ROClient.h>
+
+int main(int argc, char* argv[])
+{
+	net::initialize();
+
+	ro::client clientApp;
+
+	if (!clientApp.start( net::Address("127.0.0.1",40000) ))
+		return 0;
+
+	clientApp.waitForStart();
+	if (clientApp.running())
+	{
+		COUTLN("waiting for key press...");
+		while (!_kbhit())
+		{
+			net::native::sleep(10);
+			clientApp.step();
+		}
+		if (_kbhit())
+			_getch();
+	}
+	clientApp.stop();
+
+	net::shutdown();
+	return 0;
+}
+

Added: trunk/yake/src/yake/samples/net/roclient/pch.cpp
===================================================================
--- trunk/yake/src/yake/samples/net/roclient/pch.cpp	2006-01-15 21:38:07 UTC (rev 1188)
+++ trunk/yake/src/yake/samples/net/roclient/pch.cpp	2006-01-15 21:39:17 UTC (rev 1189)
@@ -0,0 +1 @@
+#include <yake/samples/net/roclient/pch.h>

Added: trunk/yake/src/yake/samples/net/roserver/demo.cpp
===================================================================
--- trunk/yake/src/yake/samples/net/roserver/demo.cpp	2006-01-15 21:38:07 UTC (rev 1188)
+++ trunk/yake/src/yake/samples/net/roserver/demo.cpp	2006-01-15 21:39:17 UTC (rev 1189)
@@ -0,0 +1,37 @@
+#include <yake/samples/net/roserver/pch.h>
+#include <yake/net/net.h>
+#include <yake/samples/net/common/common.h>
+#include <yake/samples/net/roserver/ROServer.h>
+
+#include <yake/object/yakeObjects.h>
+#include <yapp/ent/yakeEnt.h>
+
+int main(int argc, char* argv[])
+{
+	try {
+
+		COUTLN("starting RO server...");
+		if (!net::initialize())
+			return 0;
+
+		ro::server serverApp;
+		serverApp.start();
+
+		COUTLN("waiting for key press...");
+		while (!_kbhit())
+			net::native::sleep(10);
+		_getch();
+
+		COUTLN("stopping...");
+		serverApp.stop();
+
+		net::shutdown();
+	}
+	catch (const net::Exception& e)
+	{
+		COUTLN("Caught net exception: " << e.what());
+		net::shutdown();
+	}
+	return 0;
+}
+

Added: trunk/yake/src/yake/samples/net/roserver/pch.cpp
===================================================================
--- trunk/yake/src/yake/samples/net/roserver/pch.cpp	2006-01-15 21:38:07 UTC (rev 1188)
+++ trunk/yake/src/yake/samples/net/roserver/pch.cpp	2006-01-15 21:39:17 UTC (rev 1189)
@@ -0,0 +1 @@
+#include <yake/samples/net/roserver/pch.h>



From codeandroid at berlios.de  Sun Jan 15 22:42:38 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sun, 15 Jan 2006 22:42:38 +0100
Subject: [Yake-svn] r1190 - in trunk/yake/yake/samples: . net net/roclient net/roserver
Message-ID: <200601152142.k0FLgc4e015895@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-15 22:42:37 +0100 (Sun, 15 Jan 2006)
New Revision: 1190

Added:
   trunk/yake/yake/samples/net/
   trunk/yake/yake/samples/net/common/
   trunk/yake/yake/samples/net/roclient/
   trunk/yake/yake/samples/net/roclient/pch.h
   trunk/yake/yake/samples/net/roserver/
   trunk/yake/yake/samples/net/roserver/pch.h
Log:
initial revision

Added: trunk/yake/yake/samples/net/roclient/pch.h
===================================================================
--- trunk/yake/yake/samples/net/roclient/pch.h	2006-01-15 21:39:17 UTC (rev 1189)
+++ trunk/yake/yake/samples/net/roclient/pch.h	2006-01-15 21:42:37 UTC (rev 1190)
@@ -0,0 +1,7 @@
+#ifndef PCH_H
+#define PCH_H
+
+#include <boost/function.hpp>
+#include <boost/bind.hpp>
+
+#endif
\ No newline at end of file

Added: trunk/yake/yake/samples/net/roserver/pch.h
===================================================================
--- trunk/yake/yake/samples/net/roserver/pch.h	2006-01-15 21:39:17 UTC (rev 1189)
+++ trunk/yake/yake/samples/net/roserver/pch.h	2006-01-15 21:42:37 UTC (rev 1190)
@@ -0,0 +1,11 @@
+#ifndef PCH_H
+#define PCH_H
+
+#include <boost/function.hpp>
+#include <boost/bind.hpp>
+#include <map>
+#include <vector>
+#include <deque>
+#include <boost/thread/mutex.hpp>
+
+#endif



From codeandroid at berlios.de  Tue Jan 17 21:50:40 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Tue, 17 Jan 2006 21:50:40 +0100
Subject: [Yake-svn] r1191 - in trunk/yake: src/yake/samples src/yake/samples/audio src/yake/samples/audio/demo1 yake/samples yake/samples/audio yake/samples/audio/demo1
Message-ID: <200601172050.k0HKoeSZ009370@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-17 21:50:39 +0100 (Tue, 17 Jan 2006)
New Revision: 1191

Added:
   trunk/yake/src/yake/samples/audio/
   trunk/yake/src/yake/samples/audio/demo1/
   trunk/yake/src/yake/samples/audio/demo1/demo.cpp
   trunk/yake/src/yake/samples/audio/demo1/pch.cpp
   trunk/yake/yake/samples/audio/
   trunk/yake/yake/samples/audio/demo1/
   trunk/yake/yake/samples/audio/demo1/pch.h
Log:
initial revision

Added: trunk/yake/src/yake/samples/audio/demo1/demo.cpp
===================================================================
--- trunk/yake/src/yake/samples/audio/demo1/demo.cpp	2006-01-15 21:42:37 UTC (rev 1190)
+++ trunk/yake/src/yake/samples/audio/demo1/demo.cpp	2006-01-17 20:50:39 UTC (rev 1191)
@@ -0,0 +1,48 @@
+#include <yake/samples/audio/demo1/pch.h>
+
+int main(int argc,char* argv[])
+{
+	std::cout << "starting...\n";
+
+	// loading & starting plugin
+	using namespace yake;
+	SharedPtr<base::Library> pLib( new base::Library( "audioOpenAL" ) );
+	SharedPtr<audio::IAudioSystem> pAudio = create_default<audio::IAudioSystem>();
+
+	// create world
+	SharedPtr<audio::IWorld> pWorld;
+	pWorld.reset( pAudio->createWorld() );
+
+	// init listener
+	SharedPtr<audio::IListener> pListener;
+	pListener.reset( pWorld->createListener() );
+	pWorld->setActiveListener( pListener.get() );
+
+	// load audio data
+	SharedPtr<audio::ISource> pSource1;
+	pSource1.reset( pWorld->createSource() );
+
+	// create sound souce & attach audio data
+	SharedPtr<audio::ISoundData> pData1;
+	pData1.reset( pWorld->createSoundDataFromFile("../../media/audio/Forest1.L.wav") );
+
+	pSource1->setSoundData( pData1.get() );
+
+	// start playing
+	pSource1->play();
+
+	// wait for stop
+	std::cout << "running...\npress a key to stop...\n";
+	while (!_kbhit())
+		::Sleep(10);
+	_getch();
+
+	pSource1.reset();
+	pData1.reset();
+	pListener.reset();
+	pWorld.reset();
+	pAudio.reset();
+	pLib.reset();
+
+	return 0;
+}
\ No newline at end of file

Added: trunk/yake/src/yake/samples/audio/demo1/pch.cpp
===================================================================
--- trunk/yake/src/yake/samples/audio/demo1/pch.cpp	2006-01-15 21:42:37 UTC (rev 1190)
+++ trunk/yake/src/yake/samples/audio/demo1/pch.cpp	2006-01-17 20:50:39 UTC (rev 1191)
@@ -0,0 +1 @@
+#include <yake/samples/audio/demo1/pch.h>

Added: trunk/yake/yake/samples/audio/demo1/pch.h
===================================================================
--- trunk/yake/yake/samples/audio/demo1/pch.h	2006-01-15 21:42:37 UTC (rev 1190)
+++ trunk/yake/yake/samples/audio/demo1/pch.h	2006-01-17 20:50:39 UTC (rev 1191)
@@ -0,0 +1,5 @@
+#include <yake/base/yake.h>
+#include <yake/audio/yakeAudio.h>
+#include <conio.h>
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>



From codeandroid at berlios.de  Tue Jan 17 21:51:18 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Tue, 17 Jan 2006 21:51:18 +0100
Subject: [Yake-svn] r1192 - in trunk/yake/scripts/msvc8/samples: . audio
Message-ID: <200601172051.k0HKpI3W009493@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-17 21:51:18 +0100 (Tue, 17 Jan 2006)
New Revision: 1192

Added:
   trunk/yake/scripts/msvc8/samples/audio/
   trunk/yake/scripts/msvc8/samples/audio/sampleAudio1.vcproj
Log:
initial revision

Added: trunk/yake/scripts/msvc8/samples/audio/sampleAudio1.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/samples/audio/sampleAudio1.vcproj	2006-01-17 20:50:39 UTC (rev 1191)
+++ trunk/yake/scripts/msvc8/samples/audio/sampleAudio1.vcproj	2006-01-17 20:51:18 UTC (rev 1192)
@@ -0,0 +1,222 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="8,00"
+	Name="sampleAudio1"
+	ProjectGUID="{726DFDDE-71FA-403B-8F58-6DA9DF0EF297}"
+	RootNamespace="sampleAudio1"
+	Keyword="Win32Proj"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="../../../../common/bin/debug"
+			IntermediateDirectory="../../../../common/obj/debug/$(ProjectName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_CONSOLE"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/samples/audio/demo1/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="2"
+				AdditionalLibraryDirectories="../../../../common/lib/$(ConfigurationName);../../../../dependencies/lib"
+				GenerateDebugInformation="true"
+				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
+				SubSystem="1"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="../../../../common/bin/release"
+			IntermediateDirectory="../../../../common/obj/release/$(ProjectName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories="../../../../;../../../../dependencies/boost/;../../../../dependencies/ttl/"
+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
+				RuntimeLibrary="2"
+				UsePrecompiledHeader="2"
+				PrecompiledHeaderThrough="yake/samples/audio/demo1/pch.h"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				OutputFile="$(OutDir)/$(ProjectName).exe"
+				LinkIncremental="1"
+				AdditionalLibraryDirectories="../../../../common/lib/$(ConfigurationName);../../../../dependencies/lib"
+				GenerateDebugInformation="false"
+				SubSystem="1"
+				OptimizeReferences="2"
+				EnableCOMDATFolding="2"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCWebDeploymentTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="inc"
+			>
+			<File
+				RelativePath="..\..\..\..\yake\samples\audio\demo1\pch.h"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="src"
+			>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\audio\demo1\demo.cpp"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\..\src\yake\samples\audio\demo1\pch.cpp"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						UsePrecompiledHeader="1"
+					/>
+				</FileConfiguration>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>



From codeandroid at berlios.de  Tue Jan 17 21:51:50 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Tue, 17 Jan 2006 21:51:50 +0100
Subject: [Yake-svn] r1193 - trunk/yake/scripts/msvc8
Message-ID: <200601172051.k0HKpoTZ009551@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-17 21:51:50 +0100 (Tue, 17 Jan 2006)
New Revision: 1193

Modified:
   trunk/yake/scripts/msvc8/yake.sln
Log:


Modified: trunk/yake/scripts/msvc8/yake.sln
===================================================================
--- trunk/yake/scripts/msvc8/yake.sln	2006-01-17 20:51:18 UTC (rev 1192)
+++ trunk/yake/scripts/msvc8/yake.sln	2006-01-17 20:51:50 UTC (rev 1193)
@@ -9,14 +9,14 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "graphicsOGRE", "plugins\graphics\graphicsOgre.vcproj", "{A2C2A0B2-2EB0-4254-891D-FE93466809CF}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "registryPluginConcrete", "samples\base\registryPluginConcrete.vcproj", "{F6E2B937-448D-4ADE-9A8F-7DDF0CB38865}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{F6E2B937-449D-4ADE-9A8F-7DDF0CB38866} = {F6E2B937-449D-4ADE-9A8F-7DDF0CB38866}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "registryPluginInterface", "samples\base\registryPluginInterface.vcproj", "{F6E2B937-449D-4ADE-9A8F-7DDF0CB38866}"
@@ -41,25 +41,25 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleRegistryPlugin", "samples\base\sampleRegistryPlugin.vcproj", "{6876FBCB-B5AD-493E-ADE4-F81441BC4EF2}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{F6E2B937-449D-4ADE-9A8F-7DDF0CB38866} = {F6E2B937-449D-4ADE-9A8F-7DDF0CB38866}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleRegistryPluginManual", "samples\base\sampleRegistryPluginManual.vcproj", "{6876FBCB-B5AD-494E-ADE4-F81441BC4EF9}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{F6E2B937-449D-4ADE-9A8F-7DDF0CB38866} = {F6E2B937-449D-4ADE-9A8F-7DDF0CB38866}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleGraphicsDemo", "samples\graphics\sampleGraphicsDemo.vcproj", "{723A2F36-A3DC-40E5-A7B0-0629219B04DE}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
+		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
+		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
+		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
+		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
+		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
 		{1AF3930A-4E72-4455-AFD0-6B78684105CD} = {1AF3930A-4E72-4455-AFD0-6B78684105CD}
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
-		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "physics", "physics.vcproj", "{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}"
@@ -69,8 +69,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "physicsODE", "plugins\physics\physicsODE.vcproj", "{2F5124AA-56BD-4909-811A-E79901978C86}"
 	ProjectSection(ProjectDependencies) = postProject
+		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
 		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
-		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "input", "input.vcproj", "{1AF3930A-4E72-4455-AFD0-6B78684105CD}"
@@ -80,8 +80,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "inputOGRE", "plugins\input\inputOgre.vcproj", "{A1A2FE19-7B7E-42F1-808B-8FA5B6AA697E}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{1AF3930A-4E72-4455-AFD0-6B78684105CD} = {1AF3930A-4E72-4455-AFD0-6B78684105CD}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "scripting", "scripting.vcproj", "{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}"
@@ -91,20 +91,20 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "scriptingLua", "plugins\scripting\scriptingLua.vcproj", "{41CEA11B-9678-43E5-B2F4-754944D7B461}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleScriptingLua", "samples\scripting\sampleScriptingLua.vcproj", "{26B28ECB-A1FD-4CC0-A5EE-6E4587BBB058}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
+		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
+		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
+		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
+		{CA63F621-0912-4551-B51A-7BD18F491181} = {CA63F621-0912-4551-B51A-7BD18F491181}
+		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
+		{41CEA11B-9678-43E5-B2F4-754944D7B461} = {41CEA11B-9678-43E5-B2F4-754944D7B461}
 		{1AF3930A-4E72-4455-AFD0-6B78684105CD} = {1AF3930A-4E72-4455-AFD0-6B78684105CD}
-		{41CEA11B-9678-43E5-B2F4-754944D7B461} = {41CEA11B-9678-43E5-B2F4-754944D7B461}
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
-		{CA63F621-0912-4551-B51A-7BD18F491181} = {CA63F621-0912-4551-B51A-7BD18F491181}
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "data", "data.vcproj", "{77A59B89-C2B3-429C-8317-ADE0D046CC3B}"
@@ -119,8 +119,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "scriptingBindingsLua", "plugins\scripting\scriptingLuaBindings.vcproj", "{CA63F621-0912-4551-B51A-7BD18F491181}"
 	ProjectSection(ProjectDependencies) = postProject
+		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
 		{41CEA11B-9678-43E5-B2F4-754944D7B461} = {41CEA11B-9678-43E5-B2F4-754944D7B461}
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "audio", "audio.vcproj", "{42BB6F78-B04C-4968-AA5E-271DC45BEFBB}"
@@ -140,13 +140,13 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "samplePhysicsDemo", "samples\physics\samplePhysicsDemo.vcproj", "{3DA99679-404B-44C7-9267-C97D066F3D96}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
+		{2F5124AA-56BD-4909-811A-E79901978C86} = {2F5124AA-56BD-4909-811A-E79901978C86}
+		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
+		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
+		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
+		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
 		{1AF3930A-4E72-4455-AFD0-6B78684105CD} = {1AF3930A-4E72-4455-AFD0-6B78684105CD}
-		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
-		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
-		{2F5124AA-56BD-4909-811A-E79901978C86} = {2F5124AA-56BD-4909-811A-E79901978C86}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "reflection", "reflection.vcproj", "{215FEC33-87C9-47E1-80EF-2FC735508B57}"
@@ -155,38 +155,38 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleThread1", "samples\thread\sampleThread1.vcproj", "{2E9B8C5F-AC44-478B-AE7F-8C6DC3EA3654}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{AA46155A-CCE2-4B9F-BBA2-84E827CF6222} = {AA46155A-CCE2-4B9F-BBA2-84E827CF6222}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sample_application", "samples\application\sample_application.vcproj", "{44C8B2A3-281A-4910-A737-7EA1F6F43E35}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "graphicsBindingsLua", "plugins\scripting\graphicsLuaBindings.vcproj", "{2D5E8A7F-96DA-4CC5-BFC8-430916ACF18A}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
+		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
+		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
 		{41CEA11B-9678-43E5-B2F4-754944D7B461} = {41CEA11B-9678-43E5-B2F4-754944D7B461}
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "baseBindingsLua", "plugins\scripting\baseLuaBindings.vcproj", "{3867E9A4-41F3-4969-B0A8-40757BCB6C29}"
 	ProjectSection(ProjectDependencies) = postProject
+		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
+		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
 		{41CEA11B-9678-43E5-B2F4-754944D7B461} = {41CEA11B-9678-43E5-B2F4-754944D7B461}
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
-		{D29771DD-715F-452B-B71C-911BACF5956D} = {D29771DD-715F-452B-B71C-911BACF5956D}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "yapp", "yapp.vcproj", "{F1116FDF-65C1-4788-AC1F-F339279B937A}"
 	ProjectSection(ProjectDependencies) = postProject
+		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
+		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
+		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
+		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
 		{1C674F1C-7DDF-4AC5-A52A-14C31248A9D4} = {1C674F1C-7DDF-4AC5-A52A-14C31248A9D4}
-		{ECC8FA24-93AC-4659-8EBD-26B6F418AC64} = {ECC8FA24-93AC-4659-8EBD-26B6F418AC64}
-		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
-		{77A59B89-C2B3-429C-8317-ADE0D046CC3B} = {77A59B89-C2B3-429C-8317-ADE0D046CC3B}
-		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "raf", "raf.vcproj", "{6D6DD5E8-3B81-4C98-B460-B434DEE23EE2}"
@@ -205,8 +205,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleEvents", "samples\base\sampleEvents.vcproj", "{CD6F13A0-F399-411A-9766-0F8E02761D90}"
 	ProjectSection(ProjectDependencies) = postProject
+		{F1116FDF-65C1-4788-AC1F-F339279B937A} = {F1116FDF-65C1-4788-AC1F-F339279B937A}
 		{7EB6A55E-D262-4C82-862C-33E831DDF04C} = {7EB6A55E-D262-4C82-862C-33E831DDF04C}
-		{F1116FDF-65C1-4788-AC1F-F339279B937A} = {F1116FDF-65C1-4788-AC1F-F339279B937A}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleVehicle", "samples\base\sampleVehicle.vcproj", "{B9A9E534-6EB6-4667-B91B-74B930636F5E}"
@@ -233,8 +233,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleScriptedGraphics", "samples\misc\sampleScriptedGraphics.vcproj", "{B85C2435-267A-461C-AD9E-FE28EE7DCC12}"
 	ProjectSection(ProjectDependencies) = postProject
+		{F1116FDF-65C1-4788-AC1F-F339279B937A} = {F1116FDF-65C1-4788-AC1F-F339279B937A}
 		{CA63F621-0912-4551-B51A-7BD18F491181} = {CA63F621-0912-4551-B51A-7BD18F491181}
-		{F1116FDF-65C1-4788-AC1F-F339279B937A} = {F1116FDF-65C1-4788-AC1F-F339279B937A}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleDotLink", "samples\model\sampleDotLink.vcproj", "{1C76B4C7-8ECE-4C0D-81B4-B65707F96510}"
@@ -246,8 +246,8 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleXODE", "samples\model\sampleXODE.vcproj", "{0FCB117D-9915-40AE-A86D-99C3D6EB7B2C}"
 	ProjectSection(ProjectDependencies) = postProject
+		{F1116FDF-65C1-4788-AC1F-F339279B937A} = {F1116FDF-65C1-4788-AC1F-F339279B937A}
 		{8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03} = {8A16CDB5-B272-49AD-AF22-B8FD0E5E1A03}
-		{F1116FDF-65C1-4788-AC1F-F339279B937A} = {F1116FDF-65C1-4788-AC1F-F339279B937A}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleRafDemo1", "samples\raf\sampleRafDemo1.vcproj", "{BAA11C61-DA21-4E6F-8B5C-16A062720F1C}"
@@ -280,6 +280,11 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleRoClient", "samples\net\sampleRoClient.vcproj", "{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}"
 EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "sampleAudio1", "samples\audio\sampleAudio1.vcproj", "{726DFDDE-71FA-403B-8F58-6DA9DF0EF297}"
+	ProjectSection(ProjectDependencies) = postProject
+		{42BB6F78-B04C-4968-AA5E-271DC45BEFBB} = {42BB6F78-B04C-4968-AA5E-271DC45BEFBB}
+	EndProjectSection
+EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Win32 = Debug|Win32
@@ -516,6 +521,10 @@
 		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Debug|Win32.Build.0 = Debug|Win32
 		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Release|Win32.ActiveCfg = Release|Win32
 		{4F5EEBEB-7594-4934-8DF5-FB4604E84CCB}.Release|Win32.Build.0 = Release|Win32
+		{726DFDDE-71FA-403B-8F58-6DA9DF0EF297}.Debug|Win32.ActiveCfg = Debug|Win32
+		{726DFDDE-71FA-403B-8F58-6DA9DF0EF297}.Debug|Win32.Build.0 = Debug|Win32
+		{726DFDDE-71FA-403B-8F58-6DA9DF0EF297}.Release|Win32.ActiveCfg = Release|Win32
+		{726DFDDE-71FA-403B-8F58-6DA9DF0EF297}.Release|Win32.Build.0 = Release|Win32
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE



From codeandroid at berlios.de  Tue Jan 17 21:53:09 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Tue, 17 Jan 2006 21:53:09 +0100
Subject: [Yake-svn] r1194 - in trunk/yake/scripts/msvc8: . samples/model
Message-ID: <200601172053.k0HKr9mZ009719@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-17 21:53:09 +0100 (Tue, 17 Jan 2006)
New Revision: 1194

Removed:
   trunk/yake/scripts/msvc8/yapp.vcproj
Modified:
   trunk/yake/scripts/msvc8/base.vcproj
   trunk/yake/scripts/msvc8/raf.vcproj
   trunk/yake/scripts/msvc8/samples/model/sampleXODE.vcproj
Log:
various fixes

Modified: trunk/yake/scripts/msvc8/base.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/base.vcproj	2006-01-17 20:51:50 UTC (rev 1193)
+++ trunk/yake/scripts/msvc8/base.vcproj	2006-01-17 20:53:09 UTC (rev 1194)
@@ -626,6 +626,14 @@
 								Name="VCResourceCompilerTool"
 							/>
 						</FileConfiguration>
+						<FileConfiguration
+							Name="Release|Win32"
+							ExcludedFromBuild="true"
+							>
+							<Tool
+								Name="VCResourceCompilerTool"
+							/>
+						</FileConfiguration>
 					</File>
 					<File
 						RelativePath="..\..\yake\base\native\win32\yakeConfig.h"

Modified: trunk/yake/scripts/msvc8/raf.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/raf.vcproj	2006-01-17 20:51:50 UTC (rev 1193)
+++ trunk/yake/scripts/msvc8/raf.vcproj	2006-01-17 20:53:09 UTC (rev 1194)
@@ -124,7 +124,7 @@
 			/>
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
+				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl;../../dependencies/cegui_mk2"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;YAKE_RAF_EXPORTS"
 				RuntimeLibrary="2"
 				RuntimeTypeInfo="true"
@@ -148,7 +148,7 @@
 				AdditionalDependencies="base.lib physics.lib data.lib scripting.lib graphics.lib input.lib audio.lib"
 				OutputFile="$(OutDir)/$(ProjectName).dll"
 				LinkIncremental="1"
-				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
+				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib;../../dependencies/cegui_mk2/lib"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
 				SubSystem="1"

Modified: trunk/yake/scripts/msvc8/samples/model/sampleXODE.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/samples/model/sampleXODE.vcproj	2006-01-17 20:51:50 UTC (rev 1193)
+++ trunk/yake/scripts/msvc8/samples/model/sampleXODE.vcproj	2006-01-17 20:53:09 UTC (rev 1194)
@@ -142,6 +142,7 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib"
 				OutputFile="$(OutDir)/$(ProjectName).exe"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="../../../../common/lib/release;../../../../dependencies/lib"

Deleted: trunk/yake/scripts/msvc8/yapp.vcproj
===================================================================
--- trunk/yake/scripts/msvc8/yapp.vcproj	2006-01-17 20:51:50 UTC (rev 1193)
+++ trunk/yake/scripts/msvc8/yapp.vcproj	2006-01-17 20:53:09 UTC (rev 1194)
@@ -1,704 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="8,00"
-	Name="yapp"
-	ProjectGUID="{F1116FDF-65C1-4788-AC1F-F339279B937A}"
-	RootNamespace="yapp"
-	Keyword="Win32Proj"
-	>
-	<Platforms>
-		<Platform
-			Name="Win32"
-		/>
-	</Platforms>
-	<ToolFiles>
-	</ToolFiles>
-	<Configurations>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="../../common/bin/$(ConfigurationName)"
-			IntermediateDirectory="../../common/obj/$(ConfigurationName)/$(ProjectName)"
-			ConfigurationType="2"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
-				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_CONSOLE;YAPP_BASE_EXPORTS;YAPP_GUI_EXPORTS"
-				MinimalRebuild="true"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="2"
-				PrecompiledHeaderThrough="yapp/base/yappPCH.h"
-				WarningLevel="3"
-				Detect64BitPortabilityProblems="true"
-				DebugInformationFormat="4"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				AdditionalDependencies="base.lib physics.lib data.lib"
-				OutputFile="$(OutDir)/$(ProjectName).dll"
-				LinkIncremental="2"
-				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
-				GenerateDebugInformation="true"
-				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
-				SubSystem="1"
-				ImportLibrary="../../common/lib/$(ConfigurationName)/$(ProjectName).lib"
-				TargetMachine="1"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCWebDeploymentTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="../../common/bin/$(ConfigurationName)"
-			IntermediateDirectory="../../common/obj/$(ConfigurationName)/$(ProjectName)"
-			ConfigurationType="2"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="../../;../../dependencies;../../dependencies/boost;../../dependencies/ttl"
-				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;YAPP_BASE_EXPORTS;YAPP_GUI_EXPORTS"
-				RuntimeLibrary="2"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="2"
-				PrecompiledHeaderThrough="yapp/base/yappPCH.h"
-				WarningLevel="3"
-				Detect64BitPortabilityProblems="true"
-				DebugInformationFormat="3"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				AdditionalDependencies="base.lib physics.lib data.lib"
-				OutputFile="$(OutDir)/$(ProjectName).dll"
-				LinkIncremental="1"
-				AdditionalLibraryDirectories="../../common/lib/$(ConfigurationName);../../dependencies/lib"
-				GenerateDebugInformation="true"
-				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
-				SubSystem="1"
-				OptimizeReferences="2"
-				EnableCOMDATFolding="2"
-				ImportLibrary="../../common/lib/$(ConfigurationName)/$(ProjectName).lib"
-				TargetMachine="1"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCWebDeploymentTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="src"
-			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
-			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
-			>
-			<File
-				RelativePath="..\..\src\yapp\base\yakeTask.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\base\yapp.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\base\yappPCH.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						UsePrecompiledHeader="1"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						UsePrecompiledHeader="1"
-					/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="inc"
-			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
-			>
-			<File
-				RelativePath="..\..\yapp\base\yakeTask.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\yapp.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\yappPCH.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\yappPrerequisites.h"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="gui"
-			>
-			<File
-				RelativePath="..\inc\gui\yappButton.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\src\gui\yappContainer.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappContainer.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappGeometry.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\src\gui\yappGUI.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappGUI.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\src\gui\yappGUIVisual.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappGUIVisual.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappIntersectionManager.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappMiscWidgets.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\src\gui\yappWidget.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappWidget.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\inc\gui\yappWidgetRep.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="model"
-			>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeActor.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeActor.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeComplexModel.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeComplexModel.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeGraphical.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeGraphical.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeGraphicalDataImporter.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeGraphicalDataImporter.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeModel.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeModelLink.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeModelLink.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeModelMovableLink.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeModelMovableLink.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeMountable.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeMountable.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakePhysical.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakePhysical.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakePhysicalDataImporter.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakePhysicalDataImporter.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeUpdaters.h"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="messaging"
-			>
-			<File
-				RelativePath="..\..\yapp\base\event\yakeEvent.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\base\event\yakeMessageId.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\event\yakeMessageId.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\base\event\yakeMessageInstance.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\event\yakeMessageInstance.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\event\yakeMessageListener.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\base\event\yakeMessageManager.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\event\yakeMessageManager.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\base\event\yakeMessageQ.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\base\event\yakeMessageQ.h"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="loader"
-			>
-			<File
-				RelativePath="..\..\src\yapp\loader\yakeDotLinkLoader.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\loader\yakeDotLinkLoader.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\loader\yakeDotScene.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\loader\yakeDotScene.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\loader\yakeModelLinkCreator.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\loader\yakeModelLinkCreator.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\loader\yakeModelMovableLinkCreator.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\loader\yakeModelMovableLinkCreator.h"
-				>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\loader\yakeXODEParser.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\loader\yakeXODEParser.h"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="statemachine"
-			>
-			<File
-				RelativePath="..\..\src\yapp\statemachine\yakeFiniteStateMachine.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\..\yapp\statemachine\yakeFiniteStateMachine.h"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="trigger"
-			>
-			<File
-				RelativePath="..\..\yapp\trigger\yakeTrigger.h"
-				>
-			</File>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>



From codeandroid at berlios.de  Tue Jan 17 21:54:29 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Tue, 17 Jan 2006 21:54:29 +0100
Subject: [Yake-svn] r1195 - trunk/yake
Message-ID: <200601172054.k0HKsTm2009815@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-17 21:54:29 +0100 (Tue, 17 Jan 2006)
New Revision: 1195

Modified:
   trunk/yake/INSTALL
Log:
added reference to bug tracker

Modified: trunk/yake/INSTALL
===================================================================
--- trunk/yake/INSTALL	2006-01-17 20:53:09 UTC (rev 1194)
+++ trunk/yake/INSTALL	2006-01-17 20:54:29 UTC (rev 1195)
@@ -6,3 +6,5 @@
 If you encounter problems visit:
   the forums at http://www.yake.org/forum
   the wiki at http://www.yake.org/wiki
+  report/track bugs at http://www.yake.org/mantis
+



From codeandroid at berlios.de  Sat Jan 28 22:31:32 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Sat, 28 Jan 2006 22:31:32 +0100
Subject: [Yake-svn] r1196 - trunk/yake/yapp/statemachine
Message-ID: <200601282131.k0SLVWpA026354@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-28 22:31:30 +0100 (Sat, 28 Jan 2006)
New Revision: 1196

Modified:
   trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h
Log:
fixed misnamed variable

Modified: trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h
===================================================================
--- trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h	2006-01-17 20:54:29 UTC (rev 1195)
+++ trunk/yake/yapp/statemachine/yakeFiniteStateMachine.h	2006-01-28 21:31:30 UTC (rev 1196)
@@ -302,7 +302,7 @@
 			{
 				return false;
 			}
-			rTansition = itFind->second;
+			rTransition = itFind->second;
 			return true;
 		}
 		bool _hasTransition( const StateIdPair& idPair )



From codeandroid at berlios.de  Mon Jan 30 21:09:37 2006
From: codeandroid at berlios.de (codeandroid at BerliOS)
Date: Mon, 30 Jan 2006 21:09:37 +0100
Subject: [Yake-svn] r1197 - trunk/yake/documentation/api
Message-ID: <200601302009.k0UK9b7P005701@sheep.berlios.de>

Author: codeandroid
Date: 2006-01-30 21:09:35 +0100 (Mon, 30 Jan 2006)
New Revision: 1197

Modified:
   trunk/yake/documentation/api/api.cfg
Log:
added directories

Modified: trunk/yake/documentation/api/api.cfg
===================================================================
--- trunk/yake/documentation/api/api.cfg	2006-01-28 21:31:30 UTC (rev 1196)
+++ trunk/yake/documentation/api/api.cfg	2006-01-30 20:09:35 UTC (rev 1197)
@@ -23,7 +23,7 @@
 # This could be handy for archiving the generated documentation or 
 # if some version control system is used.
 
-PROJECT_NUMBER         = 0.2dev
+PROJECT_NUMBER         = 0.5dev
 
 # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) 
 # base path where the generated documentation will be put. 
@@ -451,12 +451,29 @@
 # with spaces.
 
 INPUT                  = yake/base yake/base/templates yake/base/native
+INPUT += yake/plugins/graphicsOgre
+INPUT += yake/plugins/physicsNx
+INPUT += yake/plugins/physicsOde
+INPUT += yake/plugins/inputOgre
+INPUT += yake/plugins/audioOpenAL
+INPUT += yake/plugins/baseLuaBindings
+INPUT += yake/plugins/graphicsLuaBindings
+INPUT += yake/plugins/scriptingLua
+INPUT += yake/plugins/scriptingLuaBindings
+INPUT += yapp/plugins/entLua
+INPUT += yapp/plugins/modelLua
+INPUT += yapp/plugins/ceguiOgreRendererAdapter
 INPUT += yake/graphics
 INPUT += yake/audio
 INPUT += yake/input
 INPUT += yake/physics
 INPUT += yake/file
 INPUT += yake/data
+INPUT += yake/scripting
+INPUT += yake/audio
+INPUT += yake/common
+INPUT += yake/object
+#INPUT += yake/net
 #INPUT += yake/reflection
 INPUT += documentation/api
 INPUT += yapp/base
@@ -464,6 +481,13 @@
 INPUT += yapp/loader
 INPUT += yapp/ent
 INPUT += yapp/statemachine
+INPUT += yapp/base
+INPUT += yapp/msg
+INPUT += yapp/vehicle
+INPUT += yapp/raf
+INPUT += yapp/common
+INPUT += yapp/gui_adapter
+INPUT += yapp/gui_addons
 
 # If the value of the INPUT tag contains directories, you can use the 
 # FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 



