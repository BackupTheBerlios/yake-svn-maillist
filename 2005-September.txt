From codeandroid at berlios.de  Wed Sep 21 23:04:07 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Wed, 21 Sep 2005 23:04:07 +0200
Subject: [Yake-svn] r929 - trunk/yake/src/yapp/loader
Message-ID: <200509212104.j8LL47Sj027922@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-21 23:04:05 +0200 (Wed, 21 Sep 2005)
New Revision: 929

Modified:
   trunk/yake/src/yapp/loader/yakeDotScene.cpp
Log:
fixed shadow option parsing

Modified: trunk/yake/src/yapp/loader/yakeDotScene.cpp
===================================================================
--- trunk/yake/src/yapp/loader/yakeDotScene.cpp	2005-09-05 22:29:59 UTC (rev 928)
+++ trunk/yake/src/yapp/loader/yakeDotScene.cpp	2005-09-21 21:04:05 UTC (rev 929)
@@ -200,7 +200,7 @@
 		desc.meshFile = pNode->getAttributeValueAs<String>( "meshFile" );
 		
 		String castsShadows = StringUtil::toLowerCase(pNode->getAttributeValueAs<String>("castsShadow"));
-		desc.castsShadows = castsShadows == "yes";
+		desc.castsShadows = castsShadows == "yes" || castsShadows == "true" || castsShadows == "1";
 
 		// Entity description ready. Fire!
 		mSigEntity( desc );
@@ -314,6 +314,8 @@
 		YAKE_ASSERT( pNode );
 		
 		String lightType = pNode->getAttributeValueAs<String>( "type" );
+		String castsShadows = pNode->getAttributeValueAs<String>( "castShadows" );
+		desc.castsShadows = castsShadows == "yes" || castsShadows == "true" || castsShadows == "1";
 				
 		desc.type = graphics::ILight::LT_POINT;
 		



From codeandroid at berlios.de  Fri Sep 23 22:41:06 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 23 Sep 2005 22:41:06 +0200
Subject: [Yake-svn] r930 - in trunk/yake: scripts/yake/plugins/physics src/yake/plugins/physicsNX yake/plugins/physicsNX
Message-ID: <200509232041.j8NKf6s3004650@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-23 22:41:06 +0200 (Fri, 23 Sep 2005)
New Revision: 930

Modified:
   trunk/yake/scripts/yake/plugins/physics/physicsNX.vcproj
   trunk/yake/src/yake/plugins/physicsNX/NxPhysicsSystem.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakePhysicsTrimeshNx.cpp
   trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp
   trunk/yake/yake/plugins/physicsNX/NxPhysicsSystem.h
   trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h
   trunk/yake/yake/plugins/physicsNX/yakePCH.h
Log:
patch 1230764 by Joel Croteau - updated physicsNX to use Nx 2.2

Modified: trunk/yake/scripts/yake/plugins/physics/physicsNX.vcproj
===================================================================
--- trunk/yake/scripts/yake/plugins/physics/physicsNX.vcproj	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/scripts/yake/plugins/physics/physicsNX.vcproj	2005-09-23 20:41:06 UTC (rev 930)
@@ -19,7 +19,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="$(NXSDK_DIR)/Physics/Include;$(NXSDK_DIR)/Foundation/include;../../../../;../../../../dependencies/ttl/;../../../../dependencies/boost/"
+				AdditionalIncludeDirectories="$(NXSDK_DIR)/Physics/Include;$(NXSDK_DIR)/Foundation/include;$(NXSDK_DIR)/NxExtensions/Include;../../../../;../../../../dependencies/ttl/;../../../../dependencies/boost/"
 				PreprocessorDefinitions="_STLP_DEBUG;WIN32;_DEBUG;_WINDOWS;_USRDLL;YAKE_PHYSICS_NX_EXPORTS"
 				MinimalRebuild="TRUE"
 				BasicRuntimeChecks="3"
@@ -34,10 +34,10 @@
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="physics.lib NxPhysics.lib"
+				AdditionalDependencies="physics.lib NxPhysics.lib NxExtensionsDLL.lib"
 				OutputFile="$(OutDir)/$(ProjectName).dll"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories="../../../../common/lib/debug;$(NXSDK_DIR)/Physics/lib/win32/release;../../../../dependencies/lib"
+				AdditionalLibraryDirectories="../../../../common/lib/debug;$(NXSDK_DIR)/Physics/lib/win32/release;$(NXSDK_DIR)/NxExtensions/lib/win32/release;../../../../dependencies/lib"
 				ModuleDefinitionFile=""
 				GenerateDebugInformation="TRUE"
 				ProgramDatabaseFile="$(OutDir)/$(ProjectName).pdb"
@@ -73,7 +73,7 @@
 			CharacterSet="2">
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="$(NXSDK_DIR)/Physics/Include;$(NXSDK_DIR)/Foundation/include;../../../../;../../../../dependencies/ttl/;../../../../dependencies/boost/"
+				AdditionalIncludeDirectories="$(NXSDK_DIR)/Physics/Include;$(NXSDK_DIR)/Foundation/include;$(NXSDK_DIR)/NxExtensions/Include;../../../../;../../../../dependencies/ttl/;../../../../dependencies/boost/"
 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;YAKE_PHYSICS_NX_EXPORTS"
 				RuntimeLibrary="2"
 				RuntimeTypeInfo="TRUE"
@@ -86,7 +86,7 @@
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="physics.lib NxPhysics.lib"
+				AdditionalDependencies="physics.lib NxPhysics.lib NxExtensionsDLL.lib"
 				OutputFile="$(OutDir)/$(ProjectName).dll"
 				LinkIncremental="1"
 				AdditionalLibraryDirectories="../../../../common/lib/release;$(NXSDK_DIR)/Physics/lib/win32/release;../../../../dependencies/lib"

Modified: trunk/yake/src/yake/plugins/physicsNX/NxPhysicsSystem.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/NxPhysicsSystem.cpp	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/src/yake/plugins/physicsNX/NxPhysicsSystem.cpp	2005-09-23 20:41:06 UTC (rev 930)
@@ -83,7 +83,13 @@
 		return NxPhysicsSystem::mpNxSDK;
 	}
 
+	NxExtensions* getNxExt()
+	{
+		return NxPhysicsSystem::mpNxExt;
+	}
+
 	NxPhysicsSDK* NxPhysicsSystem::mpNxSDK = 0;
+	NxExtensions* NxPhysicsSystem::mpNxExt = 0;
 
 	//------------------------------------------------------
 	NxPhysicsSystem::NxPhysicsSystem() : IPhysicsSystem()
@@ -95,16 +101,15 @@
 		if (!mpNxSDK)
 			return;
 
+		YAKE_ASSERT(!mpNxExt);
+		if (mpNxExt)
+			return;
+		mpNxExt = GetNxExtensions(0, &gErrorStream, 0);
+
 		// default settings
 		mpNxSDK->setParameter(NX_MIN_SEPARATION_FOR_PENALTY, -0.05f);
 
-		// default material
-		NxMaterial	defaultMaterial;
-		defaultMaterial.restitution		= 0.0f;
-		defaultMaterial.staticFriction	= 0.9f;
-		defaultMaterial.dynamicFriction	= 0.9f;
-		YAKE_ASSERT( defaultMaterial.isValid() );
-		mpNxSDK->setMaterialAtIndex(0, &defaultMaterial);
+
 	}
 
 	//------------------------------------------------------

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeMaterialNx.cpp	2005-09-23 20:41:06 UTC (rev 930)
@@ -44,16 +44,21 @@
 	MaterialNx::~MaterialNx()
 	{
 		//@todo
+		mpScene->releaseMaterial(*mpScene->getMaterialFromIndex(mNxMatIndex));
 	}
-	void MaterialNx::_createFromDesc( const IMaterial::Desc & rDesc )
+	void MaterialNx::_createFromDesc( const IMaterial::Desc & rDesc, NxScene* pScene )
 	{
-		NxMaterial nxMat;
-		nxMat.setToDefault();
-		nxMat.restitution = toNx( rDesc.mRestitution );
-		nxMat.staticFriction = toNx( rDesc.mStaticFriction );
-		nxMat.staticFrictionV = 0;
-		YAKE_ASSERT( nxMat.isValid() );
-		mNxMatIndex = getNxSDK()->addMaterial( nxMat );
+		mpScene = pScene;
+		NxMaterialDesc nxDesc;
+		NxMaterial* defaultMaterial = mpScene->getMaterialFromIndex(0);
+		defaultMaterial->saveToDesc(nxDesc);
+		nxDesc.restitution = toNx( rDesc.mRestitution );
+		nxDesc.staticFriction = toNx( rDesc.mStaticFriction );
+		nxDesc.staticFrictionV = 0.0f;
+		YAKE_ASSERT( nxDesc.isValid() );
+		NxMaterial* nxMat = mpScene->createMaterial(nxDesc);
+
+		mNxMatIndex = nxMat->getMaterialIndex();
 	}
 	void MaterialNx::setBounciness(const real bounciness)
 	{
@@ -66,21 +71,21 @@
 	}
 	void MaterialNx::setRestitution(const real restitution)
 	{
-		NxMaterial* pNxMat = getNxSDK()->getMaterial( mNxMatIndex );
+		NxMaterial* pNxMat = mpScene->getMaterialFromIndex( mNxMatIndex );
 		YAKE_ASSERT( pNxMat );
-		pNxMat->restitution = restitution;
+		pNxMat->setRestitution(restitution);
 	}
 	void MaterialNx::setStaticFriction(const real friction)
 	{
-		NxMaterial* pNxMat = getNxSDK()->getMaterial( mNxMatIndex );
+		NxMaterial* pNxMat = mpScene->getMaterialFromIndex( mNxMatIndex );
 		YAKE_ASSERT( pNxMat );
-		pNxMat->staticFriction = friction;
+		pNxMat->setStaticFriction(friction);
 	}
 	void MaterialNx::setStaticFrictionV(const real friction)
 	{
-		NxMaterial* pNxMat = getNxSDK()->getMaterial( mNxMatIndex );
+		NxMaterial* pNxMat = mpScene->getMaterialFromIndex( mNxMatIndex );
 		YAKE_ASSERT( pNxMat );
-		pNxMat->staticFrictionV = friction;
+		pNxMat->setStaticFrictionV(friction);
 	}
 	void MaterialNx::setStaticFrictionVEnabled(bool enabled)
 	{

Modified: trunk/yake/src/yake/plugins/physicsNX/yakePhysicsTrimeshNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakePhysicsTrimeshNx.cpp	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/src/yake/plugins/physicsNX/yakePhysicsTrimeshNx.cpp	2005-09-23 20:41:06 UTC (rev 930)
@@ -88,7 +88,7 @@
 		//meshDesc.heightFieldVerticalExtent  = 0;
 
 		//
-		NxTriangleMesh* pMesh = getNxSDK()->createTriangleMesh( meshDesc );
+		NxTriangleMesh* pMesh = getNxExt()->NxCreateTriangleMesh( getNxSDK(), meshDesc );
 		YAKE_ASSERT( pMesh );
 		if(!pMesh)
 			return 0;

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp	2005-09-23 20:41:06 UTC (rev 930)
@@ -165,6 +165,16 @@
 
 		mCurrTime = 0.;
 
+		// default material
+		NxMaterial*	defaultMaterial = mpScene->getMaterialFromIndex(0);
+		defaultMaterial->setRestitution(0.0f);
+		defaultMaterial->setStaticFriction(0.9f);
+		defaultMaterial->setDynamicFriction(0.9f);
+
+		NxMaterialDesc defaultMaterialDesc;
+		defaultMaterial->saveToDesc(defaultMaterialDesc);
+		YAKE_ASSERT( defaultMaterialDesc.isValid() );
+
 		return true;
 	}
 	void WorldNx::step(const real timeElapsed)
@@ -278,7 +288,7 @@
 		YAKE_ASSERT( pMaterial );
 		if (!pMaterial)
 			return 0;
-		pMaterial->_createFromDesc( rkMatDesc );
+		pMaterial->_createFromDesc( rkMatDesc, mpScene );
 
 		mMaterials.push_back( pMaterial );
 		return pMaterial;

Modified: trunk/yake/yake/plugins/physicsNX/NxPhysicsSystem.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/NxPhysicsSystem.h	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/yake/plugins/physicsNX/NxPhysicsSystem.h	2005-09-23 20:41:06 UTC (rev 930)
@@ -41,6 +41,7 @@
 		virtual SharedPtr<IWorld> createWorld();
 	public:
 		static NxPhysicsSDK*	mpNxSDK;
+		static NxExtensions*	mpNxExt;
 	};
 
 }

Modified: trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/yake/plugins/physicsNX/yakeMaterialNx.h	2005-09-23 20:41:06 UTC (rev 930)
@@ -46,11 +46,12 @@
 		virtual void setStaticFrictionVEnabled(bool enabled);
 
 		//-- helpers
-		void _createFromDesc( const IMaterial::Desc & rDesc );
+		void _createFromDesc( const IMaterial::Desc & rDesc, NxScene* pScene );
 		inline NxMaterialIndex _getNxMatIndex() const
 		{ return mNxMatIndex; }
 	private:
 		NxMaterialIndex	mNxMatIndex;
+		NxScene* mpScene;
 	};
 
 }

Modified: trunk/yake/yake/plugins/physicsNX/yakePCH.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakePCH.h	2005-09-21 21:04:05 UTC (rev 929)
+++ trunk/yake/yake/plugins/physicsNX/yakePCH.h	2005-09-23 20:41:06 UTC (rev 930)
@@ -28,6 +28,7 @@
 #define __INC_PCH_H__
 
 #include "NxPhysics.h"
+#include "NxExtensions.h"
 
 //YAKE:
 
@@ -43,6 +44,7 @@
 namespace yake {
 namespace physics {
 	NxPhysicsSDK* getNxSDK();
+	NxExtensions* getNxExt();
 }
 }
 



From codeandroid at berlios.de  Fri Sep 23 22:42:26 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 23 Sep 2005 22:42:26 +0200
Subject: [Yake-svn] r931 - trunk/yake/yake/base/templates
Message-ID: <200509232042.j8NKgQkp004747@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-23 22:42:26 +0200 (Fri, 23 Sep 2005)
New Revision: 931

Modified:
   trunk/yake/yake/base/templates/yakeSignals.h
Log:
fixed interface

Modified: trunk/yake/yake/base/templates/yakeSignals.h
===================================================================
--- trunk/yake/yake/base/templates/yakeSignals.h	2005-09-23 20:41:06 UTC (rev 930)
+++ trunk/yake/yake/base/templates/yakeSignals.h	2005-09-23 20:42:26 UTC (rev 931)
@@ -83,8 +83,10 @@
 #	define Function1 boost::function1
 #	define Function2 boost::function2
 #	define Function3 boost::function3
+namespace yake {
 	typedef boost::signals::connection SignalConnection;
 	typedef boost::signals::scoped_connection ScopedSignalConnection;
+}
 /*
 #	define SIG boost
 #	define FUNC boost
@@ -125,12 +127,12 @@
 #define YAKE_MEMBERSIGNAL_PUREINTERFACE( ACCESS, SIGNATURE, NAME ) \
 ACCESS: \
 	typedef SignalX<SIGNATURE> Sig##NAME##Type; \
-	virtual SignalConnection subscribeTo##NAME( const Sig##NAME##Type::slot_type& slot ) = 0; \
+	virtual ::yake::SignalConnection subscribeTo##NAME( const Sig##NAME##Type::slot_type& slot ) = 0; \
 private:
 
 #define YAKE_MEMBERSIGNAL_VIRTUALIMPL( ACCESS, SIGNATURE, NAME ) \
 ACCESS: \
-	virtual SignalConnection subscribeTo ## NAME (const Sig ## NAME ## Type::slot_type& slot ) \
+	virtual ::yake::SignalConnection subscribeTo ## NAME (const Sig ## NAME ## Type::slot_type& slot ) \
 	{ return mSig ## NAME.connect(slot); } \
 private: \
 	Sig ## NAME ## Type	mSig ## NAME; \
@@ -154,7 +156,7 @@
 #define YAKE_MEMBERSIGNAL( ACCESS, SIGNATURE, NAME ) \
 ACCESS: \
 	typedef SignalX<SIGNATURE> Sig ## NAME ## Type; \
-	SignalConnection subscribeTo ## NAME ( const Sig ## NAME ## Type::slot_type& slot ) \
+	::yake::SignalConnection subscribeTo ## NAME ( const Sig ## NAME ## Type::slot_type& slot ) \
 	{ return mSig ## NAME.connect(slot); } \
 private: \
 	Sig ## NAME ## Type	mSig ## NAME;



From codeandroid at berlios.de  Sun Sep 25 23:45:35 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 25 Sep 2005 23:45:35 +0200
Subject: [Yake-svn] r932 - trunk/yake/yake/base/templates
Message-ID: <200509252145.j8PLjZeW005319@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-25 23:45:34 +0200 (Sun, 25 Sep 2005)
New Revision: 932

Modified:
   trunk/yake/yake/base/templates/yakeAlgorithms.h
Log:
added two functions for convenience

Modified: trunk/yake/yake/base/templates/yakeAlgorithms.h
===================================================================
--- trunk/yake/yake/base/templates/yakeAlgorithms.h	2005-09-23 20:42:26 UTC (rev 931)
+++ trunk/yake/yake/base/templates/yakeAlgorithms.h	2005-09-25 21:45:34 UTC (rev 932)
@@ -41,9 +41,20 @@
 //============================================================================
 namespace yake {
 
+template<class ContainerT>
+	typename ContainerT::const_iterator find(const ContainerT& ctr, const typename ContainerT::value_type& v)
+{
+	return std::find( ctr.begin(), ctr.end(), v );
+}
+template<class ContainerT>
+	typename ContainerT::iterator find(ContainerT& ctr, const typename ContainerT::value_type& v)
+{
+	return std::find( ctr.begin(), ctr.end(), v );
+}
+
 /** Performs an operation operation for each element in a container [ begin, end - 1 ]. */
-template< typename Iterator, typename Operation >
-YAKE_API void ForEach( Iterator begin, Iterator end, Operation operation );
+//template< typename Iterator, typename Operation >
+//YAKE_BASE_API void ForEach( Iterator begin, Iterator end, Operation operation );
 
 } // yake
 



From codeandroid at berlios.de  Sun Sep 25 23:54:38 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 25 Sep 2005 23:54:38 +0200
Subject: [Yake-svn] r933 - trunk/yake/yapp/loader
Message-ID: <200509252154.j8PLscNG005991@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-25 23:54:38 +0200 (Sun, 25 Sep 2005)
New Revision: 933

Modified:
   trunk/yake/yapp/loader/yakeDotScene.h
Log:
fixed name collision

Modified: trunk/yake/yapp/loader/yakeDotScene.h
===================================================================
--- trunk/yake/yapp/loader/yakeDotScene.h	2005-09-25 21:45:34 UTC (rev 932)
+++ trunk/yake/yapp/loader/yakeDotScene.h	2005-09-25 21:54:38 UTC (rev 933)
@@ -27,6 +27,7 @@
 #ifndef YAKE_DATA_DOTSCENE_H
 #define YAKE_DATA_DOTSCENE_H
 
+#include <yapp/base/yappPrerequisites.h>
 #include <yake/data/yakeData.h>
 
 #pragma warning(disable: 4244)
@@ -81,8 +82,8 @@
 			
 			struct Clipping
 			{
-				real near;
-				real far;
+				real nearClip;
+				real farClip;
 			}									clipping;
 		};
 		



From codeandroid at berlios.de  Sun Sep 25 23:54:49 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 25 Sep 2005 23:54:49 +0200
Subject: [Yake-svn] r934 - trunk/yake/src/yapp/loader
Message-ID: <200509252154.j8PLsnQx006022@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-25 23:54:48 +0200 (Sun, 25 Sep 2005)
New Revision: 934

Modified:
   trunk/yake/src/yapp/loader/yakeDotScene.cpp
Log:
fixed name collision

Modified: trunk/yake/src/yapp/loader/yakeDotScene.cpp
===================================================================
--- trunk/yake/src/yapp/loader/yakeDotScene.cpp	2005-09-25 21:54:38 UTC (rev 933)
+++ trunk/yake/src/yapp/loader/yakeDotScene.cpp	2005-09-25 21:54:48 UTC (rev 934)
@@ -367,8 +367,8 @@
 	{
 		YAKE_ASSERT( pNode );
 		
-		desc.clipping.near = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "near" ) );
-		desc.clipping.far = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "far" ) );
+		desc.clipping.nearClip = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "near" ) );
+		desc.clipping.farClip = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "far" ) );
 	}
 	
 	//------------------------------------------------------



From codeandroid at berlios.de  Sun Sep 25 23:55:08 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Sun, 25 Sep 2005 23:55:08 +0200
Subject: [Yake-svn] r935 - trunk/yake/src/yapp/model
Message-ID: <200509252155.j8PLt87W006064@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-25 23:55:07 +0200 (Sun, 25 Sep 2005)
New Revision: 935

Modified:
   trunk/yake/src/yapp/model/yakeGraphical.cpp
Log:
fixed name collision

Modified: trunk/yake/src/yapp/model/yakeGraphical.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeGraphical.cpp	2005-09-25 21:54:48 UTC (rev 934)
+++ trunk/yake/src/yapp/model/yakeGraphical.cpp	2005-09-25 21:55:07 UTC (rev 935)
@@ -326,8 +326,8 @@
 		pCamera->setFOV( desc.fov );
 		pCamera->setAspectRatio( desc.aspectRatio );
 		pCamera->setProjectionType( desc.projectionType );
-		pCamera->setNearClipDistance( desc.clipping.near );
-		pCamera->setFarClipDistance( desc.clipping.far );
+		pCamera->setNearClipDistance( desc.clipping.nearClip );
+		pCamera->setFarClipDistance( desc.clipping.farClip );
 		pCamera->setDirection( desc.normal );
 		
 		CameraInfo info;



From codeandroid at berlios.de  Mon Sep 26 18:54:41 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:54:41 +0200
Subject: [Yake-svn] r936 - trunk/yake/src/yapp/ent
Message-ID: <200509261654.j8QGsfaJ020510@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:54:39 +0200 (Mon, 26 Sep 2005)
New Revision: 936

Modified:
   trunk/yake/src/yapp/ent/yakeSim.cpp
Log:
added setTicksPerSecond()

Modified: trunk/yake/src/yapp/ent/yakeSim.cpp
===================================================================
--- trunk/yake/src/yapp/ent/yakeSim.cpp	2005-09-25 21:55:07 UTC (rev 935)
+++ trunk/yake/src/yapp/ent/yakeSim.cpp	2005-09-26 16:54:39 UTC (rev 936)
@@ -76,6 +76,11 @@
 		mObjects.clear();
 		private_::g_sim = 0;
 	}
+	void sim::setTicksPerSecond(const real ticksPerSecond)
+	{
+		if (ticksPerSecond > 0)
+			mTickTime = 0.1f;
+	}
 	Event& sim::getEvent_onEntitySpawned()
 	{
 		return mEvtEntitySpawned;



From codeandroid at berlios.de  Mon Sep 26 18:55:22 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:55:22 +0200
Subject: [Yake-svn] r937 - trunk/yake/src/yapp/ent
Message-ID: <200509261655.j8QGtM5U020862@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:55:19 +0200 (Mon, 26 Sep 2005)
New Revision: 937

Added:
   trunk/yake/src/yapp/ent/yakeTrigger.cpp
Log:
initial revision

Added: trunk/yake/src/yapp/ent/yakeTrigger.cpp
===================================================================
--- trunk/yake/src/yapp/ent/yakeTrigger.cpp	2005-09-26 16:54:39 UTC (rev 936)
+++ trunk/yake/src/yapp/ent/yakeTrigger.cpp	2005-09-26 16:55:19 UTC (rev 937)
@@ -0,0 +1,152 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/ent/yakePCH.h>
+#include <yapp/ent/yakeCommon.h>
+#include <yapp/ent/yakeEvent.h>
+#include <yapp/ent/yakeMessaging.h>
+#include <yapp/ent/yakeObject.h>
+#include <yapp/ent/yakeEntityMachine.h>
+#include <yapp/ent/yakeEntityComponent.h>
+#include <yapp/ent/yakeEntity.h>
+#include <yapp/ent/yakeTrigger.h>
+#include <yapp/ent/yakeSim.h>
+
+namespace yake {
+namespace ent {
+	namespace geom {
+		Volume::Volume()
+		{}
+		VolumeSet::VolumeSet()
+		{}
+		VolumeSet::~VolumeSet()
+		{
+			_removeAndDestroyAllVolumes();
+		}
+		void VolumeSet::_removeAndDestroyAllVolumes()
+		{
+			ConstVectorIterator< VolumePtrList > itV( mVolumes );
+			while (itV.hasMoreElements())
+				delete itV.getNext();
+			mVolumes.clear();
+		}
+		void VolumeSet::addVolume( Volume* pV )
+		{
+			YAKE_ASSERT( pV ).warning("Tried to add 0 ptr volume.");
+			if (pV)
+				mVolumes.push_back( pV );
+		}
+		Volume* VolumeSet::removeVolume( Volume* pV )
+		{
+			VolumePtrList::iterator itFind = std::find( mVolumes.begin(), mVolumes.end(), pV );
+			YAKE_ASSERT( itFind != mVolumes.end() );
+			if (itFind == mVolumes.end())
+				return pV;
+			mVolumes.erase( itFind );
+		}
+		void VolumeSet::translate(const Vector3&)
+		{
+			YAKE_ASSERT( 1==0 ).debug("NOT IMPLEMENTED!");
+		}
+		bool VolumeSet::contains(const Point3&) const
+		{
+			YAKE_ASSERT( 1==0 ).debug("NOT IMPLEMENTED!");
+			return false;
+		}
+	} // namespace  geom
+	
+
+	YAKE_IMPLEMENT_REGISTRY( TriggerCondition );
+
+	TriggerCondition::~TriggerCondition()
+	{
+	}
+
+	YAKE_REGISTER_CONCRETE( SpatialTriggerCondition );
+
+	YAKE_REGISTER_CONCRETE( TimedTriggerCondition );
+	void TimedTriggerCondition::onFrame()
+	{
+		YAKE_ASSERT( 1==0 ).debug("NOT IMPLEMENTED!");
+	}
+	void TimedTriggerCondition::onTick()
+	{
+		YAKE_ASSERT( 1==0 ).debug("NOT IMPLEMENTED!");
+	}
+
+	YAKE_DEFINE_ENTITY_1( Trigger, Entity )
+
+	Trigger::Trigger()
+	{
+	}
+	Trigger::~Trigger()
+	{
+		mConds.clear();
+	}
+	SharedPtr<TriggerCondition> Trigger::addCondition(SharedPtr<TriggerCondition> pCond)
+	{
+		YAKE_ASSERT( pCond.get() ).warning("Cannot add a null condition!");
+
+		if (pCond.get())
+			mConds.push_back(pCond);
+	
+		return pCond;
+	}
+	SharedPtr<TriggerCondition> Trigger::removeCondition(SharedPtr<TriggerCondition> pCond)
+	{
+		ConditionPtrList::iterator itFind = std::find( mConds.begin(), mConds.end(), pCond );
+		if (itFind != mConds.end())
+			mConds.erase( itFind );
+		return pCond;
+	}
+	void Trigger::addVolume( geom::Volume* pVolume )
+	{
+		mVolume.addVolume( pVolume );
+	}
+	geom::Volume* Trigger::removeVolume( geom::Volume* pVolume )
+	{
+		return mVolume.removeVolume( pVolume );
+	}
+	void Trigger::onTick()
+	{
+		Entity::onTick();
+		onUpdateConditionsOncePerTick();
+	}
+	void Trigger::onUpdateConditionsOncePerFrame()
+	{
+		ConstVectorIterator< ConditionPtrList > itC( mConds );
+		while (itC.hasMoreElements())
+			itC.getNext()->onFrame();
+	}
+	void Trigger::onUpdateConditionsOncePerTick()
+	{
+		ConstVectorIterator< ConditionPtrList > itC( mConds );
+		while (itC.hasMoreElements())
+			itC.getNext()->onTick();
+	}
+
+} // namespace yake
+} // namespace ent



From codeandroid at berlios.de  Mon Sep 26 18:55:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:55:45 +0200
Subject: [Yake-svn] r938 - trunk/yake/yapp/ent
Message-ID: <200509261655.j8QGtjmK020996@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:55:44 +0200 (Mon, 26 Sep 2005)
New Revision: 938

Modified:
   trunk/yake/yapp/ent/yakeSim.h
Log:
added setTicksPerSecond()


Modified: trunk/yake/yapp/ent/yakeSim.h
===================================================================
--- trunk/yake/yapp/ent/yakeSim.h	2005-09-26 16:55:19 UTC (rev 937)
+++ trunk/yake/yapp/ent/yakeSim.h	2005-09-26 16:55:44 UTC (rev 938)
@@ -39,6 +39,7 @@
 			audio::IWorld* pAWorld = 0,
 			physics::IWorld* pPWorld = 0);
 		~sim();
+		void setTicksPerSecond(const real ticksPerSecond);
 		simtime getTime() const;
 		real getTimeAsSeconds() const;
 		void tick(const real timeElapsed);



From codeandroid at berlios.de  Mon Sep 26 18:56:02 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:56:02 +0200
Subject: [Yake-svn] r939 - trunk/yake/yapp/ent
Message-ID: <200509261656.j8QGu2mh021319@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:56:00 +0200 (Mon, 26 Sep 2005)
New Revision: 939

Added:
   trunk/yake/yapp/ent/yakeTrigger.h
Log:
initial revision

Added: trunk/yake/yapp/ent/yakeTrigger.h
===================================================================
--- trunk/yake/yapp/ent/yakeTrigger.h	2005-09-26 16:55:44 UTC (rev 938)
+++ trunk/yake/yapp/ent/yakeTrigger.h	2005-09-26 16:56:00 UTC (rev 939)
@@ -0,0 +1,165 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright  2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_ENT_TRIGGER_H
+#define YAKE_ENT_TRIGGER_H
+
+namespace yake {
+namespace ent {
+
+	class YAKE_ENT_API TriggerCondition
+	{
+		YAKE_DECLARE_REGISTRY_0( TriggerCondition, String );
+	private:
+	protected:
+		virtual void onFire() {}
+	public:
+		virtual ~TriggerCondition();
+
+		//void fire();
+		// events:
+		//	"onFire()"
+		Event& getEvent_fire();
+
+		bool isToBeExecutedOncePerFrame() const;
+		bool isToBeExecutedOncePerTick() const;
+
+		virtual void onTick() {}
+		virtual void onFrame() {}
+	};
+	class YAKE_ENT_API TimedTriggerCondition : public TriggerCondition
+	{
+		YAKE_DECLARE_CONCRETE( TimedTriggerCondition, "condition.timed" );
+
+	public:
+		void setTargetSimTime( const simtime );
+		void setTargetTime( const real );
+
+		virtual void onTick();
+		virtual void onFrame();
+
+	private:
+		real		mTime;
+	};
+	namespace geom {
+		class Volume
+		{
+			Volume(const Volume&);
+		protected:
+			Volume();
+		public:
+			virtual ~Volume() {}
+			virtual bool contains(const Point3&) const = 0;
+			virtual void translate(const Vector3&) = 0;
+		};
+		class Sphere : public Volume
+		{
+		public:
+			Sphere(const Point3& center, const real radius = real(1.));
+			Sphere(const real radius = real(1.));
+			Sphere(const Sphere&);
+			Sphere& operator = (const Sphere&);
+
+			virtual bool contains(const Point3&) const;
+			virtual void translate(const Vector3&) = 0;
+
+			void setRadius(const real radius);
+			real radius() const;
+			void setCenter(const Point3& center);
+			Point3 center() const;
+			void center(Point3& center) const;
+		private:
+			Point3	mCenter;
+			real	mRadius;
+		};
+		class VolumeSet : public Volume
+		{
+		public:
+			VolumeSet();
+			virtual ~VolumeSet();
+			VolumeSet(const VolumeSet&);
+			VolumeSet& operator = (const VolumeSet&);
+
+			virtual bool contains(const Point3&) const;
+			virtual void translate(const Vector3&);
+
+			void addVolume( Volume* );
+			Volume* removeVolume( Volume* );
+		private:
+			void _removeAndDestroyAllVolumes();
+		private:
+			typedef Deque<Volume*> VolumePtrList;
+			VolumePtrList	mVolumes;
+		};
+	} // namespace geom
+	class YAKE_ENT_API SpatialTriggerCondition : public TriggerCondition
+	{
+		YAKE_DECLARE_CONCRETE( SpatialTriggerCondition, "condition.spatial" );
+		// (additional) events:
+		//	"onFire(Entity*)"
+		//	"onEnterVolume(Entity*)"
+		//	"onExitVolume(Entity*)"
+	public:
+		// PointEnter: good for static point and moving volume trigger.
+		void addPointEnterCondition( geom::Volume*, const Point3& );
+		void addPointExitCondition( geom::Volume*, const Point3& );
+
+		// MoveableEnter: good for testing a movable object against a volume trigger.
+		void addMovableEnterCondition( geom::Volume*, Movable* );
+		void addMovableExitCondition( geom::Volume*, Movable* );
+	private:
+	};
+	class YAKE_ENT_API Trigger : public Entity
+	{
+		YAKE_DECLARE_ENTITY(Trigger)
+	public:
+		OBJECT_PROPS_BEGIN(Trigger)
+			OBJECT_PROP("position", Point3, Point3(0,0,0))
+		OBJECT_PROPS_END()
+		//events:
+		//	"onFire(Entity*,TriggerCondition*)"
+
+		SharedPtr<TriggerCondition> addCondition(SharedPtr<TriggerCondition>);
+		SharedPtr<TriggerCondition> removeCondition(SharedPtr<TriggerCondition>);
+
+		void addVolume( geom::Volume* );
+		geom::Volume* removeVolume( geom::Volume* );
+	protected:
+		void onUpdateConditionsOncePerFrame();
+		void onUpdateConditionsOncePerTick();
+	protected:
+		Trigger();
+		virtual ~Trigger();
+		virtual void onTick();
+	private:
+		typedef Deque<SharedPtr<TriggerCondition> > ConditionPtrList;
+		ConditionPtrList	mConds;
+		geom::VolumeSet		mVolume;
+	};
+
+} // namespace yake
+} // namespace ent
+#endif



From codeandroid at berlios.de  Mon Sep 26 18:56:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:56:45 +0200
Subject: [Yake-svn] r940 - trunk/yake/src/yake/base
Message-ID: <200509261656.j8QGujh3021916@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:56:44 +0200 (Mon, 26 Sep 2005)
New Revision: 940

Modified:
   trunk/yake/src/yake/base/yakeString.cpp
Log:
added new StringUtil::split()

Modified: trunk/yake/src/yake/base/yakeString.cpp
===================================================================
--- trunk/yake/src/yake/base/yakeString.cpp	2005-09-26 16:56:00 UTC (rev 939)
+++ trunk/yake/src/yake/base/yakeString.cpp	2005-09-26 16:56:44 UTC (rev 940)
@@ -103,6 +103,41 @@
 	}
 
 	//-----------------------------------------------------------------------
+	void StringUtil::split(StringVector& ret, const String& rString, const String& delims, unsigned int maxSplits)
+	{
+		// static unsigned dl;
+		unsigned int numSplits = 0;
+
+		// Use STL methods 
+		size_t start, pos;
+		start = 0;
+		do 
+		{
+			pos = rString.find_first_of(delims, start);
+			if (pos == start)
+			{
+				// Do nothing
+				start = pos + 1;
+			}
+			else if (pos == rString.npos || (maxSplits && numSplits == maxSplits))
+			{
+				// Copy the rest of the string
+				ret.push_back( rString.substr(start) );
+			}
+			else
+			{
+				// Copy up to delimiter
+				ret.push_back( rString.substr(start, pos - start) );
+				start = pos + 1;
+			}
+			// parse up to next real data
+			start = rString.find_first_not_of(delims, start);
+			++numSplits;
+
+		} while (pos != rString.npos);
+	}
+
+	//-----------------------------------------------------------------------
 	String StringUtil::toLowerCase(const String& rString) 
 	{
 		String out( rString );



From codeandroid at berlios.de  Mon Sep 26 18:57:15 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:57:15 +0200
Subject: [Yake-svn] r941 - trunk/yake/yake/base
Message-ID: <200509261657.j8QGvF10022359@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:57:13 +0200 (Mon, 26 Sep 2005)
New Revision: 941

Modified:
   trunk/yake/yake/base/yakeString.h
Log:
added new StringUtil::split()

Modified: trunk/yake/yake/base/yakeString.h
===================================================================
--- trunk/yake/yake/base/yakeString.h	2005-09-26 16:56:44 UTC (rev 940)
+++ trunk/yake/yake/base/yakeString.h	2005-09-26 16:57:13 UTC (rev 941)
@@ -54,6 +54,7 @@
 		lhs += ss.str();
 		return lhs;
 	}
+	typedef Vector<String> StringVector;
 
 	class YAKE_BASE_API StringUtil
 	{
@@ -73,6 +74,7 @@
 		}
 		static void trim(String& rString, bool left = true, bool right = true);
 		static std::vector< String > split( const String& rString, const String& delims = "\t\n", unsigned int maxSplits = 0);
+		static void split( StringVector& ret, const String& rString, const String& delims = "\t\n", unsigned int maxSplits = 0);
 		static String toLowerCase( const String& rString );
 		static String toUpperCase( const String& rString );
 		static real toReal( const String& rString );
@@ -84,7 +86,6 @@
 	    static bool StringUtil::endsWith(const String& str, const String& pattern, bool lowerCase);
 	};
 
-	typedef Vector<String> StringVector;
 	struct YAKE_BASE_API MakeStringVector
 	{
 		MakeStringVector & operator<<(const char * str)



From codeandroid at berlios.de  Mon Sep 26 18:57:37 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:57:37 +0200
Subject: [Yake-svn] r942 - trunk/yake/yake/base
Message-ID: <200509261657.j8QGvbp7022748@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:57:31 +0200 (Mon, 26 Sep 2005)
New Revision: 942

Modified:
   trunk/yake/yake/base/yakePCH.h
Log:
added include

Modified: trunk/yake/yake/base/yakePCH.h
===================================================================
--- trunk/yake/yake/base/yakePCH.h	2005-09-26 16:57:13 UTC (rev 941)
+++ trunk/yake/yake/base/yakePCH.h	2005-09-26 16:57:31 UTC (rev 942)
@@ -39,6 +39,7 @@
 #include <yake/base/templates/yakeDeque.h>
 #include <yake/base/templates/delete.h>
 #include <yake/base/templates/yakeVariant.h>
+#include "templates/yakeAlgorithms.h"
 
 #include <yake/base/mpl/yakeAbstractFactory.h>
 #include <yake/base/mpl/sequences.h>



From codeandroid at berlios.de  Mon Sep 26 18:58:04 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 18:58:04 +0200
Subject: [Yake-svn] r943 - trunk/yake/yake/data
Message-ID: <200509261658.j8QGw4NP023063@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 18:58:02 +0200 (Mon, 26 Sep 2005)
New Revision: 943

Modified:
   trunk/yake/yake/data/yakeDataPrerequisites.h
Log:
enabled auto-link on win32

Modified: trunk/yake/yake/data/yakeDataPrerequisites.h
===================================================================
--- trunk/yake/yake/data/yakeDataPrerequisites.h	2005-09-26 16:57:31 UTC (rev 942)
+++ trunk/yake/yake/data/yakeDataPrerequisites.h	2005-09-26 16:58:02 UTC (rev 943)
@@ -31,6 +31,9 @@
 #	define YAKE_DATA_API DLLEXPORT
 #else
 #	define YAKE_DATA_API DLLIMPORT
+#	if YAKE_PLATFORM == PLATFORM_WIN32
+#		pragma comment( lib, "data" )
+#	endif
 #endif
 
 #endif



From codeandroid at berlios.de  Mon Sep 26 19:10:26 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 19:10:26 +0200
Subject: [Yake-svn] r944 - trunk/yake/src/yake/data
Message-ID: <200509261710.j8QHAQLI029762@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 19:10:23 +0200 (Mon, 26 Sep 2005)
New Revision: 944

Modified:
   trunk/yake/src/yake/data/yakeXMLSerializer.cpp
Log:
relaxed assert

Modified: trunk/yake/src/yake/data/yakeXMLSerializer.cpp
===================================================================
--- trunk/yake/src/yake/data/yakeXMLSerializer.cpp	2005-09-26 16:58:02 UTC (rev 943)
+++ trunk/yake/src/yake/data/yakeXMLSerializer.cpp	2005-09-26 17:10:23 UTC (rev 944)
@@ -151,11 +151,11 @@
 
 		mXmlDoc = new TiXmlDocument( rFile.c_str() );
 		bool ret = mXmlDoc->LoadFile();
-		YAKE_ASSERT( ret && "Could not load xml file.")( rFile );
+		YAKE_ASSERT( ret && "Could not load xml file.")( rFile ).warning("Could not load xml file.");
 
 		// read contents
 		mRootElem = mXmlDoc->RootElement();
-		YAKE_ASSERT( mRootElem ).debug("No root element found in document!");
+		YAKE_ASSERT( mRootElem ).warning("No root element found in document!");
 		if (!mRootElem)
 			return;
 		mRootNode.reset( new XmlNode( mRootElem ) );



From codeandroid at berlios.de  Mon Sep 26 19:11:05 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 19:11:05 +0200
Subject: [Yake-svn] r945 - trunk/yake/scripts/yapp
Message-ID: <200509261711.j8QHB5LP030356@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 19:11:01 +0200 (Mon, 26 Sep 2005)
New Revision: 945

Modified:
   trunk/yake/scripts/yapp/ent.vcproj
Log:
added yakeTrigger.*

Modified: trunk/yake/scripts/yapp/ent.vcproj
===================================================================
--- trunk/yake/scripts/yapp/ent.vcproj	2005-09-26 17:10:23 UTC (rev 944)
+++ trunk/yake/scripts/yapp/ent.vcproj	2005-09-26 17:11:01 UTC (rev 945)
@@ -174,6 +174,9 @@
 			<File
 				RelativePath="..\..\src\yapp\ent\yakeSim.cpp">
 			</File>
+			<File
+				RelativePath="..\..\src\yapp\ent\yakeTrigger.cpp">
+			</File>
 		</Filter>
 		<Filter
 			Name="inc"
@@ -212,6 +215,9 @@
 			<File
 				RelativePath="..\..\yapp\ent\yakeSim.h">
 			</File>
+			<File
+				RelativePath="..\..\yapp\ent\yakeTrigger.h">
+			</File>
 		</Filter>
 	</Files>
 	<Globals>



From codeandroid at berlios.de  Mon Sep 26 19:24:36 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 19:24:36 +0200
Subject: [Yake-svn] r946 - trunk/yake/yake/input
Message-ID: <200509261724.j8QHOa37005250@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 19:24:33 +0200 (Mon, 26 Sep 2005)
New Revision: 946

Modified:
   trunk/yake/yake/input/yakeInput.h
Log:
mj fixed a typo

Modified: trunk/yake/yake/input/yakeInput.h
===================================================================
--- trunk/yake/yake/input/yakeInput.h	2005-09-26 17:11:01 UTC (rev 945)
+++ trunk/yake/yake/input/yakeInput.h	2005-09-26 17:24:33 UTC (rev 946)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -36,6 +36,6 @@
 #endif
 #include <yake/input/yakeInputSystem.h>
 #include <yake/input/yakeInputEventGenerator.h>
-#include <yake/input/yakeActionmap.h>
+#include <yake/input/yakeActionMap.h>
 
 #endif



From codeandroid at berlios.de  Tue Sep 27 21:25:10 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Tue, 27 Sep 2005 21:25:10 +0200
Subject: [Yake-svn] r948 - trunk/yake/dependencies
Message-ID: <200509271925.j8RJPAVA007414@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-27 21:25:10 +0200 (Tue, 27 Sep 2005)
New Revision: 948

Modified:
   trunk/yake/dependencies/DEPENDENCIES
Log:
updated version info

Modified: trunk/yake/dependencies/DEPENDENCIES
===================================================================
--- trunk/yake/dependencies/DEPENDENCIES	2005-09-26 21:17:18 UTC (rev 947)
+++ trunk/yake/dependencies/DEPENDENCIES	2005-09-27 19:25:10 UTC (rev 948)
@@ -1,11 +1,11 @@
 
-boost/
+boost/      <= 1.33.0 (1.32.x should work, too)
 cegui_mk2/
 libogg-1.1/
 libvorbis-1.0/
 loki/
 lua/
-luabind/
+luabind/    <= beta7-devel2 branch
 ode/
 ogrenew/
 OpenAL/



From codeandroid at berlios.de  Mon Sep 26 23:17:22 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Mon, 26 Sep 2005 23:17:22 +0200
Subject: [Yake-svn] r947 - in trunk/yake: . src/yake/base src/yake/graphics src/yake/plugins src/yake/plugins/baseLuaBindings src/yake/plugins/graphicsLuaBindings src/yake/plugins/graphicsOgre src/yake/plugins/physicsODE src/yapp src/yapp/ent src/yapp/loader src/yapp/model src/yapp/plugins/entLua src/yapp/raf src/yapp/samples src/yapp/samples/graphics/scripted src/yapp/samples/gui/console src/yapp/samples/model/XODE src/yapp/samples/model/dotLink src/yapp/samples/raf/minimal yake/base yake/base/templates yake/graphics yake/physics yake/plugins/graphicsOgre yake/plugins/physicsODE yapp/ent yapp/gui_addons/console yapp/gui_addons/console/cegui yapp/loader yapp/model
Message-ID: <200509262117.j8QLHMRC008165@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-26 23:17:18 +0200 (Mon, 26 Sep 2005)
New Revision: 947

Modified:
   trunk/yake/buildspec.xml
   trunk/yake/src/yake/base/Makefile.am
   trunk/yake/src/yake/base/yakeDebugLogAppender.cpp
   trunk/yake/src/yake/base/yakeLog.cpp
   trunk/yake/src/yake/graphics/yakeGraphicsSystem.cpp
   trunk/yake/src/yake/plugins/Makefile.am
   trunk/yake/src/yake/plugins/baseLuaBindings/yakeLuaBinder.cpp
   trunk/yake/src/yake/plugins/graphicsLuaBindings/Makefile.am
   trunk/yake/src/yake/plugins/graphicsLuaBindings/yakeLuaBinder.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCore.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreEntity.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreGeometryAccess.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreLight.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreNode.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreSkeleton.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreViewport.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp
   trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
   trunk/yake/src/yapp/Makefile.am
   trunk/yake/src/yapp/ent/yakeEntity.cpp
   trunk/yake/src/yapp/ent/yakeTrigger.cpp
   trunk/yake/src/yapp/loader/yakeDotScene.cpp
   trunk/yake/src/yapp/model/Makefile.am
   trunk/yake/src/yapp/model/yakeComplexModel.cpp
   trunk/yake/src/yapp/model/yakeGraphical.cpp
   trunk/yake/src/yapp/plugins/entLua/yakeEvent_lua.cpp
   trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp
   trunk/yake/src/yapp/plugins/entLua/yakeStateCb_lua.cpp
   trunk/yake/src/yapp/raf/yakeApplication.cpp
   trunk/yake/src/yapp/samples/Makefile.am
   trunk/yake/src/yapp/samples/graphics/scripted/Makefile.am
   trunk/yake/src/yapp/samples/gui/console/yakeConsoleDemo.cpp
   trunk/yake/src/yapp/samples/model/XODE/Makefile.am
   trunk/yake/src/yapp/samples/model/XODE/yakeXODELoaderDemo.cpp
   trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp
   trunk/yake/src/yapp/samples/raf/minimal/yakeDemo.cpp
   trunk/yake/yake/base/templates/yakeRegistry.h
   trunk/yake/yake/base/yake.h
   trunk/yake/yake/base/yakeDebugLogAppender.h
   trunk/yake/yake/base/yakeLog.h
   trunk/yake/yake/base/yakePrerequisites.h
   trunk/yake/yake/graphics/yakeEntity.h
   trunk/yake/yake/graphics/yakeGraphicalWorld.h
   trunk/yake/yake/graphics/yakeGraphicsSystem.h
   trunk/yake/yake/physics/yakePhysicsPrerequisites.h
   trunk/yake/yake/plugins/graphicsOgre/graphicsOgreCamera.h
   trunk/yake/yake/plugins/graphicsOgre/graphicsOgreEntity.h
   trunk/yake/yake/plugins/graphicsOgre/graphicsOgreNode.h
   trunk/yake/yake/plugins/physicsODE/OdeBody.h
   trunk/yake/yake/plugins/physicsODE/OdeShapes.h
   trunk/yake/yake/plugins/physicsODE/OdeWorld.h
   trunk/yake/yapp/ent/yakeEntity.h
   trunk/yake/yapp/gui_addons/console/Makefile.am
   trunk/yake/yapp/gui_addons/console/cegui/Makefile.am
   trunk/yake/yapp/gui_addons/console/cegui/yakeCEGUIOutputArea.h
   trunk/yake/yapp/gui_addons/console/yakeDefaultHistory.h
   trunk/yake/yapp/gui_addons/console/yakeGenericConsole.h
   trunk/yake/yapp/loader/yakeDotScene.h
   trunk/yake/yapp/loader/yakeXODEParser.h
   trunk/yake/yapp/model/yakeGraphical.h
   trunk/yake/yapp/model/yakeVehicleSerializerXML.h
Log:
patch 1304669 by mj ("summer patch"): interface cleanup & improvements, fixed compatibility issues, improved logging messages, ...

Modified: trunk/yake/buildspec.xml
===================================================================
--- trunk/yake/buildspec.xml	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/buildspec.xml	2005-09-26 21:17:18 UTC (rev 947)
@@ -162,6 +162,9 @@
 	</BuildSharedLibrary>
 
 	<BuildSharedLibrary
+		name="yakegraphicsLuaBindings"
+
+	<BuildSharedLibrary
 		name="yappEvents"
 		src="src/yapp/base/event"
 	/>

Modified: trunk/yake/src/yake/base/Makefile.am
===================================================================
--- trunk/yake/src/yake/base/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/base/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,19 +1,11 @@
 INCLUDES = -I$(top_srcdir)/. -I$(top_srcdir)/dependencies/ttl $(all_includes)
-
-
-
 SUBDIRS = native math templates
-
-
-
-
 METASOURCES = AUTO
 lib_LTLIBRARIES = libyakeBase.la
 libyakeBase_la_SOURCES = yakeDataChunk.cpp yakeDebugLogAppender.cpp \
-	yakeDebugOutputStream.cpp yakeException.cpp yakeInputStream.cpp yakeLock.cpp yakeLog.cpp \
-	yakeMimeTypeManager.cpp yakeOutputStream.cpp yakePCH.cpp yakeString.cpp yakeUniqueId.cpp \
-	yakeUniqueName.cpp yakeMovable.cpp yakeCriticalSection.cpp yakeLibrary.cpp \
-	yakeParamHolder.cpp
+	yakeException.cpp yakeInputStream.cpp yakeLock.cpp yakeLog.cpp yakeMimeTypeManager.cpp \
+	yakeOutputStream.cpp yakePCH.cpp yakeString.cpp yakeUniqueId.cpp yakeUniqueName.cpp \
+	yakeMovable.cpp yakeCriticalSection.cpp yakeLibrary.cpp yakeParamHolder.cpp
 libyakeBase_la_LIBADD = \
 	$(top_builddir)/src/yake/base/native/Linux/libyakeNativeLinux.la $(top_builddir)/src/yake/base/templates/libyakeTemplates.la \
 	$(top_builddir)/src/yake/base/math/libyakeMath.la -lboost_signals

Modified: trunk/yake/src/yake/base/yakeDebugLogAppender.cpp
===================================================================
--- trunk/yake/src/yake/base/yakeDebugLogAppender.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/base/yakeDebugLogAppender.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -39,18 +39,16 @@
 {
 namespace base
 {
-
-void DebugLogAppender::onLog( const String& rWhat, Log::Severity severity, const String& rSource )
-{
-	static native::DebugLog::Severity severityTranslationTable[] =
+	void DebugLogAppender::onLog( const Log::Message& message )
 	{
-		native::DebugLog::INFORMATIONS,
-		native::DebugLog::WARNINGS,
-		native::DebugLog::ERRORS
-	};
-			
-	native::debug_Log( rWhat.c_str(), severityTranslationTable[ severity ], rSource.c_str() );
-}
+		static native::DebugLog::Severity severityTranslationTable[] =
+		{
+			native::DebugLog::INFORMATIONS,
+			native::DebugLog::WARNINGS,
+			native::DebugLog::ERRORS
+		};
 
+		native::debug_Log( message.text.c_str(), severityTranslationTable[ message.severity ], message.source.c_str() );
+	}
 } // base
 } // yake

Modified: trunk/yake/src/yake/base/yakeLog.cpp
===================================================================
--- trunk/yake/src/yake/base/yakeLog.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/base/yakeLog.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -55,45 +55,32 @@
   mOnLog.connect( rSlot );
 }
 
-void Log::log( const String& rWhat, Severity severity )
+void Log::log( const String& rWhat,
+					Severity severity,
+					const String& rSource,
+					const String& rAdditionalInfo )
 {
-	mOnLog( rWhat, severity, "" );
+	mOnLog( Message( rWhat, severity, rSource, rAdditionalInfo ) );
 }
 
-void Log::log( const String& rWhat, Severity severity, const String& rSource )
+void log_information( const String& what, const String& source, const String& where )
 {
-	mOnLog( rWhat, severity, rSource );
+	Log::instance().log( what, Log::INFORMATIONS, source, where );
 }
 
-void Log::logPrintf( char * fmt, ... )
+void log_warning( const String& what, const String& source, const String& where )
 {
-    static char szBuffer[4097];
-	memset( szBuffer, 0, 4097 );
-    va_list list;
-    va_start( list, fmt );
-    YAKE_VSNPRINTF( szBuffer, 4096, fmt, list );
-	mOnLog( szBuffer, INFORMATIONS, "" );
-    va_end( list );
+	Log::instance().log( what, Log::WARNINGS, source, where );
 }
 
-void log_information( const String& what, const String& where )
+void log_error( const String& what, const String& source, const String& where )
 {
-	Log::instance().log( what, Log::INFORMATIONS, where );
+	Log::instance().log( what, Log::ERRORS, source, where );
 }
 
-void log_warning( const String& what, const String& where )
-{
-	Log::instance().log( what, Log::WARNINGS, where );
-}
-
-void log_error( const String& what, const String& where )
-{
-	Log::instance().log( what, Log::ERRORS, where );
-}
-
 void log( const String& what )
 {
-	Log::instance().log( what, Log::INFORMATIONS );
+	Log::instance().log( what );
 }
 
 } // base

Modified: trunk/yake/src/yake/graphics/yakeGraphicsSystem.cpp
===================================================================
--- trunk/yake/src/yake/graphics/yakeGraphicsSystem.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/graphics/yakeGraphicsSystem.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -41,6 +41,21 @@
 
 	YAKE_IMPLEMENT_REGISTRY( IGraphicsSystem );
 
+	/// GraphicsEntity
+	GraphicsEntity::GraphicsEntity() : mName( uniqueName::create( "graphics" ) )
+	{
+	}
+	
+	void GraphicsEntity::setName( const String& entityName )
+	{
+		mName = entityName;
+	}
+	
+	String GraphicsEntity::getName() const
+	{
+		return mName;
+	}
+	
 	// these destructors are here for rtti to work
 	IParticleSystem::~IParticleSystem()
 	{

Modified: trunk/yake/src/yake/plugins/Makefile.am
===================================================================
--- trunk/yake/src/yake/plugins/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,4 +1,4 @@
 INCLUDES = $(all_includes)
 METASOURCES = AUTO
 SUBDIRS = scriptingLua inputOgre scriptingLuaBindings graphicsOgre \
-		graphicsLuaBindings baseLuaBindings
+			graphicsLuaBindings baseLuaBindings physicsODE

Modified: trunk/yake/src/yake/plugins/baseLuaBindings/yakeLuaBinder.cpp
===================================================================
--- trunk/yake/src/yake/plugins/baseLuaBindings/yakeLuaBinder.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/baseLuaBindings/yakeLuaBinder.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -199,9 +199,15 @@
 				    .def( "onLog", &Log::onLog )
 				    .def( "log", (void(Log::*)( const String&,Log::Severity))&Log::log )
 				    .def( "logAt", (void(Log::*)( const String&,Log::Severity,const String&))&Log::log )
-				    .def( "instance", &Log::instance )
+					.scope
+					[
+				    def( "instance", &Log::instance )
+					]
 				];
 
+				// Exporting log singleton as logger object
+				pL->execute( "logger = yake.Log.instance();" );
+
 				// Log shortcuts
 				module( YAKE_BASE_MODULE )
 				[

Modified: trunk/yake/src/yake/plugins/graphicsLuaBindings/Makefile.am
===================================================================
--- trunk/yake/src/yake/plugins/graphicsLuaBindings/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsLuaBindings/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,9 @@
 INCLUDES = -I$(top_srcdir)/. -I$(top_srcdir)/dependencies \
 	-I$(top_srcdir)/dependencies/luabind -I$(top_srcdir)/dependencies/ttl $(all_includes)
 METASOURCES = AUTO
-lib_LTLIBRARIES = libyakegraphicsBindingsLua.la
-libyakegraphicsBindingsLua_la_LIBADD =\
-	$(top_builddir)/src/yake/scripting/libyakeScripting.la
-libyakegraphicsBindingsLua_la_SOURCES = yakeLuaBinder.cpp
+
+lib_LTLIBRARIES = libyakegraphicsLuaBindings.la
+libyakegraphicsLuaBindings_la_SOURCES = yakeLuaBinder.cpp
+libyakegraphicsLuaBindings_la_LIBADD = \
+	$(top_builddir)/src/yake/scripting/libyakeScripting.la $(top_builddir)/src/yake/plugins/scriptingLua/libyakescriptingLua.la \
+	-lluabind

Modified: trunk/yake/src/yake/plugins/graphicsLuaBindings/yakeLuaBinder.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsLuaBindings/yakeLuaBinder.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsLuaBindings/yakeLuaBinder.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -24,6 +24,7 @@
 #include <yake/plugins/scriptingLua/ScriptingSystemLua.h>
 #include <yake/plugins/graphicsLuaBindings/yakeLuaBinder.h>
 #include <luabind/luabind.hpp>
+#include <luabind/iterator_policy.hpp>
 
 #include <yake/graphics/yakeGraphics.h>
 #include <yake/graphics/yakeGeometryAccess.h>
@@ -50,23 +51,33 @@
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<IParticleSystem>( "IParticleSystem" )
+				    class_<GraphicsEntity>( "GraphicsEntity" )
+				    .def( "getName", &GraphicsEntity::getName )
+				    .def( "setName", &GraphicsEntity::setName )
+				];
+				YAKE_LOG( "GraphicsEntity bound..." );
+
+				module( YAKE_GRAPHICS_MODULE )
+				[
+				    class_<IParticleSystem,GraphicsEntity>( "IParticleSystem" )
 				    .def( "setVisible", &IParticleSystem::setVisible )
 				];
+				YAKE_LOG( "IParticleSystem bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<ISkeleton>( "ISkeleton" )
+				    class_<ISkeleton,GraphicsEntity>( "ISkeleton" )
 				    .def( "enableAnimation", &ISkeleton::enableAnimation )
 				    .def( "advanceAnimation", &ISkeleton::advanceAnimation )
 				    .def( "advanceAllAnimations", &ISkeleton::advanceAllAnimations )
 				    .def( "setAnimationWeight", &ISkeleton::setAnimationWeight )
 				    .def( "attachEntityToBone", &ISkeleton::attachEntityToBone )
 				];
+				YAKE_LOG( "ISkeleton bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<ILight>( "ILight" )
+				    class_<ILight,GraphicsEntity>( "ILight" )
 				    .enum_( "LightType" )
 				    [
 				        value("LT_POINT", ILight::LT_POINT ),
@@ -91,22 +102,22 @@
 				    .def( "setDirection", &ILight::setDirection )
 				    .def( "getDirection", &ILight::getDirection )
 				];
+				YAKE_LOG( "ILight bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<IEntity>( "IEntity" )
+				    class_<IEntity,GraphicsEntity>( "IEntity" )
 				    .def( "getSkeleton", &IEntity::getSkeleton )
 				    .def( "setVisible", &IEntity::setVisible )
 				    .def( "setMaterial", &IEntity::setMaterial )
 				    .def( "setSubEntityMaterial", &IEntity::setSubEntityMaterial )
 				    .def( "setCastsShadow", &IEntity::setCastsShadow )
-				    .def( "getName", (String(IEntity::*)() const)&IEntity::getName )
-
 				];
+				YAKE_LOG( "IEntity bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<ICamera, Movable>( "ICamera" )
+				    class_<ICamera, bases<Movable, GraphicsEntity> >( "ICamera" )
 				    .enum_( "SceneDetailLevel" )
 				    [
 				        value( "SDL_POINTS", ICamera::SDL_POINTS ),
@@ -124,11 +135,13 @@
 				    .def( "getDetailLevel", &ICamera::getDetailLevel )
 				    .def( "setNearClipDistance", &ICamera::setNearClipDistance )
 				    .def( "getNearClipDistance", &ICamera::getNearClipDistance )
+				    .def( "getFarClipDistance", &ICamera::getFarClipDistance )
 				    .def( "setFarClipDistance", &ICamera::setFarClipDistance )
 				    .def( "setFOV", &ICamera::setFOV )
 				    .def( "getFOV", &ICamera::getFOV )
-				    .def( "setAspectRatio", &ICamera::getAspectRatio )
-				    .def( "setDirection", &ICamera::setDirection )
+					 .def( "setAspectRatio", &ICamera::setAspectRatio )
+					 .def( "getAspectRatio", &ICamera::getAspectRatio )
+					 .def( "setDirection", &ICamera::setDirection )
 				    .def( "getDirection", &ICamera::getDirection )
 				    .def( "getUp", &ICamera::getUp )
 				    .def( "getRight", &ICamera::getRight )
@@ -144,10 +157,11 @@
 				    .def( "getProjectionMatrix", &ICamera::getProjectionMatrix )
 				    .def( "getViewMatrix", &ICamera::getViewMatrix )
 				];
+				YAKE_LOG( "ICamera bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<ISceneNode, Movable>( "ISceneNode" )
+				    class_<ISceneNode, bases<Movable, GraphicsEntity> >( "ISceneNode" )
 				    .def( "addChildNode", &ISceneNode::addChildNode )
 				    .def( "createChildNode", &ISceneNode::createChildNode )
 				    .def( "attachEntity", &ISceneNode::attachEntity )
@@ -167,8 +181,8 @@
 				    .def( "detachLight", (void(ISceneNode::*)(ILight*))&ISceneNode::detach )
 				    .def( "detachCamera", (void(ISceneNode::*)(ICamera*))&ISceneNode::detach )
 				    .def( "detachParticleSystem", (void(ISceneNode::*)(IParticleSystem*))&ISceneNode::detach )
-				    .def( "getName", (String(ISceneNode::*)()const)&ISceneNode::getName )
 				];
+				YAKE_LOG( "ISceneNode bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
@@ -178,10 +192,11 @@
 				    .def( "setDimensions", &IViewport::setDimensions )
 				    .def( "setZ", &IViewport::setZ )
 				];
+				YAKE_LOG( "IViewport bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
-				    class_<IWorld>( "IWorld" )
+				    class_<yake::graphics::IWorld>( "IWorld" )
 				    .def( "createLight", &IWorld::createLight )
 				    .def( "createCamera", &IWorld::createCamera )
 				    .def( "createSceneNode", &IWorld::createSceneNode )
@@ -199,6 +214,7 @@
 				    .def( "getRenderWindowHeight", &IWorld::getRenderWindowHeight )
 				    .def( "pickEntity", &IWorld::pickEntity )
 				];
+				YAKE_LOG( "IWorld bound..." );
 
 				module( YAKE_GRAPHICS_MODULE )
 				[
@@ -206,10 +222,9 @@
 				    .def( "shutdown", &IGraphicsSystem::shutdown )
 				    .def( "createWorld", &IGraphicsSystem::createWorld )
 				];
-
+				YAKE_LOG( "IGraphicsSystem bound..." );
 			}
 
-
 		} // namespace lua
 	} // namespace graphics
 } // namespace yake

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCamera.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -152,6 +152,12 @@
 	}
 	
 	//------------------------------------------------------
+	void OgreCamera::roll( const  real degrees )
+	{
+		mCam->roll( Ogre::Degree( degrees ) );
+	}
+	
+	//------------------------------------------------------
 	Ogre::ProjectionType yake2Ogre( const ICamera::ProjectionType type )
 	{
 		switch (type)
@@ -266,7 +272,7 @@
 		YAKE_ASSERT( mCam ).debug("need a camera!");
 		return mCam->getAspectRatio();
 	}
-
+	
 }
 }
 }

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCore.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCore.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreCore.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -76,9 +76,7 @@
 				const bool bShutdownOgre /*= true*/,
 				const bool bParseDefaultResourceFile /*= true*/,
 				Ogre::RenderWindow* pRenderWindow /*= 0*/) :
-		mShutdownOgre( bShutdownOgre ),
-		mSysFL( 0 ),
-		mRoot( 0 )
+		mShutdownOgre( bShutdownOgre )
 	{
 		mReady = false;
 		try {
@@ -263,7 +261,6 @@
 
 	void OgreCore::update( real timeElapsed )
 	{
-		YAKE_DECLARE_FUNCTION( update );
 		//HACK/FIXME
 		static bool bFirstTime = true;
 		if (bFirstTime)

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreEntity.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreEntity.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreEntity.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -97,20 +97,6 @@
 			mEntity->setCastShadows( castsShadow );
 	}
 
-
-	//------------------------------------------------------
-	String OgreEntity::getName() const
-	{
-		YAKE_ASSERT( mEntity ).debug( "need an entity" );
-		return String( mEntity->getName().c_str() );
-	}
-
-	//------------------------------------------------------
-	void OgreEntity::getName(String& name)
-	{
-		YAKE_ASSERT( mEntity ).debug( "need an entity" );
-		name = mEntity->getName().c_str();
-	}
 }
 }
 }

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreGeometryAccess.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreGeometryAccess.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreGeometryAccess.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -74,12 +74,12 @@
 
 	//-----------------------------------------------------
 	OgreSubmeshAccess::OgreSubmeshAccess( Ogre::MeshPtr& parentMesh, Ogre::SubMesh* subMesh )
-			: mMesh(parentMesh),
-				mSubmesh( subMesh ),
+			: 	mSubmesh( subMesh ),
+				mMesh(parentMesh),
 				mpLockedPositions(0),
+				mpLockedNormals(0),
 				mpLockedColours(0),
-				mpLockedIndices(0),
-				mpLockedNormals(0)
+				mpLockedIndices(0)
 	{
 		YAKE_ASSERT( !mMesh.isNull() );
 		for (int i=0; i<MAX_TEX_COORDS; ++i)

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreLight.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreLight.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreLight.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -231,7 +231,7 @@
 		YAKE_ASSERT( mLight ).debug( "need actual light!" );
 		return VEC_OGRE2YAKE( mLight->getDirection() );
 	}
-
+	
 } // ogre3d
 } // graphics
 } // yake

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreNode.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreNode.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreNode.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -37,7 +37,7 @@
 
 	//------------------------------------------------------
 	OgreNode::OgreNode( Ogre::SceneManager * sceneMgr, const String& name /*= ""*/ ) : 
-		mSceneMgr( sceneMgr ), mSceneNode( 0 )
+			mSceneNode( 0 ) ,mSceneMgr( sceneMgr )
 	{
 		YAKE_ASSERT( sceneMgr ).debug("need a scene manager!");
 		String id = name;
@@ -55,7 +55,6 @@
 		{
 			mSceneNode->removeAllChildren();
 			mSceneMgr->destroySceneNode( mSceneNode->getName() );
-			mSceneNode = 0;
 		}
 		mLights.clear();
 		mEntities.clear();
@@ -76,6 +75,26 @@
 	}
 
 	//------------------------------------------------------
+	Vector3 OgreNode::getPosition( ISceneNode::TransformSpace ts ) const
+	{
+		switch( ts )
+		{
+			case TS_LOCAL:
+				return Vector3();
+				
+			case TS_PARENT:
+				return getPosition();
+				
+			case TS_WORLD:
+				return getDerivedPosition();
+			
+			default:
+				YAKE_ASSERT( 0 ).error( "Unknown transform space" );
+				return Vector3();
+		}
+	}
+
+	//------------------------------------------------------
 	void OgreNode::setOrientation( const Quaternion & orientation )
 	{
 		YAKE_ASSERT( mSceneNode ).debug("need a scene node!");
@@ -252,24 +271,11 @@
 					return pNode;
 			}
 		}
+		
 		return 0;
 	}
 
 	//------------------------------------------------------
-	String OgreNode::getName() const
-	{
-		YAKE_ASSERT( mSceneNode ).debug("need a scene node!");
-		return String( mSceneNode->getName().c_str() );
-	}
-
-	//------------------------------------------------------
-	void OgreNode::getName(String& name)
-	{
-		YAKE_ASSERT( mSceneNode ).debug("need a scene node!");
-		name = mSceneNode->getName().c_str();
-	}
-
-	//------------------------------------------------------
 	const EntityPtrList& OgreNode::getEntities() const
 	{
 		return mEntities;

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -50,6 +50,6 @@
 	{
 		mParticleSys->setVisible( visible );
 	}
-
+	
 } // graphics
-} // yake
\ No newline at end of file
+} // yake

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreSkeleton.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreSkeleton.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreSkeleton.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -73,7 +73,6 @@
 		}*/
 	}
 
-
 	//------------------------------------------------------
 	void OgreSkeleton::setAnimationWeight( const String& rAnimName, real weight )
 	{
@@ -85,7 +84,7 @@
 	{
 		mEntity.attachObjectToBone( rBoneName, static_cast<OgreEntity*>( pEntity )->getEntity_() );
 	}
-
+	
 } // ogre3d
 } // graphics
 } // yake

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreViewport.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreViewport.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreViewport.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -105,7 +105,9 @@
 	//------------------------------------------------------
 	void OgreViewport::attachCamera( ICamera* pCam )
 	{
-		YAKE_ASSERT(1==0);
+		mCamera = dynamic_cast<OgreCamera*>( pCam );
+		
+		mViewport->setCamera( mCamera->getCamera_() );
 	}
 
 	//------------------------------------------------------

Modified: trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -82,14 +82,14 @@
 	}
 	
 	//-----------------------------------------------------
-	ISceneNode* GraphicalWorld::createSceneNode( const String& name /*= ""*/ )
+	ISceneNode* GraphicalWorld::createSceneNode( const String& name )
 	{
 		YAKE_ASSERT( msCore ).debug("need a core!");
 		return new OgreNode( msCore->getSceneMgr(), name );
 	}
 
 	//-----------------------------------------------------
-	IEntity* GraphicalWorld::createEntity( const String & mesh )
+	IEntity* GraphicalWorld::createEntity( const String& mesh )
 	{
 		YAKE_ASSERT( msCore ).debug("need a core!");
 		OgreEntity* pEntity = new OgreEntity( msCore->getSceneMgr(), mesh );

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -147,9 +147,9 @@
 		}
  		else if ( IShape::TriMeshDesc* pTriMeshDesc = dynamic_cast<IShape::TriMeshDesc*>( pShapeDesc ) )
  		{
- 			dTriMeshDataID dataId = mOdeWorld->getMeshDataById( pTriMeshDesc->meshId );
+			OdeTriMesh::MeshData data = mOdeWorld->getMeshDataById( pTriMeshDesc->meshId );
 			
-			OdeTriMesh* pMesh = new OdeTriMesh( mOdeWorld->_getOdeSpace(), this, dataId );
+			OdeTriMesh* pMesh = new OdeTriMesh( mOdeWorld->_getOdeSpace(), this, data.id );
 			
 			YAKE_ASSERT( pMesh ).error( "Mesh with such id wasn't found!" );
 			

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeBody.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -84,6 +84,67 @@
 		}
 		
 		//---------------------------------------------------
+		/**
+		 *     Parse mass description struct and fill ODE mass struct.
+		 * @param desc Mass description.
+		 * @param mass Mass struct to fill.
+		 */
+		void parseMassDesc( const IBody::MassDesc& desc, dMass* mass )
+		{
+			if ( const IBody::SphereMassDesc* sphereMassDesc = dynamic_cast<const IBody::SphereMassDesc*>( &desc ) )
+			{
+				dMassSetSphere( mass, sphereMassDesc->density, sphereMassDesc->radius );
+			}
+			else if ( const IBody::BoxMassDesc* boxMassDesc = dynamic_cast<const IBody::BoxMassDesc*>( &desc ) )
+			{
+				dMassSetBox( mass, boxMassDesc->density, boxMassDesc->sizeX, boxMassDesc->sizeY, boxMassDesc->sizeZ );
+			}
+			else if ( const IBody::CapsuleMassDesc* capsuleMassDesc = dynamic_cast<const IBody::CapsuleMassDesc*>( &desc ) )
+			{
+				dMassSetCappedCylinder( mass,
+												capsuleMassDesc->density,
+												2, 							// along Y axis
+												capsuleMassDesc->radius,
+												capsuleMassDesc->length );
+			}
+			else if ( const IBody::CylinderMassDesc* cylMassDesc = dynamic_cast<const IBody::CylinderMassDesc*>( &desc ) )
+			{
+				dMassSetCylinder( mass,
+										cylMassDesc->density,
+										2,							// along Y axis
+										cylMassDesc->radius,
+										cylMassDesc->length );
+			}
+			else
+			{
+				YAKE_ASSERT( 0 ).error( "Unsupported/unknown mass description type!" );
+			}
+			
+			dMassTranslate( mass, desc.offset.x, desc.offset.y, desc.offset.z );
+		}
+		
+		//---------------------------------------------------
+		void OdeBody::setMass( const MassDesc& rDesc )
+		{
+			parseMassDesc( rDesc, &mMass );
+			
+			mOdeBody->setMass( &mMass );
+		}
+		
+		//---------------------------------------------------
+		void OdeBody::addMass( const MassDesc& rDesc )
+		{
+			dMass massToAdd;
+			
+			parseMassDesc( rDesc, &massToAdd );
+			
+			dMassAdd( &mMass, &massToAdd );
+			
+			mOdeBody->setMass( &mMass );
+		}
+
+		
+		//---------------------------------------------------
 		void OdeBody::addForce( const Force& force )
 		{
 			//@todo apply force over several time steps according to duration.

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeShapes.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,18 +1,18 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
    the terms of the GNU Lesser General Public License as published by the Free Software
    Foundation; either version 2 of the License, or (at your option) any later
    version.
-
+ 
    This program is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
+ 
    You should have received a copy of the GNU Lesser General Public License along with
    this program; if not, write to the Free Software Foundation, Inc., 59 Temple
    Place - Suite 330, Boston, MA 02111-1307, USA, or go to
@@ -27,23 +27,25 @@
 #include <yake/plugins/physicsODE/yakePCH.h>
 #include <yake/plugins/physicsODE/OdeShapes.h>
 
-namespace yake {
-namespace physics {
+namespace yake
+{
+	namespace physics
+	{
 
 		//-----------------------------------------------------
 		//	OdeGeom
 		//-----------------------------------------------------
-		
+
 		//-----------------------------------------------------
-		OdeGeom::OdeGeom(OdeActor* pOwner) : 
-			mOdeGeomID( 0 ), 
-			mOdeSpace( 0 ), 
-			mOdeGeom( 0 ),
-			mOwner( pOwner )
+		OdeGeom::OdeGeom(OdeActor* pOwner) :
+				mOdeGeomID( 0 ),
+				mOdeSpace( 0 ),
+				mOdeGeom( 0 ),
+				mOwner( pOwner )
 		{
 			YAKE_ASSERT( mOwner );
 		}
-		
+
 		//-----------------------------------------------------
 		OdeGeom::~OdeGeom()
 		{
@@ -57,57 +59,57 @@
 				mOdeGeomID = 0;
 			}
 		}
-		
+
 		//-----------------------------------------------------
-		dGeomID OdeGeom::_getOdeGeomID() const 
+		dGeomID OdeGeom::_getOdeGeomID() const
 		{
-			return mOdeGeomID; 
+			return mOdeGeomID;
 		}
-		
+
 		//-----------------------------------------------------
-		dSpace* OdeGeom::_getOdeSpace() const	
-		{ 
+		dSpace* OdeGeom::_getOdeSpace() const
+		{
 			return mOdeSpace;
 		}
-		
+
 		//-----------------------------------------------------
 		void OdeGeom::_setData( void* pData )
 		{
 			dGeomSetData( mOdeGeomID, pData );
 		}
-		
+
 		//-----------------------------------------------------
- 		void* OdeGeom::_getData() const
+		void* OdeGeom::_getData() const
 		{
 			return dGeomGetData( mOdeGeomID );
 		}
-		
+
 		//-----------------------------------------------------
-		dGeom* OdeGeom::_getOdeGeomPtr() 
-		{ 
+		dGeom* OdeGeom::_getOdeGeomPtr()
+		{
 			return mOdeGeom;
 		}
-		
+
 		//-----------------------------------------------------
 		const OdeMaterial& OdeGeom::getMaterial() const
 		{
 			return mMaterial;
 		}
-		
+
 		//-----------------------------------------------------
 		void OdeGeom::setMaterial( OdeMaterial const& rMaterial )
 		{
 			mMaterial = rMaterial;
 		}
-		
+
 		//-----------------------------------------------------
-		 void OdeGeom::setPosition( Vector3 const& rPosition )
-		 {
+		void OdeGeom::setPosition( Vector3 const& rPosition )
+		{
 			if (getType() == ST_PLANE)
 				return;
 			dGeomSetPosition( mOdeGeomID, rPosition.x, rPosition.y, rPosition.z );
-		 }
-		 
+		}
+
 		//-----------------------------------------------------
 		Vector3 OdeGeom::getPosition() const
 		{
@@ -116,7 +118,7 @@
 			const dReal* pos = dGeomGetPosition( mOdeGeomID );
 			return Vector3( real(pos[0]), real(pos[1]), real(pos[2]) );
 		}
-		
+
 		//-----------------------------------------------------
 		void OdeGeom::setOrientation( Quaternion const& rOrientation )
 		{
@@ -125,7 +127,7 @@
 			const dQuaternion q = { rOrientation.w, rOrientation.x, rOrientation.y, rOrientation.z };
 			dGeomSetQuaternion( mOdeGeomID, q );
 		}
-		
+
 		//-----------------------------------------------------
 		Quaternion OdeGeom::getOrientation() const
 		{
@@ -134,25 +136,25 @@
 
 			dQuaternion q;
 			dGeomGetQuaternion( mOdeGeomID, q );
-			
+
 			return Quaternion( real(q[0]), real(q[1]), real(q[2]), real(q[3]) );
 		}
 
 		//-----------------------------------------------------
 		//	OdeTriMesh
 		//-----------------------------------------------------
-		
+
 		//-----------------------------------------------------
 		OdeTriMesh::OdeTriMesh( dSpace* pSpace, OdeActor* pOwner, dTriMeshDataID meshDataId ) :
-			OdeGeom( pOwner )
+				OdeGeom( pOwner )
 		{
 			YAKE_ASSERT( pSpace ).debug( "Need a valid space!" );
-			
+
 			mOdeSpace = pSpace;
 
 			// enjoy!
 			mOdeGeomID = dCreateTriMesh( mOdeSpace->id(), meshDataId, 0, 0, 0 );
-			
+
 			// enabling collisions with spheres and boxes
 			dGeomTriMeshEnableTC( mOdeGeomID, dSphereClass, 1 );
 			dGeomTriMeshEnableTC( mOdeGeomID, dBoxClass, 1 );
@@ -165,107 +167,107 @@
 		{
 			return ST_TRIANGLE_MESH;
 		}
-		
+
 		//-----------------------------------------------------
 		OdeTriMesh::~OdeTriMesh()
 		{
 			dGeomDestroy( mOdeGeomID );
-			
+
 		}
 
 		//-----------------------------------------------------
-		dTriMeshDataID OdeTriMesh::buildMeshData( TriangleMeshDesc::VertexVector const& rVertices,
-						 		  	  				TriangleMeshDesc::IndexVector const& rIndices,
-						 		  	 				TriangleMeshDesc::NormalVector const& rNormals )
+		//-----------------------------------------------------
+		void OdeTriMesh::buildMeshData(	MeshData& dataToFill,
+		                                TriangleMeshDesc::VertexVector const& rVertices,
+		                                TriangleMeshDesc::IndexVector const& rIndices,
+		                                TriangleMeshDesc::NormalVector const& rNormals )
 		{
 			YAKE_ASSERT( !rVertices.empty() ).error( "Wont create empty mesh!");
 			YAKE_ASSERT( !rIndices.empty() ).error( "Vertices without indices are meaningless!" );
+			// Performing conversion to ODE internal format
+			dReal*		pVertices;
+			uint32*		pIndices;
+			dReal*		pNormals;
 
-			// Performing conversion to ODE internal format
-			dReal*		pVertices = 0;
- 			uint32*		pIndices = 0;
- 			dReal*		pNormals = 0;
- 			
 			// stuffing vertices
- 			pVertices = new dReal[ 3*rVertices.size() ];
- 			uint32 elementCounter = 0;
+			pVertices = new dReal[ 3*rVertices.size() ];
+			uint32 elementCounter = 0;
 
- 			ConstVectorIterator<TriangleMeshDesc::VertexVector> itV( rVertices.begin(), rVertices.end() );
- 			while ( itV.hasMoreElements() )
- 			{
- 				Vector3 const& v = itV.getNext();
- 				pVertices[ elementCounter*3 + 0 ] = v.x;
- 				pVertices[ elementCounter*3 + 1 ] = v.y;
- 				pVertices[ elementCounter*3 + 2 ] = v.z;
- 				++elementCounter;
- 			}
- 			
+			ConstVectorIterator<TriangleMeshDesc::VertexVector> itV( rVertices.begin(), rVertices.end() );
+			while ( itV.hasMoreElements() )
+			{
+				Vector3 const& v = itV.getNext();
+				pVertices[ elementCounter*3 + 0 ] = v.x;
+				pVertices[ elementCounter*3 + 1 ] = v.y;
+				pVertices[ elementCounter*3 + 2 ] = v.z;
+				++elementCounter;
+			}
+
 			// pouring indices
 			pIndices = new uint32[ rIndices.size() ];
 			elementCounter = 0;
- 			
+
 			ConstVectorIterator<TriangleMeshDesc::IndexVector> itI( rIndices.begin(), rIndices.end() );
- 			while ( itI.hasMoreElements() )
- 			{
- 				pIndices[ elementCounter++] = itI.getNext();
- 			}
+			while ( itI.hasMoreElements() )
+			{
+				pIndices[ elementCounter++] = itI.getNext();
+			}
 
 			// spice-up with normals
- 			if ( !rNormals.empty() ) // according to taste (normals are optional)
- 			{
- 				pNormals = new dReal[ 3*rNormals.size() ];
- 				elementCounter  = 0;
- 				
+			if ( !rNormals.empty() ) // according to taste (normals are optional)
+			{
+				pNormals = new dReal[ 3*rNormals.size() ];
+				elementCounter  = 0;
+
 				ConstVectorIterator<TriangleMeshDesc::NormalVector> itN( rNormals.begin(), rNormals.end() );
- 				while ( itN.hasMoreElements() )
- 				{
- 					Vector3 const& v = itN.getNext();
- 					pNormals[ elementCounter*3 + 0 ] = v.x;
- 					pNormals[ elementCounter*3 + 1 ] = v.y;
- 					pNormals[ elementCounter*3 + 2 ] = v.z;
- 					++elementCounter;
- 				}
- 			}
- 
+				while ( itN.hasMoreElements() )
+				{
+					Vector3 const& v = itN.getNext();
+					pNormals[ elementCounter*3 + 0 ] = v.x;
+					pNormals[ elementCounter*3 + 1 ] = v.y;
+					pNormals[ elementCounter*3 + 2 ] = v.z;
+					++elementCounter;
+				}
+			}
+
 			// serving up
- 			dTriMeshDataID dataId = dGeomTriMeshDataCreate();
- 
- 			if ( !rNormals.empty() )
- 			{
- 				dGeomTriMeshDataBuildDouble1( dataId,
- 												 pVertices,
- 												 sizeof( dReal )*3,
- 												 rVertices.size(),
- 												 pIndices,
- 												 rIndices.size(),
- 												 sizeof( uint32 )*3,
- 												 pNormals );
- 			}
- 			else
- 			{
- 				dGeomTriMeshDataBuildDouble(  dataId,
- 												pVertices,
- 												sizeof( dReal )*3,
- 												rVertices.size(),
- 												pIndices,
- 												rIndices.size(),
- 												sizeof( uint32 )*3 );
- 			}
-			
-			YAKE_SAFE_DELETE( pNormals );
-			YAKE_SAFE_DELETE( pVertices );
-			YAKE_SAFE_DELETE( pIndices );
-			
-			return dataId;
+			dTriMeshDataID dataId = dGeomTriMeshDataCreate();
+
+			if ( !rNormals.empty() )
+			{
+				dGeomTriMeshDataBuildDouble1( dataId,
+				                              pVertices,
+				                              sizeof( dReal )*3,
+				                              rVertices.size(),
+				                              pIndices,
+				                              rIndices.size(),
+				                              sizeof( uint32 )*3,
+				                              pNormals );
+			}
+			else
+			{
+				dGeomTriMeshDataBuildDouble(  dataId,
+				                              pVertices,
+				                              sizeof( dReal )*3,
+				                              rVertices.size(),
+				                              pIndices,
+				                              rIndices.size(),
+				                              sizeof( uint32 )*3 );
+			}
+
+			dataToFill.normals = pNormals;
+			dataToFill.vertices = pVertices;
+			dataToFill.indices = pIndices;
+			dataToFill.id = dataId;
 		}
-		
+
 		//-----------------------------------------------------
 		//	OdeSphere
 		//-----------------------------------------------------
 
 		//-----------------------------------------------------
 		OdeSphere::OdeSphere( dSpace* pSpace, OdeActor* pOwner, real radius ) :
-			OdeGeom( pOwner )
+				OdeGeom( pOwner )
 		{
 			YAKE_ASSERT( pSpace ).debug( "Need a valid space!" );
 
@@ -278,7 +280,7 @@
 
 			_setData( this );
 		}
-		
+
 		//-----------------------------------------------------
 		ShapeType OdeSphere::getType() const
 		{
@@ -289,44 +291,44 @@
 		//	OdeCCylinder
 		//-----------------------------------------------------
 
-		//-----------------------------------------------------			
+		//-----------------------------------------------------
 		OdeCCylinder::OdeCCylinder( dSpace* pSpace, OdeActor* pOwner, real radius, real length ) :
-			OdeGeom( pOwner )
+				OdeGeom( pOwner )
 		{
 			YAKE_ASSERT( pSpace ).debug( "Need a valid space!" );
-			
+
 			mOdeSpace = pSpace;
-			
+
 			YAKE_ASSERT( radius > 0 ).error( "Radius should be invalid!" );
 			YAKE_ASSERT( length > 0 ).error( "Length should be positive!" );
 
 			mOdeGeom = new dCCylinder( mOdeSpace->id(), static_cast<dReal>( radius ), static_cast<dReal>( length ) );
-			
+
 			mOdeGeomID = mOdeGeom->id();
 
 			_setData( this );
 		}
-		
+
 		//-----------------------------------------------------
 		ShapeType OdeCCylinder::getType() const
 		{
 			return ST_CYLINDER;
 		}
-		
+
 		//-----------------------------------------------------
 		//	OdeBox
 		//-----------------------------------------------------
-		
-		//-----------------------------------------------------			
-		OdeBox::OdeBox( dSpace* pSpace, OdeActor* pOwner, real sizex, real sizey, real sizez) : 
-			OdeGeom( pOwner )
+
+		//-----------------------------------------------------
+		OdeBox::OdeBox( dSpace* pSpace, OdeActor* pOwner, real sizex, real sizey, real sizez) :
+				OdeGeom( pOwner )
 		{
 			YAKE_ASSERT( pSpace ).debug( "Need a valid space!" );
-			
+
 			mOdeSpace = pSpace;
-			
+
 			mOdeGeom = new dBox( mOdeSpace->id(), sizex, sizey, sizez );
-			
+
 			mOdeGeomID = mOdeGeom->id();
 
 			_setData( this );
@@ -341,19 +343,19 @@
 		//-----------------------------------------------------
 		//	OdePlane
 		//-----------------------------------------------------
-		
+
 		//-----------------------------------------------------
 		OdePlane::OdePlane( dSpace* pSpace, OdeActor* pOwner, real a, real b, real c, real d ) :
-			OdeGeom( pOwner )
+				OdeGeom( pOwner )
 		{
 			YAKE_ASSERT( pSpace ).debug( "Need a valid space!" );
-			
+
 			mOdeSpace = pSpace;
 
 			YAKE_ASSERT( a != 0. || b != 0. || c != 0. ).error( "Invalid plane equation!" );
-			
+
 			Vector3 normal = Vector3( a, b, c );
-			
+
 			if ( normal.squaredLength() < 0.02 )
 				normal = Vector3( 0, 1, 0 );
 			else
@@ -365,36 +367,36 @@
 
 			_setData( this );
 		}
-		
+
 		//-----------------------------------------------------
 		ShapeType OdePlane::getType() const
 		{
 			return ST_PLANE;
 		}
-		
+
 		//-----------------------------------------------------
 		//	OdeTransformGeom
 		//-----------------------------------------------------
-		
+
 		//-----------------------------------------------------
-		OdeTransformGeom::OdeTransformGeom( dSpace* pSpace, OdeActor* pOwner ) : 
-			OdeGeom( pOwner ),
-			mAttachedGeom( NULL )
+		OdeTransformGeom::OdeTransformGeom( dSpace* pSpace, OdeActor* pOwner ) :
+				OdeGeom( pOwner ),
+				mAttachedGeom( NULL )
 		{
 			YAKE_ASSERT( pSpace ).debug( "Need a valid space!" );
-			
+
 			mOdeSpace = pSpace;
-			
+
 			mOdeGeom = new dGeomTransform( mOdeSpace->id() );
 			YAKE_ASSERT( mOdeGeom );
 			mOdeGeomID = mOdeGeom->id();
-			
+
 			dGeomTransformSetCleanup( mOdeGeomID, 1 );
 			dGeomTransformSetInfo( mOdeGeomID, 1 );
 
 			_setData( this );
 		}
-		
+
 		//-----------------------------------------------------
 		ShapeType OdeTransformGeom::getType() const
 		{
@@ -403,11 +405,11 @@
 
 		//-----------------------------------------------------
 		void OdeTransformGeom::attachGeom( OdeGeom* pGeom )
-		{ 
+		{
 			YAKE_ASSERT( pGeom ).error( "Attachment failed due to invalid geom passed!" );
-			
+
 			mAttachedGeom = pGeom;
-			
+
 			mAttachedGeom->_setData( this->_getData() );
 
 			dSpace* pSpace = mAttachedGeom->_getOdeSpace();
@@ -416,79 +418,79 @@
 			pSpace->remove( mAttachedGeom->_getOdeGeomID() );
 			dGeomTransformSetGeom( mOdeGeomID, mAttachedGeom->_getOdeGeomID() );
 		}
-		
+
 		//-----------------------------------------------------
 		OdeGeom* OdeTransformGeom::getAttachedGeom() const
-		{ 
+		{
 			return mAttachedGeom;
 		}
-		
-// /*		//-----------------------------------------------------
-// 		void OdeCollisionGeomBase::tfAttachGeom( ICollisionGeometry* pGeom )
-// 		{ YAKE_ASSERT(1==0).error("not implemented"); }
-// 		//-----------------------------------------------------
-// 		ICollisionGeometry* OdeCollisionGeomBase::tfGetAttachedGeom() const
-// 		{ return 0; }
-// 		//-----------------------------------------------------
-// 		Vector3 OdeCollisionGeomBase::planeGetNormal() const
-// 		{ return Vector3::kZero; }
-// 		//-----------------------------------------------------
-// 		String OdeCollisionGeomBase::meshGetName() const
-// 		{ return ""; }
-// 		//-----------------------------------------------------
-// 		real OdeCollisionGeomBase::planeGetDistance() const
-// 		{ return 0; }
-// 		//-----------------------------------------------------
-// 		real OdeCollisionGeomBase::sphereGetRadius() const
-// 		{ return 0; }
-// 		//-----------------------------------------------------
-// 		void OdeCollisionGeomBase::sphereSetRadius(const real radius)
-// 		{}
-// 		//-----------------------------------------------------
-// 		Vector3 OdeCollisionGeomBase::boxGetDimensions() const
-// 		{ return Vector3::kZero; }
-// 		//-----------------------------------------------------
-// 		Vector3 OdeCollisionGeomBase::rayGetOrigin() const
-// 		{ return Vector3::kZero; }
-// 		//-----------------------------------------------------
-// 		Quaternion OdeCollisionGeomBase::rayGetOrientation() const
-// 		{ return Quaternion::kIdentity; }
-// 
-// 		//-----------------------------------------------------
-// 		real OdeCollisionGeomSphere::sphereGetRadius() const
-// 		{
-// 			return static_cast<dSphere*>(mOdeGeom)->getRadius();
-// 		}
-// 
-// 		//-----------------------------------------------------
-// 		void OdeCollisionGeomSphere::sphereSetRadius(const real radius)
-// 		{
-// 			static_cast<dSphere*>(mOdeGeom)->setRadius(radius);
-// 		}
-// 
-// 		//-----------------------------------------------------
-// 		Vector3 OdeCollisionGeomBox::boxGetDimensions() const
-// 		{
-// 			dVector3 lengths;
-// 			static_cast<dBox*>(mOdeGeom)->getLengths(lengths);
-// 			return Vector3( lengths[0], lengths[1], lengths[2] );
-// 		}
-// 
-// 
-// 		//-----------------------------------------------------
-// 		Vector3 OdeCollisionGeomPlane::planeGetNormal() const
-// 		{
-// 			dVector4 params;
-// 			static_cast<dPlane*>(mOdeGeom)->getParams(params);
-// 			return Vector3( params[0], params[1], params[2] );
-// 		}
-// 		//-----------------------------------------------------
-// 		real OdeCollisionGeomPlane::planeGetDistance() const
-// 		{
-// 			dVector4 params;
-// 			static_cast<dPlane*>(mOdeGeom)->getParams(params);
-// 			return params[3];
-// 		}
 
-} // physics
+		// /*		//-----------------------------------------------------
+		// 		void OdeCollisionGeomBase::tfAttachGeom( ICollisionGeometry* pGeom )
+		// 		{ YAKE_ASSERT(1==0).error("not implemented"); }
+		// 		//-----------------------------------------------------
+		// 		ICollisionGeometry* OdeCollisionGeomBase::tfGetAttachedGeom() const
+		// 		{ return 0; }
+		// 		//-----------------------------------------------------
+		// 		Vector3 OdeCollisionGeomBase::planeGetNormal() const
+		// 		{ return Vector3::kZero; }
+		// 		//-----------------------------------------------------
+		// 		String OdeCollisionGeomBase::meshGetName() const
+		// 		{ return ""; }
+		// 		//-----------------------------------------------------
+		// 		real OdeCollisionGeomBase::planeGetDistance() const
+		// 		{ return 0; }
+		// 		//-----------------------------------------------------
+		// 		real OdeCollisionGeomBase::sphereGetRadius() const
+		// 		{ return 0; }
+		// 		//-----------------------------------------------------
+		// 		void OdeCollisionGeomBase::sphereSetRadius(const real radius)
+		// 		{}
+		// 		//-----------------------------------------------------
+		// 		Vector3 OdeCollisionGeomBase::boxGetDimensions() const
+		// 		{ return Vector3::kZero; }
+		// 		//-----------------------------------------------------
+		// 		Vector3 OdeCollisionGeomBase::rayGetOrigin() const
+		// 		{ return Vector3::kZero; }
+		// 		//-----------------------------------------------------
+		// 		Quaternion OdeCollisionGeomBase::rayGetOrientation() const
+		// 		{ return Quaternion::kIdentity; }
+		//
+		// 		//-----------------------------------------------------
+		// 		real OdeCollisionGeomSphere::sphereGetRadius() const
+		// 		{
+		// 			return static_cast<dSphere*>(mOdeGeom)->getRadius();
+		// 		}
+		//
+		// 		//-----------------------------------------------------
+		// 		void OdeCollisionGeomSphere::sphereSetRadius(const real radius)
+		// 		{
+		// 			static_cast<dSphere*>(mOdeGeom)->setRadius(radius);
+		// 		}
+		//
+		// 		//-----------------------------------------------------
+		// 		Vector3 OdeCollisionGeomBox::boxGetDimensions() const
+		// 		{
+		// 			dVector3 lengths;
+		// 			static_cast<dBox*>(mOdeGeom)->getLengths(lengths);
+		// 			return Vector3( lengths[0], lengths[1], lengths[2] );
+		// 		}
+		//
+		//
+		// 		//-----------------------------------------------------
+		// 		Vector3 OdeCollisionGeomPlane::planeGetNormal() const
+		// 		{
+		// 			dVector4 params;
+		// 			static_cast<dPlane*>(mOdeGeom)->getParams(params);
+		// 			return Vector3( params[0], params[1], params[2] );
+		// 		}
+		// 		//-----------------------------------------------------
+		// 		real OdeCollisionGeomPlane::planeGetDistance() const
+		// 		{
+		// 			dVector4 params;
+		// 			static_cast<dPlane*>(mOdeGeom)->getParams(params);
+		// 			return params[3];
+		// 		}
+
+	} // physics
 } // yake

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeWorld.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -71,7 +71,13 @@
  		{
 			for ( MeshDataMap::iterator i = mMeshDataMap.begin(); i != mMeshDataMap.end(); ++i )
 			{
-				dGeomTriMeshDataDestroy( i->second );
+				OdeTriMesh::MeshData mesh_data = i->second;
+				
+				dGeomTriMeshDataDestroy( mesh_data.id );
+				
+				YAKE_SAFE_DELETE_ARRAY( mesh_data.vertices );
+				YAKE_SAFE_DELETE_ARRAY( mesh_data.indices );
+				YAKE_SAFE_DELETE_ARRAY( mesh_data.normals );
 			}
 
  			YAKE_SAFE_DELETE( mOdeContactGroup );
@@ -323,16 +329,19 @@
 		//-----------------------------------------------------
 		TriangleMeshId OdeWorld::createTriangleMesh( TriangleMeshDesc const& rTriMeshDesc )
 		{
-			dTriMeshDataID dataId = OdeTriMesh::buildMeshData(	rTriMeshDesc.vertices,
-																rTriMeshDesc.indices,
-																rTriMeshDesc.normals );
+			OdeTriMesh::MeshData data;
+			
+			OdeTriMesh::buildMeshData( data,
+												rTriMeshDesc.vertices,
+												rTriMeshDesc.indices,
+												rTriMeshDesc.normals );
 
-			mMeshDataMap.insert( MeshDataMap::value_type( mNextMeshId, dataId ) );
+			mMeshDataMap.insert( MeshDataMap::value_type( mNextMeshId, data ) );
 			
 			return mNextMeshId++;
 		}
 		//-----------------------------------------------------
-		dTriMeshDataID OdeWorld::getMeshDataById(  TriangleMeshId id ) const
+		OdeTriMesh::MeshData OdeWorld::getMeshDataById(  TriangleMeshId id ) const
 		{
 			MeshDataMap::const_iterator i = mMeshDataMap.find( id );
 			

Modified: trunk/yake/src/yapp/Makefile.am
===================================================================
--- trunk/yake/src/yapp/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,3 +1,3 @@
 INCLUDES = $(all_includes)
 METASOURCES = AUTO
-SUBDIRS = base loader model statemachine ent gui msg plugins samples
+SUBDIRS = base loader model statemachine ent gui msg plugins samples raf

Modified: trunk/yake/src/yapp/ent/yakeEntity.cpp
===================================================================
--- trunk/yake/src/yapp/ent/yakeEntity.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/ent/yakeEntity.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -79,7 +79,7 @@
 		++mAge;
 		_tickComponents();
 	}
-	void Entity::addComponent( const String& tag, SharedPtr<EntityComponent>& pComponent, size_t prio /*= 0*/ )
+	void Entity::addComponent( const String& tag, const SharedPtr<EntityComponent>& pComponent, size_t prio /*= 0*/ )
 	{
 		YAKE_ASSERT( prio == 0 )(prio).warning("Only 0 priorities are currently supported!");
 		YAKE_ASSERT( !tag.empty() ).warning("");

Modified: trunk/yake/src/yapp/ent/yakeTrigger.cpp
===================================================================
--- trunk/yake/src/yapp/ent/yakeTrigger.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/ent/yakeTrigger.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -66,6 +66,7 @@
 			if (itFind == mVolumes.end())
 				return pV;
 			mVolumes.erase( itFind );
+			return pV;
 		}
 		void VolumeSet::translate(const Vector3&)
 		{

Modified: trunk/yake/src/yapp/loader/yakeDotScene.cpp
===================================================================
--- trunk/yake/src/yapp/loader/yakeDotScene.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/loader/yakeDotScene.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -46,8 +46,6 @@
 	//------------------------------------------------------
 	bool DotSceneParser::load( const SharedPtr<dom::INode>& docNode )
 	{
-		YAKE_DECLARE_FUNCTION( load );
-		
 		YAKE_LOG( "load()" );
 		
 		YAKE_ASSERT( docNode.get() );
@@ -67,8 +65,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readScene( const SharedPtr<dom::INode>& pNode )
 	{
-		YAKE_DECLARE_FUNCTION( readScene );
-		
 		//const String name = pNode->getAttributeValueAs<String>( "name" );
 		//YAKE_LOG( "readScene() [" + name + "]" );
 		
@@ -84,8 +80,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readNodes( const SharedPtr<dom::INode>& pNodes )
 	{
-		YAKE_DECLARE_FUNCTION( readNodes );
-		
 		YAKE_LOG( "readNodes()" );
 		YAKE_ASSERT( pNodes );
 		
@@ -99,8 +93,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readNode( const SharedPtr<dom::INode>& pNode, String parentNodeName )
 	{
-		YAKE_DECLARE_FUNCTION( readNode );
-		
 		String nodeName = pNode->getAttributeValueAs<String>( "name" );
 		
 		YAKE_LOG( "readNode() [name=" + nodeName + "]" );
@@ -184,8 +176,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readEntity( const SharedPtr<dom::INode>& pNode, String parentNodeName )
 	{
-		YAKE_DECLARE_FUNCTION( readEntity );
-		
 		YAKE_ASSERT( pNode );
 		
 		EntityDesc desc;
@@ -231,17 +221,17 @@
 	}
 	
 	//------------------------------------------------------
-	void DotSceneParser::readRotation( const SharedPtr<dom::INode>& pNode, Quaternion & rotation )
+	void DotSceneParser::readRotation( const SharedPtr<dom::INode>& pNode, Quaternion& rotation )
 	{
 		YAKE_ASSERT( pNode );
-		if (pNode->getAttributeValueAs<String>("qx") != "")
+		if ( pNode->getAttributeValueAs<String>("qx") != "" )
 		{
 			rotation.x = StringUtil::parseReal( pNode->getAttributeValueAs<String>("qx") );
 			rotation.y = StringUtil::parseReal( pNode->getAttributeValueAs<String>("qy") );
 			rotation.z = StringUtil::parseReal( pNode->getAttributeValueAs<String>("qz") );
 			rotation.w = StringUtil::parseReal( pNode->getAttributeValueAs<String>("qw") );
 		}
-		if (pNode->getAttributeValueAs<String>("axisX") != "")
+		else if ( pNode->getAttributeValueAs<String>("axisX") != "" )
 		{
 			Vector3 axis;
 			axis.x = StringUtil::parseReal( pNode->getAttributeValueAs<String>("axisX") );
@@ -249,7 +239,7 @@
 			axis.z = StringUtil::parseReal( pNode->getAttributeValueAs<String>("axisZ") );
 			rotation.FromAxes( &axis );
 		}
-		if (pNode->getAttributeValueAs<String>("angleX") != "")
+		else if ( pNode->getAttributeValueAs<String>("angleX") != "" )
 		{
 			Vector3 axis;
 			axis.x = StringUtil::parseReal( pNode->getAttributeValueAs<String>("angleX") );
@@ -262,8 +252,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readColour( const SharedPtr<dom::INode>& pNode, Color& colour )
 	{
-		YAKE_DECLARE_FUNCTION( readColour );
-		
 		YAKE_ASSERT( pNode );
 		
 		String r = pNode->getAttributeValueAs<String>("r");
@@ -301,8 +289,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readLight( const SharedPtr<dom::INode>& pNode, String parentNodeName )
 	{
-		YAKE_DECLARE_FUNCTION( readLight );
-		
 		String name = pNode->getAttributeValueAs<String>( "name" );
 
 		LightDesc desc;
@@ -374,8 +360,6 @@
 	//------------------------------------------------------
 	void DotSceneParser::readCamera( const SharedPtr<dom::INode>& pNode, String parentNodeName )
 	{
-		YAKE_DECLARE_FUNCTION( readCamera );
-		
 		String name = pNode->getAttributeValueAs<String>( "name" );
 
 		CameraDesc desc;
@@ -395,6 +379,12 @@
 		
 		desc.fov = StringUtil::parseReal( pNode->getAttributeValueAs<String>( "fov" ) );
 		
+		// Reading aspect ratio
+		String aspectRatio = pNode->getAttributeValueAs<String>( "aspectRatio" );
+		// default value is 1.333 ( 640/480, 800/600, etc... )
+		desc.aspectRatio =
+				aspectRatio == "" ? 1.333 : StringUtil::parseReal( aspectRatio );
+		
 		const dom::NodeList& nodes = pNode->getNodes();
 		for ( dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it )
 		{

Modified: trunk/yake/src/yapp/model/Makefile.am
===================================================================
--- trunk/yake/src/yapp/model/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/model/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -4,6 +4,5 @@
 lib_LTLIBRARIES = libyappModel.la
 libyappModel_la_SOURCES = yakeComplexModel.cpp yakeGraphical.cpp \
 	yakePhysical.cpp yakeVehicle.cpp yakeActor.cpp yakeModelLink.cpp \
-	yakeModelMovableLink.cpp yakeNativeEngine.cpp yakeNativeWheel.cpp \
-	yakeVehiclePhysicalComponent.cpp yakeVehicleSerializerXML.cpp yakeVehicleTpl.cpp
+	yakeModelMovableLink.cpp yakeVehiclePhysicalComponent.cpp yakeVehicleTpl.cpp
 libyappModel_la_LIBADD = $(top_builddir)/src/yapp/loader/libyappLoader.la

Modified: trunk/yake/src/yapp/model/yakeComplexModel.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -33,39 +33,46 @@
 namespace complex {
 
 	//-----------------------------------------------------
-	Model::Model() : mParent(0)
+	Model::Model() : mParent( 0 )
 	{
 	}
+	
 	//-----------------------------------------------------
 	Model::~Model()
 	{
 	}
+	
 	//-----------------------------------------------------
 	void Model::setParentModel( Model* pModel )
 	{
 		mParent = pModel;
 	}
+	
 	//-----------------------------------------------------
 	Model* Model::getParentModel() const
 	{
 		return mParent;
 	}
+	
 	//-----------------------------------------------------
-	void Model::addChildModel( SharedPtr<Model> & rModel )
+	void Model::addChildModel( SharedPtr<Model>& rModel )
 	{
 		YAKE_ASSERT( rModel.get() );
 		mChildren.push_back( rModel );
 	}
+	
 	//-----------------------------------------------------
-	SharedPtr<Model> Model::getChildModelByName( const String & rName ) const
+	SharedPtr<Model> Model::getChildModelByName( const String& rName ) const
 	{
 		return SharedPtr<Model>();
 	}
+	
 	//-----------------------------------------------------
-	SharedPtr<Model> Model::removeChildModel( const String & rName )
+	SharedPtr<Model> Model::removeChildModel( const String& rName )
 	{
 		return SharedPtr<Model>();
 	}
+	
 	//-----------------------------------------------------
 	SharedPtr<Model> Model::removeChildModel( const SharedPtr<Model>& rModel )
 	{
@@ -84,29 +91,29 @@
 	}
 
 	//-----------------------------------------------------
-	void Model::addPhysical(const SharedPtr<Physical> & pPhysical, const String & rName)
+	void Model::addPhysical( const SharedPtr<Physical>& pPhysical, const String& rName )
 	{
 		YAKE_ASSERT( pPhysical.get() );
 		String name = rName;
 		if (name != "")
 		{
 			PhysicalMap::const_iterator itFind = mPhysicals.find( name );
-			YAKE_ASSERT( itFind == mPhysicals.end() ).debug("submodel needs a unique name! name already taken!");
+			YAKE_ASSERT( itFind == mPhysicals.end() ).debug( "submodel needs a unique name! name already taken!" );
 		}
 		else
-			name = uniqueName::create("auto_");
+			name = uniqueName::create( "auto_" );
 		mPhysicals.insert( std::make_pair(name,pPhysical) );
 	}
 
 	//-----------------------------------------------------
-	void Model::addGraphical(const SharedPtr<Graphical> & pGraphical, const String & rName)
+	void Model::addGraphical( const SharedPtr<Graphical>& pGraphical, const String& rName )
 	{
 		YAKE_ASSERT( pGraphical.get() );
 		String name = rName;
-		if (name != "")
+		if ( name != "" )
 		{
 			GraphicalMap::const_iterator itFind = mGraphicals.find( name );
-			YAKE_ASSERT( itFind == mGraphicals.end() ).debug("submodel needs a unique name! name already taken!");
+			YAKE_ASSERT( itFind == mGraphicals.end() ).debug( "submodel needs a unique name! name already taken!" );
 		}
 		else
 			name = uniqueName::create("auto_");
@@ -114,37 +121,43 @@
 	}
 
 	//-----------------------------------------------------
-	Physical* Model::getPhysicalByName( const String & rName ) const
+	Physical* Model::getPhysicalByName( const String& rName ) const
 	{
 		PhysicalMap::const_iterator itFind = mPhysicals.find( rName );
+		
 		if (itFind == mPhysicals.end())
 			return 0;
+		
 		return itFind->second.get();
 	}
 
 	//-----------------------------------------------------
-	Graphical* Model::getGraphicalByName( const String & rName ) const
+	Graphical* Model::getGraphicalByName( const String& rName ) const
 	{
 		GraphicalMap::const_iterator itFind = mGraphicals.find( rName );
-		if (itFind == mGraphicals.end())
+		
+		if ( itFind == mGraphicals.end() )
 			return 0;
+		
 		return itFind->second.get();
 	}
 
 	//-----------------------------------------------------
-	void Model::addGraphicsController(const SharedPtr<IObjectController> & pController, const String & rName)
+	void Model::addGraphicsController(const SharedPtr<IObjectController>& pController, const String& rName)
 	{
-		YAKE_ASSERT( 0==1 ).warning("IS THIS REALLY A GRAPHICS CONTROLLER?");
+		YAKE_ASSERT( 0 == 1 ).warning( "IS THIS REALLY A GRAPHICS CONTROLLER?" );
 		YAKE_ASSERT( pController.get() );
-		YAKE_ASSERT( rName.length() == 0 ).warning("tagging not implemented!");
+		YAKE_ASSERT( rName.length() == 0 ).warning( "tagging not implemented!" );
+		
 		mControllers.push_back( pController );
 	}
 
 	//-----------------------------------------------------
-	void Model::addLink( const SharedPtr<ModelLink> & pModelLink, const String & rName )
+	void Model::addLink( const SharedPtr<ModelLink>& pModelLink, const String& rName )
 	{
 		YAKE_ASSERT( pModelLink.get() );
-		YAKE_ASSERT( rName.length() == 0 ).warning("tagging not implemented!");
+		YAKE_ASSERT( rName.length() == 0 ).warning( "tagging not implemented!" );
+		
 		mControllers.push_back( pModelLink );
 	}
 
@@ -152,6 +165,7 @@
 	void Model::updatePhysics( real timeElapsed )
 	{
 	}
+	
 	//-----------------------------------------------------
 	void Model::updateGraphics( real timeElapsed )
 	{

Modified: trunk/yake/src/yapp/model/yakeGraphical.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeGraphical.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/model/yakeGraphical.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -259,8 +259,6 @@
 	//-----------------------------------------------------
 	void Graphical::DotSceneListener::processSceneNode( const SceneNodeDesc desc )
 	{
-		YAKE_DECLARE_FUNCTION( processSceneNode );
-		
 		YAKE_LOG( "Processing scene node " + desc.name + " with parent node " + desc.parentNodeName );
 				
 		graphics::ISceneNode* pSN = mGWorld->createSceneNode( desc.name );
@@ -272,6 +270,7 @@
 			parentSN->addChildNode( pSN );
 		}
 		
+		pSN->setName( desc.name );
 		pSN->setPosition( desc.transform.position );
 		pSN->setOrientation( desc.transform.rotation );
 		pSN->setScale( desc.transform.scale );
@@ -279,13 +278,38 @@
 		mSceneNodes[ desc.name ] = pSN;
 
 		mOwner.addSceneNode( pSN, parentSN ? false : true );
+		
+		// look if this node is tracked
+		// TODO current scheme allows node to be tracked by only one target
+		TrackerMap::iterator end = mTrackersTargets.end();
+		for( TrackerMap::iterator trackRecord = mTrackersTargets.begin(); trackRecord != end; ++trackRecord )
+		{
+			if ( trackRecord->second == desc.name )
+			{
+				YAKE_LOG( "Setting track target for camera " + trackRecord->first + " ..." );
+			
+				CameraInfo info = mCameras[ trackRecord->first ];
+				
+				YAKE_LOG( "Camera info found. Acquiring camera..." );
+				
+				graphics::ICamera* tracker = info.camera;
+				
+				YAKE_LOG( "Got camera. Setting orientation..." );
+				
+				tracker->lookAt( pSN->getPosition( graphics::ISceneNode::TS_WORLD ) );
+				
+				YAKE_LOG( "Orientation was set up..." );
+				
+				// cleaning up
+				mTrackersTargets.erase( trackRecord );
+				break;
+			}
+		}
 	}
 	
 	//-----------------------------------------------------
 	void Graphical::DotSceneListener::processEntity( const EntityDesc desc )
 	{
-		YAKE_DECLARE_FUNCTION( processEntity );
-		
 		YAKE_LOG( "Processing entity " + desc.name + " with parent node " + desc.parentNodeName );
 		
 		graphics::IEntity* pEntity = mGWorld->createEntity( desc.meshFile );
@@ -310,8 +334,6 @@
 	//-----------------------------------------------------
 	void Graphical::DotSceneListener::processCamera( const CameraDesc desc )
 	{
-		YAKE_DECLARE_FUNCTION( processCamera );
-		
 		YAKE_LOG( "Processing camera " + desc.name + " with parent node " + desc.parentNodeName );
 		
 		graphics::ICamera* pCamera = mGWorld->createCamera();
@@ -323,13 +345,26 @@
 			parentSN->attachCamera( pCamera );
 		}
 		
-		pCamera->setFOV( desc.fov );
+		pCamera->setName( desc.name );
+		pCamera->setFOV( Math::DegreesToRadians( desc.fov ) );
 		pCamera->setAspectRatio( desc.aspectRatio );
 		pCamera->setProjectionType( desc.projectionType );
 		pCamera->setNearClipDistance( desc.clipping.nearClip );
 		pCamera->setFarClipDistance( desc.clipping.farClip );
-		pCamera->setDirection( desc.normal );
 		
+	//	pCamera->setDirection( desc.normal );
+		
+		pCamera->setPosition( Vector3() );
+		pCamera->setOrientation( Quaternion::kIdentity );
+		
+		
+		if ( desc.trackTargetName != "" )
+		{
+			YAKE_LOG( "Saving tracking record for camera " + desc.name + " ... " );
+			
+			mTrackersTargets.insert( TrackerMap::value_type( desc.name, desc.trackTargetName ) );
+		}
+		
 		CameraInfo info;
 		
 		info.camera = pCamera;
@@ -341,8 +376,6 @@
 	//-----------------------------------------------------
 	void Graphical::DotSceneListener::processLight( const LightDesc desc )
 	{
-		YAKE_DECLARE_FUNCTION( processLight );
-		
 		YAKE_LOG( "Processing light " + desc.name + " with parent node " + desc.parentNodeName );
 		
 		graphics::ILight* pLight = mGWorld->createLight();
@@ -354,8 +387,19 @@
 			parentSN->attachLight( pLight );
 		}
 		
+		pLight->setName( desc.name );
 		pLight->setType( desc.type );
 		pLight->setCastsShadows( desc.castsShadows );
+		
+		if ( desc.castsShadows )
+		{
+			YAKE_LOG( "  light casts shadows" );
+		}
+		else
+		{
+			YAKE_LOG( "  light doesn't cast shadows" );
+		}
+		
 		pLight->setDiffuseColour( desc.diffuseColor );
 		pLight->setSpecularColour( desc.specularColor );
 		pLight->setAttenuation( desc.attenuation.range,

Modified: trunk/yake/src/yapp/plugins/entLua/yakeEvent_lua.cpp
===================================================================
--- trunk/yake/src/yapp/plugins/entLua/yakeEvent_lua.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/plugins/entLua/yakeEvent_lua.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -39,17 +39,17 @@
 	{
 		try {
 			//std::cout << "executeEntityEvent(\"" << evtName.c_str() << "\")\n";
-			luabind::object evtTbl = luabind::get_globals(L)["events"];
+			luabind::object evtTbl = luabind::globals(L)["events"];
 			if (!evtTbl.is_valid())
 				throw "event table is not valid";
 
-			luabind::object fnTbl = pEntity->isServer() ? evtTbl.at("server") : evtTbl.at("client");
+			luabind::object fnTbl = pEntity->isServer() ? luabind::gettable( evtTbl, "server" ) : luabind::gettable( evtTbl, "client" );
 			//luabind::object fnTbl = evtTbl["server"];
-			if (!fnTbl.is_valid() || fnTbl.type() != LUA_TTABLE)
+			if (!fnTbl.is_valid() || luabind::type( fnTbl ) != LUA_TTABLE)
 				throw "event functions table is not valid";
 
 			luabind::object evtFn = fnTbl[ evtName ];
-			if (!evtFn.is_valid() || evtFn.type() != LUA_TFUNCTION)
+			if (!evtFn.is_valid() || luabind::type( evtFn ) != LUA_TFUNCTION)
 				throw "event function does not exist or is invalid";
 
 			luabind::call_member<void>( fnTbl, evtName.c_str() );

Modified: trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp
===================================================================
--- trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/plugins/entLua/yakeLuaBinder.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -105,22 +105,22 @@
 				lua_State* L = pLuaVM->getLuaState();
 				YAKE_ASSERT( L );
 
-				luabind::object globals = luabind::get_globals(L);
+				luabind::object globals = luabind::globals(L);
 
 				//
 				//globals["theVM"] = pVM;
 
 				// create basic tables
-				if (globals["events"].type() != LUA_TTABLE)
+				if ( luabind::type( globals["events"] ) != LUA_TTABLE)
 					globals["events"] = luabind::newtable(L);
 
 				luabind::object eventsTbl = globals["events"];
-				if (eventsTbl["client"].type() != LUA_TTABLE)
+				if ( luabind::type( eventsTbl["client"] ) != LUA_TTABLE)
 					eventsTbl["client"] = luabind::newtable(L);
-				if (eventsTbl["server"].type() != LUA_TTABLE)
+				if ( luabind::type( eventsTbl["server"] ) != LUA_TTABLE)
 					eventsTbl["server"] = luabind::newtable(L);
 
-				if (globals["states"].type() != LUA_TTABLE)
+				if ( luabind::type( globals["states"] ) != LUA_TTABLE)
 					globals["states"] = luabind::newtable(L);
 				luabind::object statesTbl = globals["states"];
 
@@ -142,7 +142,7 @@
 				YAKE_LOG_INFORMATION("Looking for a Lua meta class converter for class: " + theClass->getName());
 				while (!done)
 				{
-					if (globals["getAs_"+theClass->getName()].type() == LUA_TFUNCTION)
+					if ( luabind::type( globals["getAs_"+theClass->getName()] ) == LUA_TFUNCTION)
 					{
 						done = true;
 					}

Modified: trunk/yake/src/yapp/plugins/entLua/yakeStateCb_lua.cpp
===================================================================
--- trunk/yake/src/yapp/plugins/entLua/yakeStateCb_lua.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/plugins/entLua/yakeStateCb_lua.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -43,25 +43,25 @@
 	{
 		try {
 			//std::cout << "executeEntityEvent(\"" << evtName.c_str() << "\")\n";
-			luabind::object machineTbl = (machineName == "default") ? luabind::get_globals(L) : luabind::get_globals(L)["machine_"+machineName];
-			if (!machineTbl.is_valid() || machineTbl.type() != LUA_TTABLE)
+			luabind::object machineTbl = (machineName == "default") ? luabind::globals(L) : luabind::globals(L)["machine_"+machineName];
+			if (!machineTbl.is_valid() || luabind::type( machineTbl ) != LUA_TTABLE)
 				throw "machine table is not valid";
 
 			luabind::object statesTbl = machineTbl["states"];
-			if (!statesTbl.is_valid() || statesTbl.type() != LUA_TTABLE)
+			if (!statesTbl.is_valid() || luabind::type( statesTbl ) != LUA_TTABLE)
 				throw "states table is not valid";
 
 			luabind::object stateTbl = statesTbl[stateName];
-			if (!stateTbl.is_valid() || stateTbl.type() != LUA_TTABLE)
+			if (!stateTbl.is_valid() || luabind::type( stateTbl ) != LUA_TTABLE)
 				throw "state table is not valid";
 
 			//luabind::object fnTbl = pEntity->isServer() ? stateTbl.at("server") : stateTbl.at("client");
 			luabind::object fnTbl = stateTbl["server"];
-			if (!fnTbl.is_valid() || fnTbl.type() != LUA_TTABLE)
+			if (!fnTbl.is_valid() || luabind::type( fnTbl ) != LUA_TTABLE)
 				throw "state functions table is not valid";
 
 			luabind::object fnObj = fnTbl[ fn.c_str() ];
-			if (!fnObj.is_valid() || fnObj.type() != LUA_TFUNCTION) // function defined?
+			if (!fnObj.is_valid() || luabind::type( fnObj ) != LUA_TFUNCTION) // function defined?
 				return true;
 
 			luabind::call_member<void>( fnTbl, fn.c_str() );

Modified: trunk/yake/src/yapp/raf/yakeApplication.cpp
===================================================================
--- trunk/yake/src/yapp/raf/yakeApplication.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/raf/yakeApplication.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -41,7 +41,7 @@
 		{
 			return systems.begin()->second.get();
 		}
-		AssocVector<String,SharedPtr<SystemType> >::iterator itFind = systems.find( name );
+		typename AssocVector<String,SharedPtr<SystemType> >::iterator itFind = systems.find( name );
 		if (itFind == systems.end())
 			return 0;
 		return itFind->second.get();

Modified: trunk/yake/src/yapp/samples/Makefile.am
===================================================================
--- trunk/yake/src/yapp/samples/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,3 +1,3 @@
 INCLUDES = $(all_includes)
 METASOURCES = AUTO
-SUBDIRS = base model misc graphics gui
+SUBDIRS = base model misc graphics gui raf

Modified: trunk/yake/src/yapp/samples/graphics/scripted/Makefile.am
===================================================================
--- trunk/yake/src/yapp/samples/graphics/scripted/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/graphics/scripted/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -7,4 +7,4 @@
 	$(top_builddir)/src/yake/scripting/libyakeScripting.la $(top_builddir)/src/yake/physics/libyakePhysics.la \
 	$(top_builddir)/src/yake/input/libyakeInput.la $(top_builddir)/src/yake/graphics/libyakeGraphics.la \
 	$(top_builddir)/src/yake/base/libyakeBase.la $(top_builddir)/src/yake/audio/libyakeAudio.la \
-	$(top_builddir)/src/yake/data/libyakeData.la -llua -llualib -lluabind
+	$(top_builddir)/src/yake/data/libyakeData.la $(top_builddir)/src/yapp/ent/libyappEnt.la -llua -llualib -lluabind

Modified: trunk/yake/src/yapp/samples/gui/console/yakeConsoleDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/gui/console/yakeConsoleDemo.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/gui/console/yakeConsoleDemo.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -514,8 +514,8 @@
 	 */
 	void initGui()
 	{
-		//mGuiRendererAdapter = loadPlugin( "CEGUIOgreAdapter" );
-		mGuiRendererAdapter = loadPlugin( "ceguiOgreRendererAdapter" );
+		mGuiRendererAdapter = loadPlugin( "CEGUIOgreAdapter" );
+		//mGuiRendererAdapter = loadPlugin( "ceguiOgreRendererAdapter" );
 		YAKE_ASSERT( mGuiRendererAdapter );
 
 		YAKE_LOG( "Starting adapter version " + mGuiRendererAdapter->getName() );

Modified: trunk/yake/src/yapp/samples/model/XODE/Makefile.am
===================================================================
--- trunk/yake/src/yapp/samples/model/XODE/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/model/XODE/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -6,5 +6,6 @@
 	$(top_builddir)/src/yapp/loader/libyappLoader.la $(top_builddir)/src/yapp/base/libyappBase.la \
 	$(top_builddir)/src/yake/data/libyakeData.la $(top_builddir)/src/yake/physics/libyakePhysics.la \
 	$(top_builddir)/src/yake/input/libyakeInput.la $(top_builddir)/src/yake/graphics/libyakeGraphics.la \
-	$(top_builddir)/src/yake/audio/libyakeAudio.la $(top_builddir)/src/yake/base/libyakeBase.la
+	$(top_builddir)/src/yake/audio/libyakeAudio.la $(top_builddir)/src/yake/base/libyakeBase.la \
+	$(top_builddir)/src/yake/scripting/libyakeScripting.la
 XODEloader_SOURCES = yakeXODELoaderDemo.cpp

Modified: trunk/yake/src/yapp/samples/model/XODE/yakeXODELoaderDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/model/XODE/yakeXODELoaderDemo.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/model/XODE/yakeXODELoaderDemo.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -42,7 +42,7 @@
 private:
 	SharedPtr<physics::IWorld>			mPWorld;
 
-	app::model::Physical* 				mPhysical;
+	model::Physical* 						mPhysical;
 	
 	String	mWorldFilename;
 public:
@@ -58,7 +58,7 @@
 
 	void setupWorld()
 	{
-		mPhysical = new app::model::Physical();
+		mPhysical = new model::Physical();
 		YAKE_ASSERT( mPhysical );
 		
 		yake::data::dom::xml::XmlSerializer ser;

Modified: trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/model/dotLink/yakeDotLinkDemo.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -84,7 +84,6 @@
 	{
 		std::cout << "MB: " << static_cast<int>( btn ) << std::endl;
 	}
-
 	
 	int createCameraViewportPair( real sx, real sy, real w, real h, int z )
 	{

Modified: trunk/yake/src/yapp/samples/raf/minimal/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/raf/minimal/yakeDemo.cpp	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/src/yapp/samples/raf/minimal/yakeDemo.cpp	2005-09-26 21:17:18 UTC (rev 947)
@@ -38,6 +38,7 @@
 {
 	// Use default executor for convenience.
 	// It's always possible to manually execute TheApp::initialise() etc.
-	return (raf::runApplication( TheApp() )) ? 0 : 1;
+	TheApp app;
+	return (raf::runApplication( app )) ? 0 : 1;
 }
 

Modified: trunk/yake/yake/base/templates/yakeRegistry.h
===================================================================
--- trunk/yake/yake/base/templates/yakeRegistry.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/base/templates/yakeRegistry.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -96,7 +96,7 @@
 
 	SharedPtr< ICreator > getDefaultCreator()
 	{
-		YAKE_ASSERT( getIdentifiers().size() > 0 ).debug( "No default creator available." ); // todo: does not work in release mode, should throw exception
+		YAKE_ASSERT( ( Manager< typename ConfigClass::Id, SharedPtr< typename ConfigClass::ICreator>,RegisterFunctionsNames >::getIdentifiers().size() ) > 0 ).debug( "No default creator available." ); // todo: does not work in release mode, should throw exception
 		if( !m_pDefaultCreator ) m_pDefaultCreator = getObject( *Manager< typename ConfigClass::Id, SharedPtr< typename ConfigClass::ICreator >, RegisterFunctionsNames >::getIdentifiers().begin() ); // todo: (if(!m_pDefaultCreator) m_pDefaultCreator = front();
 		return m_pDefaultCreator;
 	}

Modified: trunk/yake/yake/base/yake.h
===================================================================
--- trunk/yake/yake/base/yake.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/base/yake.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -38,7 +38,9 @@
 //    INTERFACE STRUCTURES / UTILITY CLASSES
 //============================================================================
 
+#	if YAKE_COMPILER == COMPILER_MSVC
 #pragma comment(lib, "base.lib")
+#	endif
 
 namespace yake
 {
@@ -46,7 +48,7 @@
 {
 
 extern YAKE_BASE_API Version linktime;
-const Version compiletime ( 0, 2, 0 );
+const Version compiletime ( 0, 3, 0 );
 
 } // base
 } // yake

Modified: trunk/yake/yake/base/yakeDebugLogAppender.h
===================================================================
--- trunk/yake/yake/base/yakeDebugLogAppender.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/base/yakeDebugLogAppender.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -50,7 +50,7 @@
 {
 // Methods
 public:
-	static void onLog( const String& rWhat, Log::Severity, const String& rSource );
+	static void onLog( const Log::Message& );
 };
 
 } // base

Modified: trunk/yake/yake/base/yakeLog.h
===================================================================
--- trunk/yake/yake/base/yakeLog.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/base/yakeLog.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -53,7 +53,38 @@
 // Types
 public:
 	enum Severity { INFORMATIONS, WARNINGS, ERRORS };
-	typedef Signal3< void (const String&, Severity, const String&) > OnLog;
+	
+	/**
+	 * Class representing log message.
+	*/
+	struct Message
+	{
+		/// Log message text.
+		String		text;
+		
+		/// Message severity.
+		Severity		severity;
+		
+		/// Message source, like "kernel" or "module X".
+		String		source;
+		
+		/// Any additional info, like "file foo.cpp, line 666".
+		String		additionalInfo;
+		
+		Message( 
+				const String& msgText,
+				Severity msgSeverity,
+				const String& msgSrc,
+				const String& msgInfo ):	text( msgText ),
+													severity( msgSeverity ),
+													source( msgSrc ),
+													additionalInfo( msgInfo )
+		{
+		}
+	};
+	
+	/// Log signal type.
+	typedef Signal3< void (const Message&) > OnLog;
 
 // Class
 public:
@@ -62,21 +93,28 @@
 
 // Methods
 public:
+	/// Subscribe to log messages.
 	void onLog( const OnLog::slot_type& rSlot );
-	void log( const String& rWhat, Severity severity );
-	void log( const String& rWhat, Severity severity, const String& rSource );
-	void logPrintf(char *fmt, ...); // todo: remove this <= Er.. no!
+	
+	/// Log message.
+	void log( const String& rWhat,
+				 Severity severity = INFORMATIONS, 
+				 const String& rSource = "yake", 
+				 const String& rAdditionalInfo = "" );
+//deprecated method: for rich typesafe formatting use boost::format library
+//void logPrintf(char *fmt, ...); // todo: remove this <= Er.. no!
 
 // Data
 private:
+	/// Log signal itself.
 	OnLog mOnLog;
 
 	YAKE_BUILD_PHOENIX_SINGLETON(Log)
 };
 
-void YAKE_BASE_API log_information( const String& what, const String& where );
-void YAKE_BASE_API log_warning( const String& what, const String& where );
-void YAKE_BASE_API log_error( const String& what, const String& where );
+void YAKE_BASE_API log_information( const String& what, const String& source, const String& where );
+void YAKE_BASE_API log_warning( const String& what, const String& source, const String& where );
+void YAKE_BASE_API log_error( const String& what, const String& source, const String& where );
 
 // the simplest form of logging. Adds nothing to "what".
 // Useful in scripts where you just want to log something without "where"
@@ -100,12 +138,11 @@
 #	define TOSTRING(x) STRINGIFY (x)
 #endif
 
-#define YAKE_LOG_INFORMATION( what ) yake::base::log_information( what, "File: "__FILE__"@"TOSTRING(__LINE__) );
-#define YAKE_LOG_WARNING( what ) yake::base::log_warning( what, "File: "__FILE__"@"TOSTRING(__LINE__) );
-#define YAKE_LOG_ERROR( what ) yake::base::log_error( what, "File: "__FILE__"@"TOSTRING(__LINE__) );
-#define YAKE_LOG( what ) yake::base::log_information( what, "File: "__FILE__"@"TOSTRING(__LINE__) );
+#define YAKE_LOG_INFORMATION( what ) yake::base::log_information( what, "yake", "File: "__FILE__"@"TOSTRING(__LINE__) );
+#define YAKE_LOG_WARNING( what ) yake::base::log_warning( what, "yake", "File: "__FILE__"@"TOSTRING(__LINE__) );
+#define YAKE_LOG_ERROR( what ) yake::base::log_error( what, "yake", "File: "__FILE__"@"TOSTRING(__LINE__) );
+#define YAKE_LOG( what ) yake::base::log_information( what, "yake", "File: "__FILE__"@"TOSTRING(__LINE__) );
 
-
 } // base
 } // yake
 

Modified: trunk/yake/yake/base/yakePrerequisites.h
===================================================================
--- trunk/yake/yake/base/yakePrerequisites.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/base/yakePrerequisites.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -109,7 +109,7 @@
 // todo: remove, deprecated, use safe_delete(_array)
 #define YAKE_SAFE_RELEASE(ptr)              if(ptr) { ptr->release(); ptr = 0; }
 #define YAKE_SAFE_DELETE(ptr)               if(ptr) { delete ptr; ptr = 0; }
-#define YAKE_SAFE_DELETE_ARRAY(ptr_array)   if(ptr) { delete [] ptr_array; ptr_array = 0; }
+#define YAKE_SAFE_DELETE_ARRAY(ptr_array)   if(ptr_array) { delete [] ptr_array; ptr_array = 0; }
 
 #define YAKE_DECLARE_CLASS(name)            static const char * yake_private_currentClass() { return #name; }
 #define YAKE_DECLARE_GLOBAL                 YAKE_DECLARE_CLASS( global )

Modified: trunk/yake/yake/graphics/yakeEntity.h
===================================================================
--- trunk/yake/yake/graphics/yakeEntity.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/graphics/yakeEntity.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -38,7 +38,17 @@
 	class YAKE_GRAPHICS_INTERFACE_API GraphicsEntity
 	{
 	public:
+		/// Constructor. Initialises mName with some unique value.
+		GraphicsEntity();
+		
 		virtual ~GraphicsEntity() {}
+		
+		void setName( const String& entityName );
+		String getName() const;
+		
+	protected:
+		/// Entity name tag.
+		String	mName;
 	};
 
 }

Modified: trunk/yake/yake/graphics/yakeGraphicalWorld.h
===================================================================
--- trunk/yake/yake/graphics/yakeGraphicalWorld.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/graphics/yakeGraphicalWorld.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -122,10 +122,6 @@
 		virtual void setSubEntityMaterial( const String & subEntity, const String & materialName ) = 0;
 		//virtual void setReceivesShadows( bool receivesShadows ) = 0;
 		virtual void setCastsShadow( bool castsShadow ) = 0;
-
-		//@todo move into base class!?
-		virtual String getName() const = 0;
-		virtual void getName(String& name) = 0;
 	};
 
 	/** A concrete instance of a camera in a scene.
@@ -208,6 +204,7 @@
 		inline void rotate( const Vector3& axis, real degrees );
 		inline void pitch( const real degrees );
 		virtual void yaw( const real degrees ) = 0;
+		virtual void roll( const  real degrees ) = 0;
 
 		/** Return a ray in world space coordinates as cast from the camera through a viewport
 			position.
@@ -257,6 +254,13 @@
 			TS_PARENT,
 			TS_WORLD
 		};
+
+		/** Returns the position in parent's transform space. */
+		virtual Vector3 getPosition() const = 0;
+		
+		/** Returns scene node position in transform space specified by ts parameter. */
+		virtual Vector3 getPosition( TransformSpace ts ) const = 0;
+		
 		/** Adds a node as a child to this node.
 		*/
 		virtual void addChildNode( ISceneNode* pNode ) = 0;
@@ -346,16 +350,6 @@
 		*/
 		virtual void detach( IParticleSystem* pPS ) = 0;
 
-		/** Return the name of this scene node.
-		*/
-		virtual String getName() const = 0;
-
-		/** Return the name of this scene node.
-		*/
-		virtual void getName(String& name) = 0;
-
-		//virtual void setName(const String& name) = 0;
-
 		/** Return the position as transformed through the hierarchy of nodes.
 		*/
 		virtual Vector3 getDerivedPosition() const = 0;
@@ -444,8 +438,8 @@
 
 		virtual IEntity* pickEntity(const Ray& ray) = 0;
 
-		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(real), PreRender )
-		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(real), PostRender )
+		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(real), PreRender );
+		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(real), PostRender );
 	};
 
 } // graphics

Modified: trunk/yake/yake/graphics/yakeGraphicsSystem.h
===================================================================
--- trunk/yake/yake/graphics/yakeGraphicsSystem.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/graphics/yakeGraphicsSystem.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -74,7 +74,7 @@
 	{
 		typedef AssocVector<String, String> ParamMap;
 
-		YAKE_DECLARE_REGISTRY_01(IGraphicsSystem, String, ParamMap)		
+		YAKE_DECLARE_REGISTRY_01(IGraphicsSystem, String, ParamMap);
 	
 		virtual ~IGraphicsSystem();
 
@@ -94,7 +94,7 @@
 		// todo: meta: not needed, typeid(ptr) returns the concrete type info (see abstract factory sample code) 
 		virtual const std::type_info & get_type_info() = 0;
 	};
-
+	
 } // graphics
 } // yake
 

Modified: trunk/yake/yake/physics/yakePhysicsPrerequisites.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsPrerequisites.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/physics/yakePhysicsPrerequisites.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -136,8 +136,8 @@
 		{
 		}
 		VertexVector	vertices;
+		IndexVector		indices;
 		NormalVector	normals;
-		IndexVector		indices;
 	};
 }
 }

Modified: trunk/yake/yake/plugins/graphicsOgre/graphicsOgreCamera.h
===================================================================
--- trunk/yake/yake/plugins/graphicsOgre/graphicsOgreCamera.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/plugins/graphicsOgre/graphicsOgreCamera.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -78,6 +78,7 @@
 		virtual void moveRelative( const Vector3& rVec );
 		virtual void lookAt( const Vector3& target );
 		virtual void yaw( const real degrees );
+		virtual void roll( const  real degrees );
 
 
 		// ICamera

Modified: trunk/yake/yake/plugins/graphicsOgre/graphicsOgreEntity.h
===================================================================
--- trunk/yake/yake/plugins/graphicsOgre/graphicsOgreEntity.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/plugins/graphicsOgre/graphicsOgreEntity.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -46,10 +46,6 @@
 		virtual void setSubEntityMaterial( const String& subEntity, const String& materialName );
 		virtual void setCastsShadow( bool castsShadow );
 
-		virtual String getName() const;
-		virtual void getName(String& name);
-		//virtual void setName(const String& name);
-
 		Ogre::Entity* getEntity_() const
 		{ return mEntity; }
 	protected:

Modified: trunk/yake/yake/plugins/graphicsOgre/graphicsOgreNode.h
===================================================================
--- trunk/yake/yake/plugins/graphicsOgre/graphicsOgreNode.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/plugins/graphicsOgre/graphicsOgreNode.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -40,6 +40,7 @@
 
 		virtual void setPosition( const Vector3 & position );
 		virtual Vector3 getPosition() const;
+		virtual Vector3 getPosition( TransformSpace ts ) const;
 		virtual void setOrientation( const Quaternion & orientation );
 		virtual Quaternion getOrientation() const;
 
@@ -74,10 +75,6 @@
 		virtual void detach( IParticleSystem* pPS );
 
 
-		virtual String getName() const;
-		virtual void getName(String& name);
-		//virtual void setName(const String& name);
-
 		Ogre::SceneNode* getSceneNode_() const
 		{ return mSceneNode; }
 	protected:

Modified: trunk/yake/yake/plugins/physicsODE/OdeBody.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeBody.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/plugins/physicsODE/OdeBody.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -44,10 +44,8 @@
 
 			virtual void setMass( const real mass );
 			virtual real getMass() const;
-			virtual void setMass( const MassDesc& rDesc )
-			{ YAKE_ASSERT(0); }
-			virtual void addMass( const MassDesc& rDesc )
-			{ YAKE_ASSERT(0); }
+			virtual void setMass( const MassDesc& rDesc );
+			virtual void addMass( const MassDesc& rDesc );
 
 			virtual void setLinearVelocity( Vector3 const& rVelocity );
 			virtual Vector3 getLinearVelocity() const;

Modified: trunk/yake/yake/plugins/physicsODE/OdeShapes.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeShapes.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/plugins/physicsODE/OdeShapes.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -118,21 +118,30 @@
 		
 		class OdeTriMesh : public OdeGeom
 		{
-		public:
-			OdeTriMesh::OdeTriMesh( dSpace* pSpace, OdeActor* pOwner, dTriMeshDataID meshDataId ); 
-			virtual ~OdeTriMesh();
+			public:
 
-			virtual ShapeType getType() const;
-			
-			static dTriMeshDataID buildMeshData( TriangleMeshDesc::VertexVector const& rVertices,
-						 		  	  			TriangleMeshDesc::IndexVector const& rIndices,
-						 		  	 			TriangleMeshDesc::NormalVector const& rNormals );
+				struct MeshData
+				{
+					MeshData() : id( NULL ), vertices( NULL ), indices( NULL ), normals( NULL )
+					{}
 
- 		
-		protected:
- 		  	TriangleMeshDesc::VertexVector		mVertices;
-		 	TriangleMeshDesc::IndexVector		mIndices;
-			TriangleMeshDesc::NormalVector		mNormals;
+					dTriMeshDataID id;
+
+				/// We need to store these here 'cause ODE doesn't copy data on mesh data construction
+					dReal*		vertices;
+					uint32*		indices;
+					dReal*		normals;
+				};
+
+				OdeTriMesh( dSpace* pSpace, OdeActor* pOwner, dTriMeshDataID meshDataId );
+				virtual ~OdeTriMesh();
+
+				virtual ShapeType getType() const;
+
+				static void buildMeshData(	MeshData& dataToFill,
+													TriangleMeshDesc::VertexVector const& rVertices,
+													TriangleMeshDesc::IndexVector const& rIndices,
+													TriangleMeshDesc::NormalVector const& rNormals );
 		};
 		
 } // physics

Modified: trunk/yake/yake/plugins/physicsODE/OdeWorld.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yake/plugins/physicsODE/OdeWorld.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -27,6 +27,8 @@
 #ifndef YAKE_ODEWORLD_H
 #define YAKE_ODEWORLD_H
 
+#include "yake/plugins/physicsODE/OdeShapes.h"
+
 namespace yake {
 
 	using namespace math;
@@ -95,7 +97,7 @@
 			real _getStepSize() const
 			{ return mStepSize; }
 
-			dTriMeshDataID getMeshDataById(  TriangleMeshId id ) const;
+			OdeTriMesh::MeshData getMeshDataById(  TriangleMeshId id ) const;
 		
 		protected:
 			real				mTime;
@@ -108,7 +110,7 @@
 			BodyList			mBodies;
 		
 			TriangleMeshId		mNextMeshId;	
-			typedef AssocVector< TriangleMeshId, dTriMeshDataID > MeshDataMap;
+			typedef AssocVector< TriangleMeshId, OdeTriMesh::MeshData > MeshDataMap;
 			MeshDataMap			mMeshDataMap;
 
 			StringVector		mCurrentSolverParams;

Modified: trunk/yake/yapp/ent/yakeEntity.h
===================================================================
--- trunk/yake/yapp/ent/yakeEntity.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/ent/yakeEntity.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -62,7 +62,7 @@
 
 		OBJECT_PROPS_NONE(Entity);
 
-		void addComponent( const String& tag, SharedPtr<EntityComponent>& pComponent, size_t prio = 0 );
+		void addComponent( const String& tag, const SharedPtr<EntityComponent>& pComponent, size_t prio = 0 );
 		SharedPtr<EntityComponent> removeComponent( EntityComponent* pComponent );
 		SharedPtr<EntityComponent> removeComponent( const String& tag );
 		EntityComponent* getComponent( const String& tag );

Modified: trunk/yake/yapp/gui_addons/console/Makefile.am
===================================================================
--- trunk/yake/yapp/gui_addons/console/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/gui_addons/console/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,6 +1,3 @@
-INCLUDES = 
+INCLUDES = yakeGenericConsole.h yakeDefaultHistory.h yakeConsoleLuaProcessor.h
 METASOURCES = AUTO
-_SOURCES = yakeGenericConsole.h
-_SOURCES = yakeGenericConsole.h yakeDefaultHistory.h
-_SOURCES = yakeGenericConsole.h yakeDefaultHistory.h yakeConsoleLuaProcessor.h
 SUBDIRS = cegui

Modified: trunk/yake/yapp/gui_addons/console/cegui/Makefile.am
===================================================================
--- trunk/yake/yapp/gui_addons/console/cegui/Makefile.am	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/gui_addons/console/cegui/Makefile.am	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,4 +1,3 @@
-INCLUDES = 
+INCLUDES = yakeCEGUIInputArea.h yakeCEGUIOutputArea.h
 METASOURCES = AUTO
-_SOURCES = yakeCEGUIInputArea.h
-_SOURCES = yakeCEGUIInputArea.h yakeCEGUIOutputArea.h
+

Modified: trunk/yake/yapp/gui_addons/console/cegui/yakeCEGUIOutputArea.h
===================================================================
--- trunk/yake/yapp/gui_addons/console/cegui/yakeCEGUIOutputArea.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/gui_addons/console/cegui/yakeCEGUIOutputArea.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -75,7 +75,7 @@
 			 */
 			void addMessage( const MessageType& msg )
 			{
-				CEGUI::ListboxTextItem* item = new CEGUI::ListboxTextItem( msg.text_.c_str() );
+				CEGUI::ListboxTextItem* item = new CEGUI::ListboxTextItem( (CEGUI::utf8*)msg.text_.c_str() );
 
 				outputBox_->addItem( item );
 

Modified: trunk/yake/yapp/gui_addons/console/yakeDefaultHistory.h
===================================================================
--- trunk/yake/yapp/gui_addons/console/yakeDefaultHistory.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/gui_addons/console/yakeDefaultHistory.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -100,4 +100,4 @@
 }
 }
 
-#endif 
\ No newline at end of file
+#endif 

Modified: trunk/yake/yapp/gui_addons/console/yakeGenericConsole.h
===================================================================
--- trunk/yake/yapp/gui_addons/console/yakeGenericConsole.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/gui_addons/console/yakeGenericConsole.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -128,7 +128,7 @@
 		{
 			OutputPolicy<MessageType>::clearScroll();
 		
-			const string_t cmd = getPreviousCommand();
+			const string_t cmd = HistoryPolicy<MessageType>::getPreviousCommand();
 
 			InputPolicy::setCommand( cmd );
 		}
@@ -141,7 +141,7 @@
 		{
 			OutputPolicy<MessageType>::clearScroll();
 		
-			const string_t cmd = getNextCommand();
+			const string_t cmd = HistoryPolicy<MessageType>::getNextCommand();
 
 			InputPolicy::setCommand( cmd );
 		}

Modified: trunk/yake/yapp/loader/yakeDotScene.h
===================================================================
--- trunk/yake/yapp/loader/yakeDotScene.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/loader/yakeDotScene.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -94,7 +94,7 @@
 			bool						castsShadows;
 			Color						diffuseColor;
 			Color						specularColor;
-			Vector3						normal;
+			Vector3					normal;
 			
 			struct Range
 			{
@@ -110,6 +110,9 @@
 				real linear;
 				real quadratic;
 			}							attenuation;
+			
+			LightDesc() : visible( true ), castsShadows( false )
+			{}
 		};
 		
 		typedef AssocVector< String, NodeDesc > SceneNodeDescMap;

Modified: trunk/yake/yapp/loader/yakeXODEParser.h
===================================================================
--- trunk/yake/yapp/loader/yakeXODEParser.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/loader/yakeXODEParser.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -40,8 +40,6 @@
 	*/
 	class YAPP_BASE_API XODEParser
 	{
-		YAKE_DECLARE_CLASS( XODEParser );
-
 	public:
 		XODEParser( model::Physical& rBaseModel );
 		virtual ~XODEParser() {}
@@ -171,7 +169,6 @@
 	
 	class YAPP_BASE_API XODEParserV1 : public XODEParser
 	{
-		YAKE_DECLARE_CLASS( XODEParserV1 );
 	public:
 		XODEParserV1( model::Physical& rBaseModel ):XODEParser( rBaseModel ) {}
 		virtual ~XODEParserV1() {}

Modified: trunk/yake/yapp/model/yakeGraphical.h
===================================================================
--- trunk/yake/yapp/model/yakeGraphical.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/model/yakeGraphical.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -144,6 +144,9 @@
 			typedef AssocVector< String, CameraInfo > CameraMap;
 			typedef AssocVector< String, LightInfo > LightMap;
 			
+			typedef std::map< String, String > TrackerMap;
+			TrackerMap		mTrackersTargets;
+			
 			SceneNodeMap	mSceneNodes;
 			EntityMap		mEntities;
 			CameraMap		mCameras;

Modified: trunk/yake/yapp/model/yakeVehicleSerializerXML.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleSerializerXML.h	2005-09-26 17:24:33 UTC (rev 946)
+++ trunk/yake/yapp/model/yakeVehicleSerializerXML.h	2005-09-26 21:17:18 UTC (rev 947)
@@ -1,7 +1,7 @@
 /*
    ------------------------------------------------------------------------------------
    This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
+   Copyright  2004 The YAKE Team
    For the latest information visit http://www.yake.org 
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
@@ -54,8 +54,7 @@
 			\param
 			\return 
 		*/
-		virtual bool load(	const SharedPtr<dom::INode> & docNode,
-							app::model::vehicle::VehicleTemplate & tpl);
+		virtual bool load(	const SharedPtr<dom::INode> & docNode, model::vehicle::VehicleTemplate & tpl);
 
 		/** Prepare for next run of load/store.
 		*/



From codeandroid at berlios.de  Fri Sep 30 01:21:32 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 01:21:32 +0200
Subject: [Yake-svn] r949 - trunk/yake/common/media/graphics.fx
Message-ID: <200509292321.j8TNLWlo015701@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 01:21:28 +0200 (Fri, 30 Sep 2005)
New Revision: 949

Added:
   trunk/yake/common/media/graphics.fx/thruster1.particle
Log:
initial revision

Added: trunk/yake/common/media/graphics.fx/thruster1.particle
===================================================================
--- trunk/yake/common/media/graphics.fx/thruster1.particle	2005-09-27 19:25:10 UTC (rev 948)
+++ trunk/yake/common/media/graphics.fx/thruster1.particle	2005-09-29 23:21:28 UTC (rev 949)
@@ -0,0 +1,37 @@
+// exhaust - fire (and smoke?)
+// source: OGRE3D
+thruster1
+{
+    	material        	Examples/Flare
+    	particle_width  	25
+    	particle_height 	25
+    	cull_each       	false
+    	quota           	200
+    	billboard_type  	point
+    
+    	// Area emitter
+    	emitter Point
+    	{
+			angle               		5
+        	emission_rate       		100
+			time_to_live    0.5
+			direction       0 0 1
+			velocity_min    250
+			velocity_max    300
+			colour_range_start  1 1 0.5
+			colour_range_end    1 0.8 0.3
+	}
+
+	affector ColourFader
+	{
+		red -0.25
+		green -1
+		blue -1
+	}
+
+   	affector Scaler
+   	{
+       	rate 	0.4
+   	}
+
+}



From codeandroid at berlios.de  Fri Sep 30 23:30:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:30:45 +0200
Subject: [Yake-svn] r951 - trunk/yake/src/yapp/model
Message-ID: <200509302130.j8ULUjkc006553@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:30:44 +0200 (Fri, 30 Sep 2005)
New Revision: 951

Modified:
   trunk/yake/src/yapp/model/yakeNativeEngine.cpp
   trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp
   trunk/yake/src/yapp/model/yakeNativeWheel.cpp
   trunk/yake/src/yapp/model/yakeVehicle.cpp
   trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp
   trunk/yake/src/yapp/model/yakeVehicleSystem.cpp
Log:
fixes

Modified: trunk/yake/src/yapp/model/yakeNativeEngine.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeNativeEngine.cpp	2005-09-30 21:30:22 UTC (rev 950)
+++ trunk/yake/src/yapp/model/yakeNativeEngine.cpp	2005-09-30 21:30:44 UTC (rev 951)
@@ -90,8 +90,8 @@
 	}
 
 
-	NativeEngine::NativeEngine() :
-		mDifferentialRatio( 3.42 ),
+	NativeCarEngine::NativeCarEngine() :
+		mDifferentialRatio( real(3.42) ),
 		mThrottle(0),
 		mCurrentGear(0),
 		mDriveTorque(0),
@@ -104,28 +104,30 @@
 		mpGearBox = new NativeGearBox();
 		YAKE_ASSERT( mpGearBox );
 		mpGearBox->setSpeed( 6 );
-		mpGearBox->setGearRatio( 0, -2.90 ); mpGearBox->setGearMode( 0, NativeGearBox::GM_REVERSE );
-		mpGearBox->setGearRatio( 1,  2.66 ); mpGearBox->setGearMode( 1, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 2,  1.78 ); mpGearBox->setGearMode( 2, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 3,  1.30 ); mpGearBox->setGearMode( 3, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 4,  0.74 ); mpGearBox->setGearMode( 4, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 5,  0.50 ); mpGearBox->setGearMode( 5, NativeGearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 0, real(-2.90 ) ); mpGearBox->setGearMode( 0, NativeGearBox::GM_REVERSE );
+		mpGearBox->setGearRatio( 1, real( 2.66 ) ); mpGearBox->setGearMode( 1, NativeGearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 2, real( 1.78 ) ); mpGearBox->setGearMode( 2, NativeGearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 3, real( 1.30 ) ); mpGearBox->setGearMode( 3, NativeGearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 4, real( 0.74 ) ); mpGearBox->setGearMode( 4, NativeGearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 5, real( 0.50 ) ); mpGearBox->setGearMode( 5, NativeGearBox::GM_FORWARD );
 	}
-	NativeEngine::~NativeEngine()
+	NativeCarEngine::~NativeCarEngine()
 	{
 		YAKE_SAFE_DELETE( mpGearBox );
 	}
-	void NativeEngine::setFromTemplate( const VehicleTemplate::EngineTemplate & tpl )
+	void NativeCarEngine::setFromTemplate( const VehicleTemplate::EngineTemplate & tpl )
 	{
-		mMinRPM = tpl.rpmMin_;
-		mMaxRPM = tpl.rpmMax_;
-		mThrottleRPMRise = tpl.rpmRise_;
-		mRPMDieOff = tpl.rpmDieOff_;
-		mDifferentialRatio = tpl.differentialRatio;
+		const VehicleTemplate::CarEngineTemplate& engineTpl =
+			static_cast<const VehicleTemplate::CarEngineTemplate&>(tpl);
+		mMinRPM				= engineTpl.rpmMin_;
+		mMaxRPM				= engineTpl.rpmMax_;
+		mThrottleRPMRise	= engineTpl.rpmRise_;
+		mRPMDieOff			= engineTpl.rpmDieOff_;
+		mDifferentialRatio	= engineTpl.differentialRatio;
 		YAKE_ASSERT( mpGearBox );
-		mpGearBox->setFromTemplate( tpl.gears_ );
+		mpGearBox->setFromTemplate( engineTpl.gears_ );
 	}
-	void NativeEngine::updateSimulation( real timeElapsed )
+	void NativeCarEngine::updateSimulation( real timeElapsed )
 	{
 		updateCurrentRPM( timeElapsed );
 		updateGearRatios();
@@ -136,7 +138,7 @@
 		real engineTorque = mThrottle * getMaxTorque( mCurrentRPM );
 		mDriveTorque = engineTorque * mGearRatio * mDifferentialRatio * 0.75/*just a guess*/;
 	}
-	void NativeEngine::setThrottle( real throttle )
+	void NativeCarEngine::setThrottle( real throttle )
 	{
 		mThrottle = throttle;
 		if (mThrottle > 1)
@@ -144,68 +146,68 @@
 		else if (mThrottle < 0)
 			mThrottle = 0;
 	}
-	real NativeEngine::getThrottle() const
+	real NativeCarEngine::getThrottle() const
 	{
 		return mThrottle;
 	}
-	real NativeEngine::getRPM() const
+	real NativeCarEngine::getRPM() const
 	{
 		return mCurrentRPM;
 	}
-	uint8 NativeEngine::getGear() const
+	uint8 NativeCarEngine::getGear() const
 	{
 		return mCurrentGear;
 	}
-	void NativeEngine::shiftGear( uint8 gear )
+	void NativeCarEngine::shiftGear( uint8 gear )
 	{
 		if (gear < mpGearBox->getSpeed())
 			mCurrentGear = gear;
 	}
-	void NativeEngine::shiftGearUp()
+	void NativeCarEngine::shiftGearUp()
 	{
 		if (mCurrentGear+1 < mpGearBox->getSpeed())
 			mCurrentGear++;
 	}
-	void NativeEngine::shiftGearDown()
+	void NativeCarEngine::shiftGearDown()
 	{
 		if (mCurrentGear > 0)
 			mCurrentGear--;
 	}
-	real NativeEngine::getDriveTorque() const
+	real NativeCarEngine::getDriveTorque() const
 	{
 		return mDriveTorque;
 	}
-	real NativeEngine::getMinRPM() const
+	real NativeCarEngine::getMinRPM() const
 	{
 		return mMinRPM;
 	}
-	real NativeEngine::getMaxRPM() const
+	real NativeCarEngine::getMaxRPM() const
 	{
 		return mMaxRPM;
 	}
-	real NativeEngine::getRPMRise() const
+	real NativeCarEngine::getRPMRise() const
 	{
 		return mThrottleRPMRise;
 	}
-	real NativeEngine::getRPMDieOff() const
+	real NativeCarEngine::getRPMDieOff() const
 	{
 		return mRPMDieOff;
 	}
-	real NativeEngine::getMinShiftingTime() const
+	real NativeCarEngine::getMinShiftingTime() const
 	{
 		return 0.;
 	}
-	real NativeEngine::getMaxTorque( const real rpm )
+	real NativeCarEngine::getMaxTorque( const real rpm )
 	{
 		//TODO: look up in curve
 		return 500; // in Nm
 	}
-	void NativeEngine::updateGearRatios()
+	void NativeCarEngine::updateGearRatios()
 	{
 		mGearRatio = mpGearBox->getGearRatio( mCurrentGear );
 		mInvGearRatio = (mGearRatio != 0.) ? (1.0 / mGearRatio) : 0.;
 	}
-	void NativeEngine::updateCurrentRPM(real timeElapsed)
+	void NativeCarEngine::updateCurrentRPM(real timeElapsed)
 	{
 		if (mThrottle > 0.)
 		{
@@ -220,15 +222,15 @@
 				mCurrentRPM = mMinRPM;
 		}
 	}
-	void NativeEngine::setParamMinRPM( const real rpm )
+	void NativeCarEngine::setParamMinRPM( const real rpm )
 	{
 		mMinRPM = rpm;
 	}
-	void NativeEngine::setParamMaxRPM( const real rpm )
+	void NativeCarEngine::setParamMaxRPM( const real rpm )
 	{
 		mMaxRPM = rpm;
 	}
-	void NativeEngine::setParamRedlineRPM( const real rpm )
+	void NativeCarEngine::setParamRedlineRPM( const real rpm )
 	{
 	}
 

Modified: trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp	2005-09-30 21:30:22 UTC (rev 950)
+++ trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp	2005-09-30 21:30:44 UTC (rev 951)
@@ -91,6 +91,7 @@
 			if (pW)
 				delete pW;
 		}
+		mWheels.clear();
 		// steer groups
 		VectorIterator< SteerGroupList > itSG( mSteerGroups.begin(), mSteerGroups.end() );
 		while (itSG.hasMoreElements())
@@ -99,6 +100,7 @@
 			if (pSG)
 				delete pSG;
 		}
+		mSteerGroups.clear();
 		// axles
 		VectorIterator< AxleList > itAxle( mAxles.begin(), mAxles.end() );
 		while (itAxle.hasMoreElements())
@@ -107,14 +109,17 @@
 			if (pA)
 				delete pA;
 		}
+		mAxles.clear();
 		// engines
 		VectorIterator< EngineList > itEngine( mEngines.begin(), mEngines.end() );
 		while (itEngine.hasMoreElements())
 		{
-			NativeEngine* pEngine = itEngine.getNext();
+			IEngine* pEngine = itEngine.getNext();
 			if (pEngine)
 				delete pEngine;
 		}
+		mEngines.clear();
+		mCarEngines.clear();
 		// chassis
 		YAKE_SAFE_DELETE( mpChassis );
 	}
@@ -164,12 +169,22 @@
 			COUTLN("engine");
 			const VehicleTemplate::EngineTemplate& engineTpl = tpl.getEngine(i);
 
-			NativeEngine* pEngine = new NativeEngine();
-			if (!pEngine)
-				continue;
-			mEngines.push_back( pEngine );
+			try {
+				const VehicleTemplate::CarEngineTemplate& carEngineTpl =
+					static_cast<const VehicleTemplate::CarEngineTemplate&>( engineTpl );
+				NativeCarEngine* pEngine = new NativeCarEngine();
+				if (!pEngine)
+					continue;
+				mEngines.push_back( pEngine );
+				mCarEngines.push_back( pEngine );
 
-			pEngine->setFromTemplate( engineTpl );
+				pEngine->setFromTemplate( engineTpl );
+			}
+			catch(...)
+			{
+				YAKE_ASSERT("Only car engine creators supported currently.");
+				YAKE_EXCEPT("Only car engine creators supported currently.");
+			}
 		}
 
 		// axles
@@ -178,11 +193,11 @@
 			const VehicleTemplate::AxleTemplate& axleTpl = tpl.getAxle(i);
 			COUTLN("  axle " << i << " engine= " << axleTpl.idxEngine_);
 
-			YAKE_ASSERT( _getEngine( axleTpl.idxEngine_ ) != 0 );
+			YAKE_ASSERT( _getCarEngine( axleTpl.idxEngine_ ) != 0 );
 			// create axle
 			Axle* pAxle = new Axle();
 			YAKE_ASSERT( pAxle );
-			pAxle->engine = _getEngine(axleTpl.idxEngine_);
+			pAxle->engine = _getCarEngine(axleTpl.idxEngine_);
 			YAKE_ASSERT( pAxle->engine );
 			// store axle
 			mAxles.push_back( pAxle );
@@ -249,14 +264,22 @@
 		return mSteerGroups[index];
 	}
 	//-----------------------------------------------------
-	NativeEngine* 
+	IEngine* 
 		NativePhysicalVehicleComponent::_getEngine(const size_t index) const
 	{
 		if (index >= mEngines.size())
 			return 0;
-		return mEngines[index];
+		return mEngines.at(index);
 	}
 	//-----------------------------------------------------
+	NativeCarEngine* 
+		NativePhysicalVehicleComponent::_getCarEngine(const size_t index) const
+	{
+		if (index >= mCarEngines.size())
+			return 0;
+		return mCarEngines.at(index);
+	}
+	//-----------------------------------------------------
 	NativePhysicalVehicleComponent::Axle* 
 		NativePhysicalVehicleComponent::_getAxle(const size_t index) const
 	{
@@ -339,7 +362,7 @@
 	//-----------------------------------------------------
 	void NativePhysicalVehicleComponent::setEngineThrottle(const size_t index, const real throttle)
 	{
-		NativeEngine* pEngine = _getEngine(index);
+		IEngine* pEngine = _getEngine(index);
 		YAKE_ASSERT( pEngine );
 		pEngine->setThrottle( throttle );
 	}

Modified: trunk/yake/src/yapp/model/yakeNativeWheel.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeNativeWheel.cpp	2005-09-30 21:30:22 UTC (rev 950)
+++ trunk/yake/src/yapp/model/yakeNativeWheel.cpp	2005-09-30 21:30:44 UTC (rev 951)
@@ -33,42 +33,51 @@
 namespace vehicle {
 
 	//-----------------------------------------------------
-	NativeWheel::NativeWheel(physics::IWorld* pPWorld) : mCO(0)
+	NativeWheel::NativeWheel(physics::IWorld* pPWorld) : mCO(0), mJoint(0)
 	{
 		YAKE_ASSERT( pPWorld );
-		mCO = pPWorld->createSphere( 1 );
+		mCO = pPWorld->createActor( physics::ACTOR_DYNAMIC );
 		YAKE_ASSERT( mCO );
-		YAKE_ASSERT( mCO->getBody() );
-		mCO->getBody()->setMassSphere( 1, 1 );
-		setMass( 1 );
+
+		mCO->createShape( physics::IShape::SphereDesc(1) );
+
+		mCO->getBody().setMass( physics::IBody::SphereMassDesc(1,1) );
+		mCO->getBody().setMass( 1 );
+
 		mCO->setPosition(Vector3::kZero);
 		mCO->setOrientation(Quaternion::kIdentity);
-		mCO->setLateralSlipEnabled( true );
-		mCO->setSlipCoefficients( 0.1, 0. );
-		mCO->setSlipNormalSource( this );
+
+		//@fixme lateral slip
+		//mCO->setLateralSlipEnabled( true );
+		//mCO->setSlipCoefficients( 0.1, 0. );
+		//mCO->setSlipNormalSource( this );
+
 	}
 	//-----------------------------------------------------
 	NativeWheel::~NativeWheel()
 	{
-		YAKE_SAFE_DELETE( mCO );
+		YAKE_ASSERT( mCO );
+		if (mJoint)
+			mCO->getCreator()->destroyJoint( mJoint );
+		mCO->getCreator()->destroyActor( mCO );
+		mCO = 0;
 	}
 	//-----------------------------------------------------
 	void NativeWheel::setRadius( const real radius )
 	{
 		YAKE_ASSERT( mCO );
-		ShapePtrVector v = mCO->getShapes();
+		physics::IShapePtrList v = mCO->getShapes();
 		YAKE_ASSERT( v.size() == 1 );
-		physics::ICollisionGeometry* pGeom = v.front();
-		YAKE_ASSERT( pGeom );
-		YAKE_ASSERT( pGeom->getType() == physics::ICollisionGeometry::CGT_SPHERE );
-		pGeom->sphereSetRadius( radius );
+		physics::IShape* pShape = v.front();
+		mCO->destroyShape( pShape );
+
+		mCO->createShape( physics::IShape::SphereDesc(radius) );
 	}
 	//-----------------------------------------------------
 	void NativeWheel::setMass( const real mass )
 	{
 		YAKE_ASSERT( mCO );
-		YAKE_ASSERT( mCO->getBody() );
-		mCO->getBody()->setMass( mass );
+		mCO->getBody().setMass( mass );
 	}
 	//-----------------------------------------------------
 	void NativeWheel::setPosition(const Vector3 & rPosition)
@@ -100,14 +109,14 @@
 		if (mLinSkidCache.get() == 0)
 		{
 			mLinSkidCache.reset( new model::CachedInterpolator<real>(8) );
-			mLinSkidCache->setWeight(0, 1.0);
-			mLinSkidCache->setWeight(0, 0.8);
-			mLinSkidCache->setWeight(0, 0.6);
-			mLinSkidCache->setWeight(0, 0.5);
-			mLinSkidCache->setWeight(0, 0.4);
-			mLinSkidCache->setWeight(0, 0.3);
-			mLinSkidCache->setWeight(0, 0.2);
-			mLinSkidCache->setWeight(0, 0.1);
+			mLinSkidCache->setWeight(0, real(1.0));
+			mLinSkidCache->setWeight(0, real(0.8));
+			mLinSkidCache->setWeight(0, real(0.6));
+			mLinSkidCache->setWeight(0, real(0.5));
+			mLinSkidCache->setWeight(0, real(0.4));
+			mLinSkidCache->setWeight(0, real(0.3));
+			mLinSkidCache->setWeight(0, real(0.2));
+			mLinSkidCache->setWeight(0, real(0.1));
 		}
 		return mLinSkidCache;
 	}
@@ -117,14 +126,14 @@
 		if (mAngSkidCache.get() == 0)
 		{
 			mAngSkidCache.reset( new model::CachedInterpolator<real>(8) );
-			mAngSkidCache->setWeight(0, 1.0);
-			mAngSkidCache->setWeight(0, 0.8);
-			mAngSkidCache->setWeight(0, 0.6);
-			mAngSkidCache->setWeight(0, 0.5);
-			mAngSkidCache->setWeight(0, 0.4);
-			mAngSkidCache->setWeight(0, 0.3);
-			mAngSkidCache->setWeight(0, 0.2);
-			mAngSkidCache->setWeight(0, 0.1);
+			mAngSkidCache->setWeight(0, real(1.0));
+			mAngSkidCache->setWeight(0, real(0.8));
+			mAngSkidCache->setWeight(0, real(0.6));
+			mAngSkidCache->setWeight(0, real(0.5));
+			mAngSkidCache->setWeight(0, real(0.4));
+			mAngSkidCache->setWeight(0, real(0.3));
+			mAngSkidCache->setWeight(0, real(0.2));
+			mAngSkidCache->setWeight(0, real(0.1));
 		}
 		return mAngSkidCache;
 	}
@@ -136,11 +145,13 @@
 	//-----------------------------------------------------
 	Vector3 NativeWheel::getLateralSlipNormal() const
 	{
-		YAKE_ASSERT( mJoint );
-		return mJoint->getAxis2();
+		//YAKE_ASSERT( mJoint );
+		//return mJoint->getAxis2();
+		YAKE_ASSERT( 1==0 && "NEEDS IMPLEMENTATION!" ).warning("NEEDS IMPLEMENTATION");
+		return Vector3();
 	}
 	//-----------------------------------------------------
-	void NativeWheel::setJoint( SharedPtr<physics::IJoint> & jt )
+	void NativeWheel::setJoint( physics::IJointPtr jt )
 	{
 		mJoint = jt;
 	}
@@ -166,49 +177,50 @@
 	//-----------------------------------------------------
 	void NativeWheel::applySteer( real steer )
 	{
-		real epsilon = 0.015;
+		real epsilon = real(0.015);
 		//if (steer < 0) epsilon *= -1;
 		if (steer > -0.04 && steer < 0.04)
 		{
 			steer = 0;
 			epsilon = 0;
 		}
-		mJoint->setLowStop( steer - epsilon );
-		mJoint->setHighStop( steer + epsilon );
+		//mJoint->setLowStop( steer - epsilon );
+		//mJoint->setHighStop( steer + epsilon );
+		mJoint->setLimits( 0, steer - epsilon, steer + epsilon );
 	}
 	//-----------------------------------------------------
 	void NativeWheel::applyTq( const Vector3 & torque )
 	{
-		mCO->getBody()->addTorque( mCO->getBody()->getOrientation() * torque );
+		mCO->getBody().addTorque( mCO->getOrientation() * torque );
 	}
 	//-----------------------------------------------------
 	void NativeWheel::applyBrakeTq( const Vector3 & torque )
 	{
-		Vector3 linVel = mCO->getBody()->getLinearVelocity();
-		Vector3 dir = mCO->getBody()->getOrientation() * Vector3::kUnitZ;
+		Vector3 linVel = mCO->getBody().getLinearVelocity();
+		Vector3 dir = mCO->getOrientation() * Vector3::kUnitZ;
 		if (dir.dotProduct(linVel) > 0)
-			mCO->getBody()->addRelTorque( torque );
+			mCO->getBody().addLocalTorque( torque );
 		else
-			mCO->getBody()->addRelTorque( -torque );
+			mCO->getBody().addLocalTorque( -torque );
 	}
 	//-----------------------------------------------------
 	void NativeWheel::apply( real velocity, real fmax )
 	{
-		if (mJoint->getType() == physics::IJoint::JT_HINGE)
+		if (mJoint->getType() == physics::JT_HINGE)
 		{
-			mJoint->setMotor1Velocity( velocity );
-			mJoint->setMotor1MaximumForce( fmax );
+			mJoint->setMotorEnabled(0,true);
+			mJoint->setMotor(0, velocity, fmax );
 		}
 		else
 		{
-			mJoint->setMotor2Velocity( velocity );
-			mJoint->setMotor2MaximumForce( fmax );
+			mJoint->setMotorEnabled(1,true);
+			mJoint->setMotor(1, velocity, fmax );
 		}
 	}
 	//-----------------------------------------------------
 	physics::IJoint* NativeWheel::getJoint() const
 	{
-		return mJoint.get();
+		return mJoint;
 	}
 
 

Modified: trunk/yake/src/yapp/model/yakeVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicle.cpp	2005-09-30 21:30:22 UTC (rev 950)
+++ trunk/yake/src/yapp/model/yakeVehicle.cpp	2005-09-30 21:30:44 UTC (rev 951)
@@ -34,28 +34,46 @@
 namespace vehicle {
 
 	//-----------------------------------------------------
-	Vehicle::Vehicle() : mComplex(0)
+	Vehicle::Vehicle() : mComplex(0), mPhysics(0)
 	{
 	}
 	//-----------------------------------------------------
 	Vehicle::~Vehicle()
 	{
 		YAKE_SAFE_DELETE( mComplex );
+		YAKE_SAFE_DELETE( mPhysics );
 	}
 	//-----------------------------------------------------
-	void Vehicle::onAct()
+	void Vehicle::setPhysicalComponent(IPhysicalVehicleComponent* pPhysical)
 	{
-		IPhysicalVehicleComponent* pPC = 
-			static_cast<IPhysicalVehicleComponent*>(getComponent("core"));
-		if (!pPC)
-			return;
-		pPC->update(real(0.01)); //@todo use elapsed time!
-
-		YAKE_ASSERT( mComplex );
-		mComplex->updatePhysics( real(0.01) ); //@todo use elapsed time!
-		mComplex->updateGraphics( real(0.01) ); //@todo use elapsed time!
+		YAKE_ASSERT( !mPhysics );
+		mPhysics = pPhysical;
 	}
 	//-----------------------------------------------------
+	void Vehicle::update(real timeElapsed)
+	{
+		if (mPhysics)
+			mPhysics->update(timeElapsed);
+		if (mComplex)
+		{
+			mComplex->updatePhysics(timeElapsed);
+			mComplex->updateGraphics(timeElapsed);
+		}
+	}
+	//-----------------------------------------------------
+	//void Vehicle::onAct()
+	//{
+	//	IPhysicalVehicleComponent* pPC = 
+	//		static_cast<IPhysicalVehicleComponent*>(getComponent("core"));
+	//	if (!pPC)
+	//		return;
+	//	pPC->update(real(0.01)); //@todo use elapsed time!
+
+	//	YAKE_ASSERT( mComplex );
+	//	mComplex->updatePhysics( real(0.01) ); //@todo use elapsed time!
+	//	mComplex->updateGraphics( real(0.01) ); //@todo use elapsed time!
+	//}
+	//-----------------------------------------------------
 	void Vehicle::setModel( complex::Model* pComplex )
 	{
 		YAKE_ASSERT( pComplex );

Modified: trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp	2005-09-30 21:30:22 UTC (rev 950)
+++ trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp	2005-09-30 21:30:44 UTC (rev 951)
@@ -60,7 +60,7 @@
 
 	//------------------------------------------------------
 	bool VehicleSerializer::load(	const SharedPtr<dom::INode> & docNode,
-									app::model::vehicle::VehicleTemplate& tpl)
+									model::vehicle::VehicleTemplate& tpl)
 	{
 		COUTLN( "load()" );
 		YAKE_ASSERT( docNode.get() );
@@ -80,7 +80,7 @@
 	void VehicleSerializer::readVehicle( const SharedPtr<dom::INode> & pNode )
 	{
 		
-		const String name = pNode->getValueAs<String>( "name" );
+		const String name = pNode->getName();
 		COUTLN( "readVehicle() [" << name << "]" );
 		YAKE_ASSERT( pNode );
 
@@ -124,12 +124,12 @@
 		YAKE_ASSERT( pNode );
 
 		// create template
-		app::model::vehicle::VehicleTemplate::EngineTemplate engineTpl;
+		model::vehicle::VehicleTemplate::CarEngineTemplate engineTpl;
 
 		const dom::NodeList & nodes = pNode->getNodes();
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String childNodeName = (*it)->getValueAs<String>( "name" );
+			String childNodeName = (*it)->getName();
 			childNodeName = ::yake::StringUtil::toLowerCase(childNodeName);
 			COUTLN( "   (child: " <<  childNodeName << ")" );
 
@@ -144,7 +144,7 @@
 		mpTpl->addEngine( engineTpl );
 	}
 	//------------------------------------------------------
-	void VehicleSerializer::readRPM( const SharedPtr<dom::INode> & pNode, app::model::vehicle::VehicleTemplate::EngineTemplate& engineTpl )
+	void VehicleSerializer::readRPM( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl )
 	{
 		COUTLN( "  readRPM()" );
 		YAKE_ASSERT( pNode );
@@ -154,13 +154,13 @@
 		engineTpl.rpmRedline_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "redline" ) );
 	}
 	//------------------------------------------------------
-	void VehicleSerializer::readGearbox( const SharedPtr<dom::INode> & pNode, app::model::vehicle::VehicleTemplate::EngineTemplate& engineTpl )
+	void VehicleSerializer::readGearbox( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl )
 	{
-		using namespace app::model::vehicle;
+		using namespace model::vehicle;
 		COUTLN( "  readGearbox()" );
 		YAKE_ASSERT( pNode );
 		const dom::NodeList & nodes = pNode->getNodes();
-		templates::ConstVectorIterator< dom::NodeList > it( nodes.begin(), nodes.end() );
+		ConstVectorIterator< dom::NodeList > it( nodes.begin(), nodes.end() );
 		while (it.hasMoreElements())
 		{
 			const SharedPtr<dom::INode> & pGearNode = it.getNext();
@@ -200,7 +200,7 @@
 		COUTLN( "readAxle() [id=" << id << " tag=" << tag << " engine=" << engineId << "]" );
 		YAKE_ASSERT( pNode );
 
-		app::model::vehicle::VehicleTemplate::AxleTemplate axleTpl;
+		model::vehicle::VehicleTemplate::AxleTemplate axleTpl;
 		axleTpl.efficiency_ = 0.75;
 		axleTpl.idxEngine_ = StringUtil::toInt32(engineId);
 
@@ -227,7 +227,7 @@
 		COUTLN( "readWheel() [id=" << id << " tag=" << tag << " axle=" << axleId << "]" );
 		YAKE_ASSERT( pNode );
 
-		app::model::vehicle::VehicleTemplate::WheelTemplate wheelTpl;
+		model::vehicle::VehicleTemplate::WheelTemplate wheelTpl;
 
 		// physical representation of the wheel
 		wheelTpl.radius_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "radius" ) );
@@ -252,7 +252,7 @@
 					( pGfxNode->getAttributeValueAs<String>( "name" ) == "relative");
 		wheelTpl.gfxDescriptor_ = gfxName;
 		wheelTpl.gfxDescriptorType_ = "scene";
-		wheelTpl.idxAxle_ = StringUtil::toSizeT( axleId );
+		wheelTpl.idxAxle_ = StringUtil::toInt32( axleId );
 		//wheelTpl.idxSteeringGroup_ = StringUtil::toInt32( steerId );
 		wheelTpl.idxSteeringGroup_ = -1;
 
@@ -284,13 +284,13 @@
 		COUTLN( "readChassis()" );
 		YAKE_ASSERT( pNode );
 
-		app::model::vehicle::VehicleTemplate::ChassisTemplate chassisTpl;
+		model::vehicle::VehicleTemplate::ChassisTemplate chassisTpl;
 		chassisTpl.mass_ = 1.5;
 
 		const dom::NodeList & nodes = pNode->getNodes();
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
-			String childNodeName = (*it)->getValueAs<String>( "name" );
+			String childNodeName = (*it)->getName();
 			childNodeName = ::yake::StringUtil::toLowerCase(childNodeName);
 			COUTLN( "   (child: " <<  childNodeName << ")" );
 
@@ -330,7 +330,7 @@
 				" dim=" << chassisTpl.dimensions_.x << ", " << chassisTpl.dimensions_.y << ", " << chassisTpl.dimensions_.z );
 	}
 	//------------------------------------------------------
-	void VehicleSerializer::readGeoms( const SharedPtr<dom::INode> & pNodes, app::model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl )
+	void VehicleSerializer::readGeoms( const SharedPtr<dom::INode> & pNodes, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl )
 	{
 		YAKE_ASSERT( pNodes );
 		COUTLN("readGeoms() (children=" << pNodes->getNodes().size() << ")");
@@ -338,34 +338,34 @@
 		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
 		{
 			readGeom( (*it), chassisTpl );
-			const app::model::vehicle::VehicleTemplate::GeomTemplate & geomTpl = chassisTpl.geoms_.back();
+			const model::vehicle::VehicleTemplate::ShapeTemplate & geomTpl = chassisTpl.collisionShapes_.back();
 			COUTLN(	"  geom type=" << geomTpl.type_ <<
-					" pos=" << geomTpl.position_.x << ", " << geomTpl.position_.y << ", " << geomTpl.position_.z <<
-					" dim=" << geomTpl.dimensions_.x << ", " << geomTpl.dimensions_.y << ", " << geomTpl.dimensions_.z );
+					" pos=" << geomTpl.position_.x << ", " << geomTpl.position_.y << ", " << geomTpl.position_.z );
+//					" dim=" << geomTpl.dimensions_.x << ", " << geomTpl.dimensions_.y << ", " << geomTpl.dimensions_.z );
 		}
 	}
 	//------------------------------------------------------
-	void VehicleSerializer::readGeom( const SharedPtr<dom::INode> & pNode, app::model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl )
+	void VehicleSerializer::readGeom( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl )
 	{
 		YAKE_ASSERT( pNode );
-		COUTLN("readGeom() == " << varGet<String>(pNode->getValue("name")));
-		app::model::vehicle::VehicleTemplate::GeomTemplate geomTpl;
+		COUTLN("readGeom() == " << pNode->getAttributeValueAs<String>("type"));
+		model::vehicle::VehicleTemplate::ShapeTemplate geomTpl;
 
 		// dimensions
 		SharedPtr<dom::INode> pTmpNode = pNode->getNodeByName("dimensions");
-		if (pTmpNode.get())
-		{
-			readGeomDimensions( pTmpNode, geomTpl.dimensions_ );
-			String mode = StringUtil::toLowerCase( pTmpNode->getAttributeValueAs<String>("mode") );
-			if (mode == "relative")
-			{
-				geomTpl.dimensions_.x *= chassisTpl.dimensions_.x;
-				geomTpl.dimensions_.y *= chassisTpl.dimensions_.y;
-				geomTpl.dimensions_.z *= chassisTpl.dimensions_.z;
-			}
-		}
-		else
-			geomTpl.dimensions_ = Vector3(0.1,0.1,0.1);
+		//if (pTmpNode.get())
+		//{
+		//	readGeomDimensions( pTmpNode, geomTpl.dimensions_ );
+		//	String mode = StringUtil::toLowerCase( pTmpNode->getAttributeValueAs<String>("mode") );
+		//	if (mode == "relative")
+		//	{
+		//		geomTpl.dimensions_.x *= chassisTpl.dimensions_.x;
+		//		geomTpl.dimensions_.y *= chassisTpl.dimensions_.y;
+		//		geomTpl.dimensions_.z *= chassisTpl.dimensions_.z;
+		//	}
+		//}
+		//else
+		//	geomTpl.dimensions_ = Vector3(0.1,0.1,0.1);
 
 		geomTpl.position_ = Vector3(0,0,0);
 		pTmpNode = pNode->getNodeByName("position");
@@ -374,13 +374,24 @@
 
 		String geomType = StringUtil::toLowerCase( pNode->getAttributeValueAs<String>("type") );
 		if (geomType == "sphere")
+		{
 			geomTpl.type_ = physics::ST_SPHERE;
+			real radius = atof( pNode->getAttributeValueAs<String>("radius").c_str() );
+			geomTpl.pDesc_.reset( new physics::IShape::SphereDesc(radius) );
+		}
 		else if (geomType == "box")
+		{
 			geomTpl.type_ = physics::ST_BOX;
+			Vector3 dimensions(1,1,1);
+			dimensions.x = atof( pNode->getAttributeValueAs<String>("boxx").c_str() );
+			dimensions.y = atof( pNode->getAttributeValueAs<String>("boxy").c_str() );
+			dimensions.z = atof( pNode->getAttributeValueAs<String>("boxz").c_str() );
+			geomTpl.pDesc_.reset( new physics::IShape::BoxDesc(dimensions) );
+		}
 
 		COUTLN("  -> type= " << geomType );
 
-		chassisTpl.geoms_.push_back( geomTpl );
+		chassisTpl.collisionShapes_.push_back( geomTpl );
 	}
 	//------------------------------------------------------
 	void VehicleSerializer::readGeomDimensions( const SharedPtr<dom::INode> & pNode, Vector3 & dimensions )

Modified: trunk/yake/src/yapp/model/yakeVehicleSystem.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicleSystem.cpp	2005-09-30 21:30:22 UTC (rev 950)
+++ trunk/yake/src/yapp/model/yakeVehicleSystem.cpp	2005-09-30 21:30:44 UTC (rev 951)
@@ -47,15 +47,11 @@
 #endif
 
 namespace yake {
-namespace app {
 namespace model {
 namespace vehicle {
 
 	//-----------------------------------------------------
-	YAKE_IMPLEMENT_REGISTRY( IVehicleSystem );
-	namespace privateVehSys {
-		YAKE_REGISTER_CONCRETE( NativeVehicleSystem );
-	}
+	YAKE_REGISTER_CONCRETE( NativeVehicleSystem );
 
 	//-----------------------------------------------------
 	class VehicleCreatorHelperV1
@@ -113,8 +109,8 @@
 		mComplex->addGraphical( SharedPtr<model::Graphical>(pGraphical) );
 
 		// tie all root scene nodes to the physics object
-		const model::Graphical::SceneNodeList & nodes = pGraphical->getRootSceneNodes();
-/*		VectorIterator< model::Graphical::SceneNodeList > it(nodes.begin(), nodes.end());
+		const model::Graphical::SceneNodeList & nodes = pGraphical->getSceneNodes();
+		ConstVectorIterator< model::Graphical::SceneNodeList > it(nodes.begin(), nodes.end());
 		while (it.hasMoreElements())
 		{
 			graphics::ISceneNode* pSN = it.getNext();
@@ -125,11 +121,11 @@
 
 			model::MovableUpdateController* pMUC = new model::MovableUpdateController();
 			YAKE_ASSERT( pMUC );
-			mComplex->addController( SharedPtr<model::IObjectController>(pMUC) );
+			mComplex->addGraphicsController( SharedPtr<model::IObjectController>(pMUC) );
 			pMUC->setUpdateSource( mPC->getChassisMovable() );
 			pMUC->subscribeToPositionChanged( pSN );
 			pMUC->subscribeToOrientationChanged( pSN );
-		}*/
+		}
 	}
 	//-----------------------------------------------------
 	void VehicleCreatorHelperV1::onEngine( const size_t index, const VehicleTemplate::EngineTemplate & tpl )
@@ -154,8 +150,8 @@
 		mComplex->addGraphical( SharedPtr<model::Graphical>(pGraphical) );
 
 		// tie all root scene nodes to the physics object
-		const model::Graphical::SceneNodeList & nodes = pGraphical->getRootSceneNodes();
-/*		VectorIterator< model::Graphical::SceneNodeList > it(nodes.begin(), nodes.end());
+		const model::Graphical::SceneNodeList & nodes = pGraphical->getSceneNodes();
+		ConstVectorIterator< model::Graphical::SceneNodeList > it(nodes.begin(), nodes.end());
 		while (it.hasMoreElements())
 		{
 			graphics::ISceneNode* pSN = it.getNext();
@@ -166,22 +162,22 @@
 
 			model::MovableUpdateController* pMUC = new model::MovableUpdateController();
 			YAKE_ASSERT( pMUC );
-			mComplex->addController( SharedPtr<model::IObjectController>(pMUC) );
+			mComplex->addGraphicsController( SharedPtr<model::IObjectController>(pMUC) );
 			pMUC->setUpdateSource( mPC->getWheelMovable(index) );
 			pMUC->subscribeToPositionChanged( pSN );
 			pMUC->subscribeToOrientationChanged( pSN );
-		}*/
+		}
 	}
 
 	//-----------------------------------------------------
-	Vehicle* NativeVehicleSystem::createVehicle(const ::yake::base::String & rTemplate, physics::IWorld* pPWorld, graphics::IWorld* pGWorld)
+	Vehicle* NativeVehicleSystem::createVehicle(const ::yake::String & rTemplate, physics::IWorld* pPWorld, graphics::IWorld* pGWorld)
 	{
 		YAKE_ASSERT( pPWorld );
 		YAKE_ASSERT( pGWorld );
 		Vehicle* pVehicle = new Vehicle();
 		YAKE_ASSERT( pVehicle );
 
-		::yake::app::model::complex::Model* pModel = new ::yake::app::model::complex::Model();
+		::yake::model::complex::Model* pModel = new ::yake::model::complex::Model();
 		YAKE_ASSERT( pModel );
 
 		// create physics component
@@ -189,7 +185,7 @@
 		NativePhysicalVehicleComponent* pPhysicsComponent = //create<IPhysicalVehicleComponent>("yake.native");
 			new NativePhysicalVehicleComponent( pPWorld );
 		YAKE_ASSERT( pPhysicsComponent );
-		pVehicle->addComponent( pPhysicsComponent, "core" );
+		pVehicle->setPhysicalComponent( pPhysicsComponent );
 
 		// load vehicle (physics + graphics)
 		_loadModelFromDotVehicle( pModel, rTemplate, pPWorld, pGWorld, pPhysicsComponent );
@@ -202,8 +198,8 @@
 		return pVehicle;
 	}
 	//-----------------------------------------------------
-	bool NativeVehicleSystem::_loadModelFromDotVehicle(::yake::app::model::complex::Model* pModel,
-								const ::yake::base::String & rFN, 
+	bool NativeVehicleSystem::_loadModelFromDotVehicle(::yake::model::complex::Model* pModel,
+								const ::yake::String & rFN, 
 								physics::IWorld* pPWorld,
 								graphics::IWorld* pGWorld,
 								IPhysicalVehicleComponent* pPC
@@ -237,6 +233,5 @@
 
 }// ns vehicle
 } // ns model
-} // ns app
 } // ns yake
 



From codeandroid at berlios.de  Fri Sep 30 23:30:23 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:30:23 +0200
Subject: [Yake-svn] r950 - trunk/yake/yapp/model
Message-ID: <200509302130.j8ULUNj6006479@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:30:22 +0200 (Fri, 30 Sep 2005)
New Revision: 950

Modified:
   trunk/yake/yapp/model/yakeComplexModel.h
   trunk/yake/yapp/model/yakeNativeEngine.h
   trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h
   trunk/yake/yapp/model/yakeNativeWheel.h
   trunk/yake/yapp/model/yakeVehicle.h
   trunk/yake/yapp/model/yakeVehicleSerializerXML.h
   trunk/yake/yapp/model/yakeVehicleSystem.h
Log:
fixes

Modified: trunk/yake/yapp/model/yakeComplexModel.h
===================================================================
--- trunk/yake/yapp/model/yakeComplexModel.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeComplexModel.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -36,16 +36,8 @@
 	using namespace base::templates;
 namespace model {
 
-	/*class YAPP_BASE_API Entity : public DynamicReflectionObject
-	{
-	};*/
-
-	/*class YAPP_BASE_API ModelBase
-	{
-	public:
-	};*/
-
 	class ModelLink;
+	class ModelMovableLink;
 
 namespace complex {
 
@@ -103,6 +95,16 @@
 
 		void updatePhysics( real timeElapsed );
 		void updateGraphics( real timeElapsed );
+
+		/** For convenience! This function creates a ModelMovableLink between
+			source and target movable objects. Both position and rotation
+			are marked for updates.
+			@Remarks This function is optimized to cache the created links
+				for each source. That means that for each source there's
+				only ever a single link (instead of having one for each
+				pair of source/target objects).
+		*/
+		ModelMovableLink* addLink( Movable* pSource, Movable* pTarget );
 	private:
 		typedef AssocVector< String, SharedPtr<Physical> > PhysicalMap;
 		PhysicalMap			mPhysicals;
@@ -113,6 +115,9 @@
 		typedef Vector< SharedPtr<Model> > ModelList;
 		ModelList			mChildren;
 
+		typedef AssocVector< Movable*, ModelMovableLink* > MovableLinkMap;
+		MovableLinkMap		mMovableLinkMap;
+
 		Model*				mParent;
 
 		typedef Vector< SharedPtr<IObjectController> > CtrlrList;

Modified: trunk/yake/yapp/model/yakeNativeEngine.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeEngine.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeNativeEngine.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -60,11 +60,11 @@
 		GearList	mGears;
 	};
 
-	class YAPP_BASE_API NativeEngine : public IEngine
+	class YAPP_BASE_API NativeCarEngine : public IEngine
 	{
 	public:
-		NativeEngine();
-		~NativeEngine();
+		NativeCarEngine();
+		~NativeCarEngine();
 
 		virtual void updateSimulation( real timeElapsed );
 

Modified: trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -88,16 +88,18 @@
 
 		void translate( const Vector3 & d );
 	private:
-		typedef ::yake::Vector< NativeEngine* > EngineList;
+		typedef ::yake::Vector< IEngine* > EngineList;
+		typedef ::yake::Vector< NativeCarEngine* > CarEngineList;
 		EngineList		mEngines;
+		CarEngineList	mCarEngines;
 
 		typedef ::yake::Vector< NativeWheel* > WheelList;
 		WheelList		mWheels;
 
 		struct Axle
 		{
-			WheelList		wheels;
-			NativeEngine*	engine;
+			WheelList			wheels;
+			NativeCarEngine*	engine;
 			Axle() : engine(0)
 			{
 			}
@@ -126,7 +128,8 @@
 	private:
 		SteerGroup* _getSteerGroup(const size_t index) const;
 		Axle* _getAxle(const size_t index) const;
-		NativeEngine* _getEngine(const size_t index) const;
+		NativeCarEngine* _getCarEngine(const size_t index) const;
+		IEngine* _getEngine(const size_t index) const;
 		NativeWheel* _getWheel(const size_t index) const;
 		void _reset();
 	};

Modified: trunk/yake/yapp/model/yakeNativeWheel.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeWheel.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeNativeWheel.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -69,7 +69,7 @@
 		SharedPtr<CachedInterpolator<real> > _getLinSkidCache();
 		SharedPtr<CachedInterpolator<real> > _getAngSkidCache();
 	private:
-		SharedPtr<physics::IJoint>	mJoint;
+		physics::IJoint*	mJoint;
 		physics::IActor*	mCO;
 		SharedPtr<CachedInterpolator<real> >	mLinSkidCache;
 		SharedPtr<CachedInterpolator<real> >	mAngSkidCache;

Modified: trunk/yake/yapp/model/yakeVehicle.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicle.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeVehicle.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -34,24 +34,30 @@
 namespace yake {
 namespace model {
 
-/** yapp::vehicle is experimental code! Concrete implementations are not in public CVS
-	and lots of its code may well be still in flux.
+/** yapp::vehicle is experimental code!
 */
 namespace vehicle {
 
+	class IPhysicalVehicleComponent;
 	/** Represents a vehicle :)
 	*/
-	class YAPP_BASE_API Vehicle : public Actor
+	class YAPP_BASE_API Vehicle// : public Actor
 	{
 	public:
 		Vehicle();
 		virtual ~Vehicle();
 		void setModel( complex::Model* pComplex );
-		virtual void onAct();
+		
+		//virtual void onAct();
+		void update(real timeElapsed);
 
+
+		void setPhysicalComponent(IPhysicalVehicleComponent* pPhysical);
+
 		InputComponent* queryInputInterface( VehicleInputComponentType type );
 	private:
-		complex::Model*	mComplex;
+		complex::Model*				mComplex;
+		IPhysicalVehicleComponent*	mPhysics;
 	};
 
 } // vehicle

Modified: trunk/yake/yapp/model/yakeVehicleSerializerXML.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleSerializerXML.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeVehicleSerializerXML.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -64,13 +64,13 @@
 
 		virtual void readVehicle( const SharedPtr<dom::INode> & pNode );
 		virtual void readChassis( const SharedPtr<dom::INode> & pNodes );
-		virtual void readGeoms( const SharedPtr<dom::INode> & pNodes, app::model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl );
-			virtual void readGeom( const SharedPtr<dom::INode> & pNode, app::model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl );
+		virtual void readGeoms( const SharedPtr<dom::INode> & pNodes, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl );
+			virtual void readGeom( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl );
 				virtual void readGeomDimensions( const SharedPtr<dom::INode> & pNode, Vector3 & dimensions );
 		virtual void readEngines( const SharedPtr<dom::INode> & pNodes );
 			virtual void readEngine( const SharedPtr<dom::INode> & pNode );
-				virtual void readRPM( const SharedPtr<dom::INode> & pNode, app::model::vehicle::VehicleTemplate::EngineTemplate& engineTpl );
-				virtual void readGearbox( const SharedPtr<dom::INode> & pNode, app::model::vehicle::VehicleTemplate::EngineTemplate& engineTpl );
+				virtual void readRPM( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl );
+				virtual void readGearbox( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl );
 		virtual void readAxles( const SharedPtr<dom::INode> & pNodes );
 			virtual void readAxle( const SharedPtr<dom::INode> & pNode );
 		virtual void readWheels( const SharedPtr<dom::INode> & pNodes );
@@ -80,7 +80,7 @@
 		virtual void readPosition( const SharedPtr<dom::INode> & pNode, Vector3 & position );
 	protected:
 		SharedPtr<dom::INode>							mDocNode;
-		app::model::vehicle::VehicleTemplate*			mpTpl;
+		model::vehicle::VehicleTemplate*			mpTpl;
 	};
 	class VehicleSerializerV1 : public VehicleSerializer
 	{

Modified: trunk/yake/yapp/model/yakeVehicleSystem.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleSystem.h	2005-09-29 23:21:28 UTC (rev 949)
+++ trunk/yake/yapp/model/yakeVehicleSystem.h	2005-09-30 21:30:22 UTC (rev 950)
@@ -55,8 +55,7 @@
 
 		virtual Vehicle* createVehicle( const ::yake::String & rTemplate, 
 										physics::IWorld* pWorld, 
-										graphics::IWorld* pGWorld )
-		{ return 0; }
+										graphics::IWorld* pGWorld );
 	private:
 		bool _loadModelFromDotVehicle(::yake::model::complex::Model* pModel,
 									const ::yake::String & rFN, 



From codeandroid at berlios.de  Fri Sep 30 23:31:19 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:31:19 +0200
Subject: [Yake-svn] r952 - trunk/yake/src/yapp/model
Message-ID: <200509302131.j8ULVJTW006745@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:31:19 +0200 (Fri, 30 Sep 2005)
New Revision: 952

Modified:
   trunk/yake/src/yapp/model/yakeComplexModel.cpp
Log:
added link management

Modified: trunk/yake/src/yapp/model/yakeComplexModel.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-09-30 21:30:44 UTC (rev 951)
+++ trunk/yake/src/yapp/model/yakeComplexModel.cpp	2005-09-30 21:31:19 UTC (rev 952)
@@ -27,6 +27,7 @@
 #include <yapp/base/yappPCH.h>
 #include <yapp/base/yapp.h>
 #include <yapp/model/yakeModelLink.h>
+#include <yapp/model/yakeModelMovableLink.h>
 
 namespace yake {
 namespace model {
@@ -162,6 +163,31 @@
 	}
 
 	//-----------------------------------------------------
+	ModelMovableLink* Model::addLink( Movable* pSource, Movable* pTarget )
+	{
+		YAKE_ASSERT( pSource );
+		YAKE_ASSERT( pTarget );
+		if (!pSource || !pTarget)
+			return 0;
+		ModelMovableLink* pLink = 0;
+		MovableLinkMap::iterator itFind = mMovableLinkMap.find( pSource );
+		if (itFind == mMovableLinkMap.end())
+		{
+			pLink = new ModelMovableLink();
+			pLink->setSource( pSource );
+			mMovableLinkMap.insert( std::make_pair(pSource,pLink) );
+			mControllers.push_back( SharedPtr<IObjectController>(pLink) );
+		}
+		else
+			pLink = itFind->second;
+		
+		pLink->subscribeToPositionChanged( pTarget );
+		pLink->subscribeToOrientationChanged( pTarget );
+
+		return pLink;
+	}
+
+	//-----------------------------------------------------
 	void Model::updatePhysics( real timeElapsed )
 	{
 	}



From codeandroid at berlios.de  Fri Sep 30 23:33:22 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:33:22 +0200
Subject: [Yake-svn] r954 - trunk/yake/yapp/model
Message-ID: <200509302133.j8ULXM2K007184@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:33:22 +0200 (Fri, 30 Sep 2005)
New Revision: 954

Removed:
   trunk/yake/yapp/model/yakeNativeEngine.h
   trunk/yake/yapp/model/yakeNativeVehicleInputComponent.h
   trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h
   trunk/yake/yapp/model/yakeNativeWheel.h
   trunk/yake/yapp/model/yakeVehicle.h
   trunk/yake/yapp/model/yakeVehicleInputComponent.h
   trunk/yake/yapp/model/yakeVehiclePhysicalComponent.h
   trunk/yake/yapp/model/yakeVehicleSerializerXML.h
   trunk/yake/yapp/model/yakeVehicleSystem.h
   trunk/yake/yapp/model/yakeVehicleTpl.h
Log:
refactoring of yake::vehicle

Deleted: trunk/yake/yapp/model/yakeNativeEngine.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeEngine.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeNativeEngine.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,126 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_NATIVEENGINE_H
-#define YAKE_APP_MODEL_VEHICLE_NATIVEENGINE_H
-
-#include <yapp/base/yappPrerequisites.h>
-#include <yapp/model/yakeVehicleTpl.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	class YAPP_BASE_API NativeGearBox
-	{
-	public:
-		enum GearMode {
-			GM_REVERSE,
-			GM_NEUTRAL,
-			GM_FORWARD
-		};
-		void setSpeed( uint8 numGears );
-		uint8 getSpeed() const;
-
-		void setGearRatio( uint8 gear, real ratio );
-		void setGearMode( uint8 gear, const GearMode mode );
-		real getGearRatio( uint8 gear );
-
-		void setFromTemplate( const VehicleTemplate::GearTemplateList & gears );
-	private:
-		struct Gear
-		{
-			real		ratio_;
-			GearMode	mode_;
-		};
-		typedef Vector< Gear > GearList;
-		GearList	mGears;
-	};
-
-	class YAPP_BASE_API NativeCarEngine : public IEngine
-	{
-	public:
-		NativeCarEngine();
-		~NativeCarEngine();
-
-		virtual void updateSimulation( real timeElapsed );
-
-		void setFromTemplate( const VehicleTemplate::EngineTemplate & tpl );
-
-		virtual void setParamMinRPM( const real rpm );
-		virtual void setParamMaxRPM( const real rpm );
-		virtual void setParamRedlineRPM( const real rpm );
-
-		virtual void setThrottle( real throttle );
-		virtual real getThrottle() const;
-
-		virtual real getRPM() const;
-		virtual uint8 getGear() const;
-		virtual void shiftGear( uint8 gear );
-		virtual void shiftGearUp();
-		virtual void shiftGearDown();
-
-		/** Returns the torque for the current engine data. [Nm] */
-		virtual real getDriveTorque() const;
-
-		//
-
-		NativeGearBox& getGearBox();
-
-		real getMinRPM() const;
-		real getMaxRPM() const;
-
-		/** Get the amount the RPM can rise [RPM/sec]. */
-		real getRPMRise() const;
-		/** Amount of RPM when decreasing when throttle is 0. [RPM/sec] */
-		real getRPMDieOff() const;
-		/** Minimum time needed to shift gears. */
-		real getMinShiftingTime() const;
-	private:
-		real		mCurrentRPM;
-		real		mMaxRPM;
-		real		mMinRPM;
-		real		mThrottle;
-		real		mThrottleRPMRise;
-		real		mRPMDieOff;
-		real		mGearRatio;
-		real		mInvGearRatio;
-		real		mDifferentialRatio;
-		NativeGearBox*	mpGearBox;
-		uint8		mCurrentGear;
-		real		mDriveTorque;
-	private:
-		void updateCurrentRPM( const real timeElapsed );
-		void updateGearRatios();
-		real getMaxTorque( const real rpm );
-	};
-
-}
-}
-}
-
-
-#endif

Deleted: trunk/yake/yapp/model/yakeNativeVehicleInputComponent.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeVehicleInputComponent.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeNativeVehicleInputComponent.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,52 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_NATIVE_VEHICLE_INPUTCOMPONENT_H
-#define YAKE_APP_MODEL_NATIVE_VEHICLE_INPUTCOMPONENT_H
-
-#include <yapp/base/yappPrerequisites.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	class YAPP_BASE_API IInputVehicleComponent : public InputComponent
-	{
-	public:
-		YAKE_DECLARE_CLASS( IInputVehicleComponent );
-		YAKE_DECLARE_REGISTRY( IInputVehicleComponent );
-
-		virtual void steerAnalog( const String & rSteerGroup, const real targetSteer ) = 0;
-		virtual void brakeAnalog( const String & rBrake, const real ratio ) = 0;
-		virtual void throttleAnalog( const String & rEngine, const real ratio ) = 0;
-		//virtual void handbrake( const bool activate ) = 0;
-	};
-
-}
-}
-}
-
-#endif

Deleted: trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeNativeVehiclePhysicalComponent.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,141 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_NATIVE_PHYSICALCOMPONENT_H
-#define YAKE_APP_MODEL_VEHICLE_NATIVE_PHYSICALCOMPONENT_H
-
-#include <yapp/base/yappPrerequisites.h>
-#include <yapp/model/yakeVehiclePhysicalComponent.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	class NativeWheel;
-	/** WIP version of the "yake.native" implementation of a IPhysicalVehicleComponent.
-		@Remarks Work-in-progress version.
-	*/
-	class YAPP_BASE_API NativePhysicalVehicleComponent : public IPhysicalVehicleComponent
-	{
-	public:
-		YAKE_DECLARE_CLASS( NativePhysicalVehicleComponent );
-		YAKE_DECLARE_CONCRETE( NativePhysicalVehicleComponent, "yake.native" );
-
-		NativePhysicalVehicleComponent(::yake::physics::IWorld* pWorld);
-		virtual ~NativePhysicalVehicleComponent();
-
-		virtual bool createFromTemplate( const VehicleTemplate & tpl );
-		/*
-		virtual bool createChassis(const String & rName);
-		virtual bool createEngine(const String & rName, const String & rTemplate) ;
-		virtual bool createAxle(const String & rName, const String & rEngineName = "") ;
-		virtual bool createSteerGroup(const String & rName) ;
-		virtual bool createWheel(const String & rName, const String & rAxleName, const String & rSteerGroup = "") ;
-		virtual bool createBrake(const String & rName) ;
-		*/
-
-		virtual IEngine* getEngine(const size_t index) ;
-
-		//virtual void attachComplexModel(::yake::model::complex::Model* pModel);
-
-		/*
-		virtual bool attachAxleToEngine(const String & axleName, const String & engineName) ;
-		virtual bool attachWheelToAxle(const String & wheelName, const String & axleName) ;
-		virtual bool attachWheelToBrake(const String & wheelName, const String & brakeName, const real influence) ;
-		virtual bool attachWheelToSteerGroup(const String & wheelName, const String & steerGroup) ;
-		*/
-		virtual void update(const real timeElapsed);
-
-		virtual void setWheelMass(const size_t index, const real mass);
-		virtual void setWheelRadius(const size_t index, const real r);
-		virtual void setWheelPosition(const size_t index, const Vector3 & position);
-		virtual void setWheelSuspension(const size_t index, const real stiffness) ;
-		virtual void setWheelFriction(const size_t index, const real f) ;
-		virtual void setWheelLateralFriction(const size_t index, const real f) ;
-
-		virtual void setSteer(const size_t index, const real steerValue) ;
-		virtual void setBrake(const size_t index, const real brakeValue) ;
-		virtual void setEngineThrottle(const size_t index, const real throttle) ;
-
-		virtual Movable* getChassisMovable();
-		virtual Movable* getWheelMovable(const size_t index);
-
-		virtual void subscribeToOnWheelCollision( const WheelCollisionSignal::slot_type & slot )
-		{ mWheelCollisionSig.connect( slot ); }
-
-		void translate( const Vector3 & d );
-	private:
-		typedef ::yake::Vector< IEngine* > EngineList;
-		typedef ::yake::Vector< NativeCarEngine* > CarEngineList;
-		EngineList		mEngines;
-		CarEngineList	mCarEngines;
-
-		typedef ::yake::Vector< NativeWheel* > WheelList;
-		WheelList		mWheels;
-
-		struct Axle
-		{
-			WheelList			wheels;
-			NativeCarEngine*	engine;
-			Axle() : engine(0)
-			{
-			}
-		};
-		typedef ::yake::Vector< Axle* > AxleList;
-		AxleList		mAxles;
-
-		struct SteerGroup
-		{
-			real		steer;
-			WheelList	wheels;
-			SteerGroup() : steer(0)
-			{
-			}
-		};
-
-		typedef ::yake::Vector< SteerGroup* > SteerGroupList;
-		SteerGroupList						mSteerGroups;
-
-		physics::IWorld*					mpPWorld;
-
-		WheelCollisionSignal				mWheelCollisionSig;
-
-		physics::IActor*			mpChassis;
-		Physical*							mpPhysical;
-	private:
-		SteerGroup* _getSteerGroup(const size_t index) const;
-		Axle* _getAxle(const size_t index) const;
-		NativeCarEngine* _getCarEngine(const size_t index) const;
-		IEngine* _getEngine(const size_t index) const;
-		NativeWheel* _getWheel(const size_t index) const;
-		void _reset();
-	};
-
-}
-}
-}
-
-#endif

Deleted: trunk/yake/yapp/model/yakeNativeWheel.h
===================================================================
--- trunk/yake/yapp/model/yakeNativeWheel.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeNativeWheel.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,82 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_NATIVEWHEEL_H
-#define YAKE_APP_MODEL_VEHICLE_NATIVEWHEEL_H
-
-#include <yapp/base/yappPrerequisites.h>
-#include <yapp/model/yakeModel.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	/** Utilized by the "yake.native" vehicle implementation.
-	*/
-	class NativeWheel : public Movable
-	{
-	public:
-		NativeWheel(physics::IWorld* pPWorld);
-		virtual ~NativeWheel();
-		physics::IActor* getPhysicsComplex() const;
-
-		void setJoint( physics::IJointPtr jt );
-		physics::IJoint* getJoint() const;
-		void setSuspension( const real spring, const real damping );
-		real getSuspensionSpring() const;
-		real getSuspensionDamping() const;
-		void applySteer( real steer );
-
-		void apply( real velocity, real fmax );
-		void applyTq( const Vector3 & torque );
-		void applyBrakeTq( const Vector3 & torque );
-
-		void update();
-
-		void setRadius( const real radius );
-		void setMass( const real mass );
-
-		Vector3 getLateralSlipNormal() const;
-
-		virtual void setPosition(const Vector3 & rPosition);
-		virtual void setOrientation(const Quaternion& rOrientation);
-		virtual Vector3 getPosition() const;
-		virtual Quaternion getOrientation() const;
-
-		SharedPtr<CachedInterpolator<real> > _getLinSkidCache();
-		SharedPtr<CachedInterpolator<real> > _getAngSkidCache();
-	private:
-		physics::IJoint*	mJoint;
-		physics::IActor*	mCO;
-		SharedPtr<CachedInterpolator<real> >	mLinSkidCache;
-		SharedPtr<CachedInterpolator<real> >	mAngSkidCache;
-	};
-
-}
-}
-}
-
-#endif

Deleted: trunk/yake/yapp/model/yakeVehicle.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicle.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeVehicle.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,68 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAPP_MODEL_VEHICLE_H
-#define YAPP_MODEL_VEHICLE_H
-
-#include <yapp/base/yappPrerequisites.h>
-#include <yapp/model/yakeActor.h>
-#include <yapp/model/yakeVehicleInputComponent.h>
-
-namespace yake {
-namespace model {
-
-/** yapp::vehicle is experimental code!
-*/
-namespace vehicle {
-
-	class IPhysicalVehicleComponent;
-	/** Represents a vehicle :)
-	*/
-	class YAPP_BASE_API Vehicle// : public Actor
-	{
-	public:
-		Vehicle();
-		virtual ~Vehicle();
-		void setModel( complex::Model* pComplex );
-		
-		//virtual void onAct();
-		void update(real timeElapsed);
-
-
-		void setPhysicalComponent(IPhysicalVehicleComponent* pPhysical);
-
-		InputComponent* queryInputInterface( VehicleInputComponentType type );
-	private:
-		complex::Model*				mComplex;
-		IPhysicalVehicleComponent*	mPhysics;
-	};
-
-} // vehicle
-
-} // model
-} // yake
-
-#endif

Deleted: trunk/yake/yapp/model/yakeVehicleInputComponent.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleInputComponent.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeVehicleInputComponent.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,91 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright  2004 The YAKE Team
-   For the latest information visit http://www.yake.org
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_INPUTCOMPONENT_H
-#define YAKE_APP_MODEL_VEHICLE_INPUTCOMPONENT_H
-
-#include <yapp/base/yappPrerequisites.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	enum VehicleInputComponentType {
-		VICT_ENGINE,
-		VICT_THRUSTER,
-		VICT_CAR_ENGINE,
-		VICT_CAR
-	};
-
-	enum VehicleGearMode {
-		VGM_FORWARD,
-		VGM_NEUTRAL,
-		VGM_REVERSE
-	};
-
-	class YAPP_BASE_API IEngineInputComponent : public InputComponent
-	{
-	public:
-		virtual ~IEngineInputComponent() {}
-
-		/** Set throttle for a given engine. Value is in the range [0,1]. */
-		virtual void throttleAnalog( const size_t idxEngine, const real throttle ) = 0;
-	};
-	class YAPP_BASE_API ICarEngineInputComponent : public IEngineInputComponent
-	{
-	public:
-		/** Shift up for a given engine. */
-		virtual void shiftGearUp( const size_t idxEngine ) = 0;
-		/** Shift down for a given engine. */
-		virtual void shiftGearDown( const size_t idxEngine ) = 0;
-		/** Get current gear's mode (reverse, neutral, forward) for a given engine. */
-		virtual VehicleGearMode getCurrentGearMode( const size_t idxEngine ) const = 0;
-		/** Get current gear for a given engine. */
-		virtual uint8 getCurrentGear( const size_t idxEngine ) const = 0;
-	};
-	class YAPP_BASE_API IThrusterInputComponent : public IEngineInputComponent
-	{
-	public:
-		//inherits: virtual void throttleAnalog( const size_t idxThruster, const real throttle ) = 0;
-	};
-
-	class YAPP_BASE_API ICarInputComponent : public InputComponent
-	{
-	public:
-		/** Set steering value. Value is in the range [-1,1]. */
-		virtual void steerAnalog( const size_t idxSteerGroup, const real targetSteer ) = 0;
-
-		/** Set braking value for a given brake. Value is in the range [0,1]. */
-		virtual void brakeAnalog( const size_t idxBrake, const real ratio ) = 0;
-
-		//virtual void handbrake( const bool activate ) = 0;
-	};
-
-}
-}
-}
-
-#endif

Deleted: trunk/yake/yapp/model/yakeVehiclePhysicalComponent.h
===================================================================
--- trunk/yake/yapp/model/yakeVehiclePhysicalComponent.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeVehiclePhysicalComponent.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,105 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_PHYSICALCOMPONENT_H
-#define YAKE_APP_MODEL_VEHICLE_PHYSICALCOMPONENT_H
-
-#include <yapp/base/yappPrerequisites.h>
-#include <yapp/model/yakeActor.h>
-#include <yapp/model/yakeModel.h>
-#include <yapp/model/yakeEngine.h>
-#include <yapp/model/yakeVehicleTpl.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	class YAPP_BASE_API IPhysicalVehicleComponent : public PhysicalComponent
-	{
-	public:
-		YAKE_DECLARE_CLASS( IPhysicalVehicleComponent );
-		YAKE_DECLARE_REGISTRY_1( IPhysicalVehicleComponent, ::yake::String, ::yake::physics::IWorld* );
-		//VehiclePhysicalCaps getCaps() const = 0;
-
-		virtual bool createFromTemplate( const VehicleTemplate & tpl ) = 0;
-
-		/*
-		virtual bool createChassis(const size_t index) = 0;
-		virtual bool createEngine(const size_t index, const String & rTemplate) = 0;
-		virtual bool createAxle(const size_t index, const String & rEngineName = "") = 0;
-		virtual bool createSteerGroup(const size_t index) = 0;
-		virtual bool createWheel(const size_t index, const String & rAxleName, const String & rSteerGroup = "") = 0;
-		virtual bool createBrake(const size_t index) = 0;
-		*/
-
-		virtual IEngine* getEngine(const size_t index) = 0;
-
-		virtual void setWheelMass(const size_t index, const real mass) = 0;
-		virtual void setWheelRadius(const size_t index, const real r) = 0;
-		virtual void setWheelPosition(const size_t index, const Vector3 & position) = 0;
-		virtual void setWheelSuspension(const size_t index, const real stiffness) = 0;
-		virtual void setWheelFriction(const size_t index, const real f) = 0;
-		virtual void setWheelLateralFriction(const size_t index, const real f) = 0;
-
-		virtual void setSteer(const size_t index, const real steerValue) = 0;
-		virtual void setBrake(const size_t index, const real brakeValue) = 0;
-		virtual void setEngineThrottle(const size_t index, const real throttle) = 0;
-
-		virtual Movable* getChassisMovable() = 0;
-		virtual Movable* getWheelMovable(const size_t index) = 0;
-
-		virtual void update(const real timeElapsed) = 0;
-
-		/** As not every implementation necessarily supports all of this information
-			these flags are specified or'd in a WheelCollisionInfo::flags_ member.
-			@Remarks WIP. will be revised.
-		*/
-		enum WheelCollisionFlag
-		{
-			WCF_NAME					= 0x00000001,
-			WCF_OTHEROBJ				= 0x00000002,
-			WCF_OTHEROBJ_NAME			= 0x00000004,
-			WCF_OTHEROBJ_MATERIAL_NAME	= 0x00000008
-		};
-		struct WheelCollisionInfo
-		{
-			uint32						flags_;
-			String						wheelName_;
-			physics::IActor*			otherObj_;
-			String						otherObjName_;
-			String						otherObjMaterialName_;
-		};
-		typedef Signal1<void(const WheelCollisionInfo&)> WheelCollisionSignal;
-		virtual void subscribeToOnWheelCollision( const WheelCollisionSignal::slot_type & slot ) = 0;
-	};
-
-
-}
-}
-}
-
-
-#endif

Deleted: trunk/yake/yapp/model/yakeVehicleSerializerXML.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleSerializerXML.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeVehicleSerializerXML.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,97 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright  2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_DATA_VEHICLE_H
-#define YAKE_DATA_VEHICLE_H
-
-#include <yake/data/yakeData.h>
-#include <yapp/model/yakeVehicleTpl.h>
-
-#pragma warning(disable: 4244)
-
-namespace yake {
-namespace data {
-namespace serializer {
-namespace vehicle {
-
-	/** VehicleReader base class providing default implementation for DOM parsing.
-	*/
-	class VehicleSerializer
-	{
-	public:
-		VehicleSerializer();
-		~VehicleSerializer() {}
-
-		String getName() const
-		{ return "yake.data.vehicle"; }
-
-		virtual Version getVersion() const = 0;
-
-		/** Build vehicle from DOM.
-			\param
-			\return 
-		*/
-		virtual bool load(	const SharedPtr<dom::INode> & docNode, model::vehicle::VehicleTemplate & tpl);
-
-		/** Prepare for next run of load/store.
-		*/
-		virtual void reset();
-	protected:
-		/// Default implementations for common functions.
-
-		virtual void readVehicle( const SharedPtr<dom::INode> & pNode );
-		virtual void readChassis( const SharedPtr<dom::INode> & pNodes );
-		virtual void readGeoms( const SharedPtr<dom::INode> & pNodes, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl );
-			virtual void readGeom( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl );
-				virtual void readGeomDimensions( const SharedPtr<dom::INode> & pNode, Vector3 & dimensions );
-		virtual void readEngines( const SharedPtr<dom::INode> & pNodes );
-			virtual void readEngine( const SharedPtr<dom::INode> & pNode );
-				virtual void readRPM( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl );
-				virtual void readGearbox( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl );
-		virtual void readAxles( const SharedPtr<dom::INode> & pNodes );
-			virtual void readAxle( const SharedPtr<dom::INode> & pNode );
-		virtual void readWheels( const SharedPtr<dom::INode> & pNodes );
-			virtual void readWheel( const SharedPtr<dom::INode> & pNode );
-				virtual void readSuspension( const SharedPtr<dom::INode> & pNode, real & spring, real & damping );
-		virtual void readOrientation( const SharedPtr<dom::INode> & pNode, Quaternion & orientation );
-		virtual void readPosition( const SharedPtr<dom::INode> & pNode, Vector3 & position );
-	protected:
-		SharedPtr<dom::INode>							mDocNode;
-		model::vehicle::VehicleTemplate*			mpTpl;
-	};
-	class VehicleSerializerV1 : public VehicleSerializer
-	{
-	public:
-		virtual Version getVersion() const
-		{ return Version(0,1,0); }
-	};
-
-} // dotscene
-} // serializer
-} // data
-} // yake
-
-#endif

Deleted: trunk/yake/yapp/model/yakeVehicleSystem.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleSystem.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeVehicleSystem.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,73 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_SYSTEM_H
-#define YAKE_APP_MODEL_VEHICLE_SYSTEM_H
-
-#include <yapp/base/yappPrerequisites.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	class Vehicle;
-	class IPhysicalVehicleComponent;
-
-	class YAPP_BASE_API IVehicleSystem
-	{
-	public:
-		YAKE_DECLARE_CLASS( IVehicleSystem );
-		YAKE_DECLARE_REGISTRY_0( IVehicleSystem, ::yake::String );
-
-		virtual Vehicle* createVehicle( const ::yake::String & rTemplate,
-										physics::IWorld* pPWorld, 
-										graphics::IWorld* pGWorld ) = 0;
-	};
-
-	class YAPP_BASE_API NativeVehicleSystem : public IVehicleSystem
-	{
-	public:
-		YAKE_DECLARE_CLASS( NativeVehicleSystem );
-		YAKE_DECLARE_CONCRETE( NativeVehicleSystem, "yake.native" );
-
-		virtual Vehicle* createVehicle( const ::yake::String & rTemplate, 
-										physics::IWorld* pWorld, 
-										graphics::IWorld* pGWorld );
-	private:
-		bool _loadModelFromDotVehicle(::yake::model::complex::Model* pModel,
-									const ::yake::String & rFN, 
-									physics::IWorld* pPWorld,
-									graphics::IWorld* pGWorld,
-									IPhysicalVehicleComponent* pPC
-									);
-	};
-
-
-}
-}
-}
-
-#endif

Deleted: trunk/yake/yapp/model/yakeVehicleTpl.h
===================================================================
--- trunk/yake/yapp/model/yakeVehicleTpl.h	2005-09-30 21:32:54 UTC (rev 953)
+++ trunk/yake/yapp/model/yakeVehicleTpl.h	2005-09-30 21:33:22 UTC (rev 954)
@@ -1,148 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#ifndef YAKE_APP_MODEL_VEHICLE_TEMPLATE_H
-#define YAKE_APP_MODEL_VEHICLE_TEMPLATE_H
-
-#include <yapp/base/yappPrerequisites.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	struct VehicleTemplate
-	{
-	public:
-		VehicleTemplate();
-		~VehicleTemplate();
-
-		struct ShapeTemplate
-		{
-			Vector3								position_;
-			Quaternion							orientation_;
-			physics::ShapeType					type_;
-			SharedPtr<physics::IShape::Desc>	pDesc_;
-		};
-		typedef Deque<ShapeTemplate> ShapeTemplateList;
-
-		enum GearMode
-		{
-			GM_FORWARD,
-			GM_NEUTRAL,
-			GM_REVERSE
-		};
-		struct GearTemplate
-		{
-			real				ratio_;
-			GearMode			mode_;
-		};
-		typedef Vector<GearTemplate> GearTemplateList;
-
-		struct EngineTemplate
-		{
-			virtual ~EngineTemplate() {}
-		};
-		struct ThrusterTemplate : public EngineTemplate
-		{
-			real				minForce;
-			real				maxForce;
-		};
-		struct CarEngineTemplate : public EngineTemplate
-		{
-			real				rpmMin_;
-			real				rpmMax_;
-			real				rpmRedline_;
-			real				rpmDieOff_;
-			real				rpmRise_;
-			real				minShiftingTime_;
-			GearTemplateList	gears_;
-			//Curve*			torqueCurve_;
-			real				differentialRatio;
-		};
-		size_t getNumEngines() const;
-		const EngineTemplate& getEngine(const size_t index) const;
-		void addEngine( const EngineTemplate & tpl);
-
-		struct AxleTemplate
-		{
-			int32				idxEngine_;
-			real				efficiency_;
-		};
-		size_t getNumAxles() const;
-		const AxleTemplate& getAxle(const size_t index) const;
-		void addAxle( const AxleTemplate & tpl);
-
-		size_t getNumSteeringGroups() const;
-		void addSteeringGroup();
-
-		struct WheelTemplate
-		{
-			int32		idxAxle_;
-			int32		idxSteeringGroup_;
-			real		radius_;
-			real		mass_;
-			bool		bMassIsRelativeToChassisMass_;
-			String		gfxDescriptor_;
-			String		gfxDescriptorType_;
-			Vector3		position_;
-			Quaternion	orientation;
-			real		suspensionSpring_;
-			real		suspensionDamping_;
-		};
-		size_t getNumWheels() const;
-		const WheelTemplate& getWheel(const size_t index) const;
-		void addWheel( const WheelTemplate & tpl);
-
-		struct ChassisTemplate
-		{
-			real				mass_;
-			String				gfxDescriptor_;
-			Vector3				position_;
-			Quaternion			orientation_;
-			Vector3				dimensions_;
-			ShapeTemplateList	collisionShapes_;
-		};
-		ChassisTemplate	chassisTpl_;
-	private:
-		GearTemplateList	mGears;
-		
-		typedef Vector<EngineTemplate> EngineTemplateList;
-		EngineTemplateList	mEngines;
-
-		typedef Vector<AxleTemplate> AxleTemplateList;
-		AxleTemplateList	mAxles;
-
-		typedef Vector<WheelTemplate> WheelTemplateList;
-		WheelTemplateList	mWheels;
-
-		uint32				mNumSteerGroups;
-	};
-
-}
-}
-}
-
-#endif



From codeandroid at berlios.de  Fri Sep 30 23:34:22 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:34:22 +0200
Subject: [Yake-svn] r955 - in trunk/yake/common/media: . graphics.fx graphics.scenes/arena0 vehicles
Message-ID: <200509302134.j8ULYMcV007300@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:34:19 +0200 (Fri, 30 Sep 2005)
New Revision: 955

Added:
   trunk/yake/common/media/skybox.zip
Modified:
   trunk/yake/common/media/graphics.fx/thruster1.particle
   trunk/yake/common/media/graphics.scenes/arena0/arena0_export.scene
   trunk/yake/common/media/vehicles/fordboss.vehicle
Log:
added new sample artwork,
fixed .scene file

Modified: trunk/yake/common/media/graphics.fx/thruster1.particle
===================================================================
--- trunk/yake/common/media/graphics.fx/thruster1.particle	2005-09-30 21:33:22 UTC (rev 954)
+++ trunk/yake/common/media/graphics.fx/thruster1.particle	2005-09-30 21:34:19 UTC (rev 955)
@@ -31,7 +31,7 @@
 
    	affector Scaler
    	{
-       	rate 	0.4
+       	rate 	0.1
    	}
 
 }

Modified: trunk/yake/common/media/graphics.scenes/arena0/arena0_export.scene
===================================================================
--- trunk/yake/common/media/graphics.scenes/arena0/arena0_export.scene	2005-09-30 21:33:22 UTC (rev 954)
+++ trunk/yake/common/media/graphics.scenes/arena0/arena0_export.scene	2005-09-30 21:34:19 UTC (rev 955)
@@ -10,7 +10,7 @@
     </externals>
     <nodes name="Scene Root" id="-1">
         <node name="arena0ground" id="22">
-            <entity name="arena0ground" id="22" meshfile="arena0ground.mesh" static="true" />
+            <entity name="arena0ground" id="22" meshFile="arena0ground.mesh" static="true" />
         </node>
     </nodes>
 </scene>

Added: trunk/yake/common/media/skybox.zip
===================================================================
(Binary files differ)


Property changes on: trunk/yake/common/media/skybox.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/yake/common/media/vehicles/fordboss.vehicle
===================================================================
--- trunk/yake/common/media/vehicles/fordboss.vehicle	2005-09-30 21:33:22 UTC (rev 954)
+++ trunk/yake/common/media/vehicles/fordboss.vehicle	2005-09-30 21:34:19 UTC (rev 955)
@@ -5,12 +5,10 @@
 		<dimensions x="1.75" y="1.0" z="4.21" />
 		<position x="0" y="0.3" z="0" />
 		<geoms>
-			<geom type="box">
-				<dimensions mode="relative" x="0.9" y="0.5" z="0.5" />
+			<geom type="box" boxx="0.9" boxy="0.5" boxz="0.5">
 				<position x="0" y="0.6" z="-0.5" />
 			</geom>
-			<geom type="box">
-				<dimensions mode="relative" x="0.9" y="0.45" z="0.9" />
+			<geom type="box" boxx="0.9" boxy="0.45" boxz="0.9">
 				<position x="0" y="0.15" z="0" />
 			</geom>
 		</geoms>



From codeandroid at berlios.de  Fri Sep 30 23:34:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:34:45 +0200
Subject: [Yake-svn] r956 - trunk/yake/common/bin/debug
Message-ID: <200509302134.j8ULYjtC007373@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:34:45 +0200 (Fri, 30 Sep 2005)
New Revision: 956

Modified:
   trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg
Log:
added skybox

Modified: trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg
===================================================================
--- trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg	2005-09-30 21:34:19 UTC (rev 955)
+++ trunk/yake/common/bin/debug/yake.graphics.ogre_resources.cfg	2005-09-30 21:34:45 UTC (rev 956)
@@ -20,3 +20,4 @@
 FileSystem=../../media/gui.cegui.imagesets
 FileSystem=../../media/gui.cegui.fonts/
 FileSystem=../../media/gui.cegui.layouts/
+Zip=../../media/skybox.zip



From codeandroid at berlios.de  Fri Sep 30 23:35:53 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:35:53 +0200
Subject: [Yake-svn] r957 - trunk/yake/yapp/base
Message-ID: <200509302135.j8ULZrld007536@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:35:52 +0200 (Fri, 30 Sep 2005)
New Revision: 957

Modified:
   trunk/yake/yapp/base/yapp.h
Log:
refactoring of yake::vehicle

Modified: trunk/yake/yapp/base/yapp.h
===================================================================
--- trunk/yake/yapp/base/yapp.h	2005-09-30 21:34:45 UTC (rev 956)
+++ trunk/yake/yapp/base/yapp.h	2005-09-30 21:35:52 UTC (rev 957)
@@ -37,10 +37,10 @@
 #include <yake/base/yake.h>
 #include <yapp/model/yakeModel.h>
 #include <yapp/model/yakeComplexModel.h>
-#include <yapp/model/yakeVehicle.h>
 #include <yapp/base/event/yakeEvent.h>
 #include <yapp/statemachine/yakeFiniteStateMachine.h>
 #include <yapp/base/yakeTask.h>
+#include <yapp/model/yakeModelMovableLink.h>
 /*
 #include <yapp/gui/yappGUIVisual.h>
 #include <yapp/gui/yappButton.h>



From codeandroid at berlios.de  Fri Sep 30 23:36:24 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:36:24 +0200
Subject: [Yake-svn] r958 - trunk/yake/yapp/common
Message-ID: <200509302136.j8ULaOZk007581@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:36:23 +0200 (Fri, 30 Sep 2005)
New Revision: 958

Modified:
   trunk/yake/yapp/common/yakePawn.h
Log:
refactoring of yake::vehicle

Modified: trunk/yake/yapp/common/yakePawn.h
===================================================================
--- trunk/yake/yapp/common/yakePawn.h	2005-09-30 21:35:52 UTC (rev 957)
+++ trunk/yake/yapp/common/yakePawn.h	2005-09-30 21:36:23 UTC (rev 958)
@@ -28,7 +28,6 @@
 #define YAPP_MODEL_PAWN_H
 
 namespace yake {
-namespace app {
 namespace model {
 
 	/** Simple entity/actor that has a physical representation.
@@ -39,7 +38,7 @@
 		Pawn();
 		virtual ~Pawn();
 		void setModel( model::complex::Model* pComplex );
-		void setMovable( physics::IComplexObject* pMovable );
+		void setMovable( physics::IActor* pMovable );
 
 		//@{ name model::Actor interface
 		virtual void onSense();
@@ -52,11 +51,10 @@
 		void updateControllers( const real timeElapsed );
 	private:
 		model::complex::Model*		mComplex;
-		physics::IComplexObject*	mMovable;
+		physics::IActor*			mMovable;
 	};
 
 }
 }
-}
 
 #endif
\ No newline at end of file



From codeandroid at berlios.de  Fri Sep 30 23:36:57 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:36:57 +0200
Subject: [Yake-svn] r959 - trunk/yake/yapp/raf
Message-ID: <200509302136.j8ULavJN007670@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:36:57 +0200 (Fri, 30 Sep 2005)
New Revision: 959

Modified:
   trunk/yake/yapp/raf/yakePrerequisites.h
Log:
enabled auto-link on win32

Modified: trunk/yake/yapp/raf/yakePrerequisites.h
===================================================================
--- trunk/yake/yapp/raf/yakePrerequisites.h	2005-09-30 21:36:23 UTC (rev 958)
+++ trunk/yake/yapp/raf/yakePrerequisites.h	2005-09-30 21:36:57 UTC (rev 959)
@@ -32,6 +32,9 @@
 #		define YAKE_RAF_API DLLEXPORT
 #	else
 #		define YAKE_RAF_API DLLIMPORT
+#		if YAKE_PLATFORM == PLATFORM_WIN32
+#			pragma comment(lib,"raf.lib")
+#		endif
 #	endif
 #else
 #	define YAKE_RAF_API



From codeandroid at berlios.de  Fri Sep 30 23:37:29 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:37:29 +0200
Subject: [Yake-svn] r960 - trunk/yake/yapp/samples/common
Message-ID: <200509302137.j8ULbTYx007842@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:37:29 +0200 (Fri, 30 Sep 2005)
New Revision: 960

Modified:
   trunk/yake/yapp/samples/common/yakeHelper.h
Log:
refactoring of yake::vehicle

Modified: trunk/yake/yapp/samples/common/yakeHelper.h
===================================================================
--- trunk/yake/yapp/samples/common/yakeHelper.h	2005-09-30 21:36:57 UTC (rev 959)
+++ trunk/yake/yapp/samples/common/yakeHelper.h	2005-09-30 21:37:29 UTC (rev 960)
@@ -28,8 +28,8 @@
 #define YAPP_SAMPLES_HELPER_H
 
 using namespace yake;
-using namespace yake::base;
-using namespace yake::base::math;
+using namespace yake::templates;
+using namespace yake::math;
 using namespace yake::graphics;
 
 namespace yake {
@@ -74,7 +74,6 @@
 
 	typedef Vector<SharedPtr<graphics::ISceneNode> > SharedSceneNodeList;
 	typedef Vector<SharedPtr<model::MovableUpdateController> > SharedMUCList;
-	typedef Vector<physics::ICollisionGeometry*> CollisionGeomList;
 
 	void createDebugGeometryForComplexPhysical(
 				const physics::IActor* pComplex,
@@ -84,57 +83,57 @@
 				const String & overrideMesh = "",
 				real overrideMeshScaleFactor = 1. )
 	{
-		YAKE_ASSERT( pComplex );
-		YAKE_ASSERT( pWorld );
-		const CollisionGeomList geoms = pComplex->getCollisionGeometryVector();
-		if (geoms.size() == 0)
-			return;
-		ConstVectorIterator< const CollisionGeomList > it( geoms.begin(), geoms.end() );
-		while (it.hasMoreElements())
-		{
-			physics::ICollisionGeometry* pGeom = it.getNext();
-			YAKE_ASSERT( pGeom );
+		//YAKE_ASSERT( pComplex );
+		//YAKE_ASSERT( pWorld );
+		//const physics::IShapePtrList geoms = pComplex->getShapes();
+		//if (geoms.size() == 0)
+		//	return;
+		//ConstVectorIterator< physics::IShapePtrList > it( geoms.begin(), geoms.end() );
+		//while (it.hasMoreElements())
+		//{
+		//	physics::IShape* pGeom = it.getNext();
+		//	YAKE_ASSERT( pGeom );
 
-			graphics::ISceneNode* pSN = pWorld->createSceneNode();
-			YAKE_ASSERT( pSN );
-			graphics::IEntity* pE = 0;
+		//	graphics::ISceneNode* pSN = pWorld->createSceneNode();
+		//	YAKE_ASSERT( pSN );
+		//	graphics::IEntity* pE = 0;
 
-			switch (pGeom->getType())
-			{
-			case physics::ICollisionGeometry::CGT_BOX:
-				{
-				pE = pWorld->createEntity( (overrideMesh == "") ? "box_1x1x1.mesh" : overrideMesh );
-				pE->setCastsShadow( true );
-				Vector3 dim = pGeom->boxGetDimensions();
-				pSN->setScale( dim );
-				}
-				break;
-			case physics::ICollisionGeometry::CGT_SPHERE:
-				{
-				pE = pWorld->createEntity( (overrideMesh == "") ? "sphere_d1.mesh": overrideMesh);
-				pE->setCastsShadow( true  );
-				real scale = overrideMeshScaleFactor * 2 /* x2 because diameter is 1, therefore radius is 0.5 by default*/ * pGeom->sphereGetRadius();
-				if (scale < 0.0001)
-					scale = 1.;
-				pSN->setScale( Vector3(scale,scale,scale) );
-				}
-				break;
-			default:
-				YAKE_ASSERT( 1==0 ).error("unhandled debug geometry.");
-				break;
-			}
+		//	switch (pGeom->getType())
+		//	{
+		//	case physics::ST_BOX:
+		//		{
+		//		pE = pWorld->createEntity( (overrideMesh == "") ? "box_1x1x1.mesh" : overrideMesh );
+		//		pE->setCastsShadow( true );
+		//		Vector3 dim = pGeom->boxGetDimensions();
+		//		pSN->setScale( dim );
+		//		}
+		//		break;
+		//	case physics::ST_SPHERE:
+		//		{
+		//		pE = pWorld->createEntity( (overrideMesh == "") ? "sphere_d1.mesh": overrideMesh);
+		//		pE->setCastsShadow( true  );
+		//		real scale = overrideMeshScaleFactor * 2 /* x2 because diameter is 1, therefore radius is 0.5 by default*/ * pGeom->sphereGetRadius();
+		//		if (scale < 0.0001)
+		//			scale = 1.;
+		//		pSN->setScale( Vector3(scale,scale,scale) );
+		//		}
+		//		break;
+		//	default:
+		//		YAKE_ASSERT( 1==0 ).error("unhandled debug geometry.");
+		//		break;
+		//	}
 
-			YAKE_ASSERT( pE );
-			pSN->attachEntity( pE );
-			nodes.push_back( pSN );
+		//	YAKE_ASSERT( pE );
+		//	pSN->attachEntity( pE );
+		//	nodes.push_back( pSN );
 
-			model::MovableUpdateController* pMUC = new model::MovableUpdateController();
-			YAKE_ASSERT( pMUC );
-			pMUC->setUpdateSource( pGeom );
-			pMUC->subscribeToPositionChanged( pSN );
-			pMUC->subscribeToOrientationChanged( pSN );
-			ctrlrs.push_back( SharedPtr<model::MovableUpdateController>(pMUC) );
-		}
+		//	model::MovableUpdateController* pMUC = new model::MovableUpdateController();
+		//	YAKE_ASSERT( pMUC );
+		//	pMUC->setUpdateSource( pGeom );
+		//	pMUC->subscribeToPositionChanged( pSN );
+		//	pMUC->subscribeToOrientationChanged( pSN );
+		//	ctrlrs.push_back( SharedPtr<model::MovableUpdateController>(pMUC) );
+		//}
 	}
 
 	void createDebugGeometryForComplexPhysical(



From codeandroid at berlios.de  Fri Sep 30 23:37:44 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:37:44 +0200
Subject: [Yake-svn] r961 - trunk/yake/yapp/samples/base/vehicle
Message-ID: <200509302137.j8ULbiCK007889@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:37:44 +0200 (Fri, 30 Sep 2005)
New Revision: 961

Modified:
   trunk/yake/yapp/samples/base/vehicle/yakePCH.h
Log:
refactoring of yake::vehicle

Modified: trunk/yake/yapp/samples/base/vehicle/yakePCH.h
===================================================================
--- trunk/yake/yapp/samples/base/vehicle/yakePCH.h	2005-09-30 21:37:29 UTC (rev 960)
+++ trunk/yake/yapp/samples/base/vehicle/yakePCH.h	2005-09-30 21:37:44 UTC (rev 961)
@@ -5,11 +5,5 @@
 #include <iostream>
 // Yake
 #include <yake/base/yake.h>
-#include <yake/base/yakeDebugOutputStream.h>
-#include <yake/base/yakeLog.h>
-#include <yake/base/yakeLibrary.h>
 #include <yake/scripting/yakeScriptingSystem.h>
-#include <yake/graphics/yakeGraphicsSystem.h>
-
-#include <yake/samples/common/yakeExampleApplication.h>
-#include <yake/data/yakeData.h>
+#include <yapp/base/yapp.h>



From codeandroid at berlios.de  Fri Sep 30 23:39:04 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:39:04 +0200
Subject: [Yake-svn] r962 - trunk/yake/yake/base/templates
Message-ID: <200509302139.j8ULd4iO007972@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:39:03 +0200 (Fri, 30 Sep 2005)
New Revision: 962

Modified:
   trunk/yake/yake/base/templates/yakeDeque.h
Log:
added reset()

Modified: trunk/yake/yake/base/templates/yakeDeque.h
===================================================================
--- trunk/yake/yake/base/templates/yakeDeque.h	2005-09-30 21:37:44 UTC (rev 961)
+++ trunk/yake/yake/base/templates/yakeDeque.h	2005-09-30 21:39:03 UTC (rev 962)
@@ -248,10 +248,15 @@
 			mCurrent( start ), mEnd( end )
 		{
 		}
-		ConstDequeIterator(T& container) :
+		ConstDequeIterator(const T& container) :
 			mCurrent( container.begin() ), mEnd( container.end() )
 		{
 		}
+		void reset(const T& container)
+		{
+			mCurrent = container.begin();
+			mEnd = container.end();
+		}
 		bool hasMoreElements()
 		{
 			return mCurrent != mEnd;



From codeandroid at berlios.de  Fri Sep 30 23:39:54 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:39:54 +0200
Subject: [Yake-svn] r963 - trunk/yake/yake/graphics
Message-ID: <200509302139.j8ULdsSZ008106@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:39:53 +0200 (Fri, 30 Sep 2005)
New Revision: 963

Modified:
   trunk/yake/yake/graphics/yakeGraphicalWorld.h
Log:
added skybox support,
improved particle system interfaces

Modified: trunk/yake/yake/graphics/yakeGraphicalWorld.h
===================================================================
--- trunk/yake/yake/graphics/yakeGraphicalWorld.h	2005-09-30 21:39:03 UTC (rev 962)
+++ trunk/yake/yake/graphics/yakeGraphicalWorld.h	2005-09-30 21:39:53 UTC (rev 963)
@@ -51,6 +51,13 @@
 	public:
 		virtual ~IParticleSystem();
 		virtual void setVisible( bool visible ) = 0;
+		virtual size_t getNumEmitters() const = 0;
+		virtual void setEmissionRate( const size_t emitter, const real particlesPerSec ) = 0;
+		virtual real getEmissionRate( const size_t emitter ) const = 0;
+		virtual void setMinVelocity( const size_t emitter, const real vel ) = 0;
+		virtual real getMinVelocity( const size_t emitter ) const = 0;
+		virtual void setMaxVelocity( const size_t emitter, const real vel ) = 0;
+		virtual real getMaxVelocity( const size_t emitter ) const = 0;
 	};
 
 	class IEntity;
@@ -404,6 +411,8 @@
 	public:
 		virtual ~IWorld();
 
+		virtual void setSkyBox( const String& name ) = 0;
+
 		virtual ILight* createLight() = 0;
 		virtual ICamera* createCamera() = 0;
 
@@ -442,6 +451,13 @@
 		YAKE_MEMBERSIGNAL_PUREINTERFACE( public, void(real), PostRender );
 	};
 
+	class YAKE_GRAPHICS_INTERFACE_API IFx
+	{
+		YAKE_DECLARE_REGISTRY_01(IFx, String, IWorld&);
+	public:
+		virtual ~IFx() {}
+	};
+
 } // graphics
 } // yake
 



From codeandroid at berlios.de  Fri Sep 30 23:40:38 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:40:38 +0200
Subject: [Yake-svn] r964 - trunk/yake/src/yake/plugins/graphicsOgre
Message-ID: <200509302140.j8ULecq1008178@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:40:37 +0200 (Fri, 30 Sep 2005)
New Revision: 964

Modified:
   trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp
   trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp
Log:
added skybox, improved particle system interfaces

Modified: trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp	2005-09-30 21:39:53 UTC (rev 963)
+++ trunk/yake/src/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.cpp	2005-09-30 21:40:37 UTC (rev 964)
@@ -42,14 +42,83 @@
 	//------------------------------------------------------
 	OgreParticleSystem::~OgreParticleSystem()
 	{
+		YAKE_ASSERT( mParticleSys );
 		mParticleSysMgr.destroySystem( mParticleSys->getName() );
 	}
 
 	//------------------------------------------------------
 	void OgreParticleSystem::setVisible( bool visible )
 	{
+		YAKE_ASSERT( mParticleSys );
 		mParticleSys->setVisible( visible );
 	}
-	
+
+	//------------------------------------------------------
+	size_t OgreParticleSystem::getNumEmitters() const
+	{
+		YAKE_ASSERT( mParticleSys );
+		return mParticleSys->getNumEmitters();
+	}
+
+	//------------------------------------------------------
+	void OgreParticleSystem::setEmissionRate( const size_t emitter, const real particlesPerSec )
+	{
+		YAKE_ASSERT( mParticleSys );
+		YAKE_ASSERT( mParticleSys->getNumEmitters() > emitter );
+		Ogre::ParticleEmitter* pEmitter = mParticleSys->getEmitter(emitter);
+		YAKE_ASSERT( pEmitter );
+		pEmitter->setEmissionRate( particlesPerSec );
+	}
+
+	//------------------------------------------------------
+	real OgreParticleSystem::getEmissionRate( const size_t emitter ) const
+	{
+		YAKE_ASSERT( mParticleSys );
+		YAKE_ASSERT( mParticleSys->getNumEmitters() > emitter );
+		Ogre::ParticleEmitter* pEmitter = mParticleSys->getEmitter(emitter);
+		YAKE_ASSERT( pEmitter );
+		return pEmitter->getEmissionRate();
+	}
+
+	//------------------------------------------------------
+	void OgreParticleSystem::setMinVelocity( const size_t emitter, const real vel )
+	{
+		YAKE_ASSERT( mParticleSys );
+		YAKE_ASSERT( mParticleSys->getNumEmitters() > emitter );
+		Ogre::ParticleEmitter* pEmitter = mParticleSys->getEmitter(emitter);
+		YAKE_ASSERT( pEmitter );
+		pEmitter->setMinParticleVelocity( vel );
+	}
+
+	//------------------------------------------------------
+	real OgreParticleSystem::getMinVelocity( const size_t emitter ) const
+	{
+		YAKE_ASSERT( mParticleSys );
+		YAKE_ASSERT( mParticleSys->getNumEmitters() > emitter );
+		Ogre::ParticleEmitter* pEmitter = mParticleSys->getEmitter(emitter);
+		YAKE_ASSERT( pEmitter );
+		return pEmitter->getMinParticleVelocity();
+	}
+
+	//------------------------------------------------------
+	void OgreParticleSystem::setMaxVelocity( const size_t emitter, const real vel )
+	{
+		YAKE_ASSERT( mParticleSys );
+		YAKE_ASSERT( mParticleSys->getNumEmitters() > emitter );
+		Ogre::ParticleEmitter* pEmitter = mParticleSys->getEmitter(emitter);
+		YAKE_ASSERT( pEmitter );
+		return pEmitter->setMaxParticleVelocity(vel);
+	}
+
+	//------------------------------------------------------
+	real OgreParticleSystem::getMaxVelocity( const size_t emitter ) const
+	{
+		YAKE_ASSERT( mParticleSys );
+		YAKE_ASSERT( mParticleSys->getNumEmitters() > emitter );
+		Ogre::ParticleEmitter* pEmitter = mParticleSys->getEmitter(emitter);
+		YAKE_ASSERT( pEmitter );
+		return pEmitter->getMaxParticleVelocity();
+	}
+
 } // graphics
 } // yake

Modified: trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp
===================================================================
--- trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp	2005-09-30 21:39:53 UTC (rev 963)
+++ trunk/yake/src/yake/plugins/graphicsOgre/yakeGraphicsWorld.cpp	2005-09-30 21:40:37 UTC (rev 964)
@@ -89,6 +89,13 @@
 	}
 
 	//-----------------------------------------------------
+	void GraphicalWorld::setSkyBox( const String& name )
+	{
+		YAKE_ASSERT( msCore ).debug("need a core!");
+		msCore->getSceneMgr()->setSkyBox( true, name );
+	}
+
+	//-----------------------------------------------------
 	IEntity* GraphicalWorld::createEntity( const String& mesh )
 	{
 		YAKE_ASSERT( msCore ).debug("need a core!");



From codeandroid at berlios.de  Fri Sep 30 23:41:09 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:41:09 +0200
Subject: [Yake-svn] r965 - trunk/yake/src/yake/plugins/physicsNX
Message-ID: <200509302141.j8ULf934008276@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:41:09 +0200 (Fri, 30 Sep 2005)
New Revision: 965

Modified:
   trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
Log:
added getCreator(),
fixed destroyShape()

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-09-30 21:40:37 UTC (rev 964)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeActorNx.cpp	2005-09-30 21:41:09 UTC (rev 965)
@@ -105,6 +105,10 @@
 		mpNxActor = 0;
 		mpNxDefaultShape = 0;
 	}
+	IWorld* ActorNx::getCreator() const
+	{
+		return &mWorld;
+	}
 	void ActorNx::setEnabled(const bool enabled)
 	{
 		YAKE_ASSERT( 0 && "NOT IMPLEMENTED!" );
@@ -124,7 +128,9 @@
 	}
 	void ActorNx::destroyShape( IShape* pShape )
 	{
-		YAKE_ASSERT( 1==0 );
+		YAKE_ASSERT( pShape );
+		if (pShape)
+			delete pShape;
 	}
 	void ActorNx::onLastShapeIsAboutToDestroy()
 	{



From codeandroid at berlios.de  Fri Sep 30 23:41:55 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:41:55 +0200
Subject: [Yake-svn] r966 - trunk/yake/src/yake/plugins/physicsNX
Message-ID: <200509302141.j8ULftWY008402@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:41:54 +0200 (Fri, 30 Sep 2005)
New Revision: 966

Modified:
   trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp
Log:
added spring and damping

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp	2005-09-30 21:41:09 UTC (rev 965)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeJointNx.cpp	2005-09-30 21:41:54 UTC (rev 966)
@@ -217,6 +217,20 @@
 		YAKE_ASSERT( mpActors[ index ] );
 		return *mpActors[ index ];
 	}
+	void JointNx::setSpring(real)
+	{
+	}
+	real JointNx::getSpring() const
+	{
+		return 0.;
+	}
+	void JointNx::setDamping(real)
+	{
+	}
+	real JointNx::getDamping() const
+	{
+		return 1.;
+	}
 
 }
 }
\ No newline at end of file



From codeandroid at berlios.de  Fri Sep 30 23:42:10 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:42:10 +0200
Subject: [Yake-svn] r967 - trunk/yake/src/yake/plugins/physicsNX
Message-ID: <200509302142.j8ULgAAj008444@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:42:10 +0200 (Fri, 30 Sep 2005)
New Revision: 967

Modified:
   trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp
Log:
QA

Modified: trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp	2005-09-30 21:41:54 UTC (rev 966)
+++ trunk/yake/src/yake/plugins/physicsNX/yakeWorldNx.cpp	2005-09-30 21:42:10 UTC (rev 967)
@@ -330,7 +330,7 @@
 		if (!mpScene)
 			return 0;
 
-		std::cout << "NX: new static actor\n";
+		std::cout << "NX: new actor\n";
 		return _createActor(rActorDesc);
 	}
 	IAvatarPtr WorldNx::createAvatar( const IAvatar::Desc & rkAvatarDesc )



From codeandroid at berlios.de  Fri Sep 30 23:42:45 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:42:45 +0200
Subject: [Yake-svn] r968 - trunk/yake/src/yake/plugins/physicsODE
Message-ID: <200509302142.j8ULgjdM008515@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:42:44 +0200 (Fri, 30 Sep 2005)
New Revision: 968

Modified:
   trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
Log:
added getCreator()

Modified: trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp
===================================================================
--- trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-09-30 21:42:10 UTC (rev 967)
+++ trunk/yake/src/yake/plugins/physicsODE/OdeActor.cpp	2005-09-30 21:42:44 UTC (rev 968)
@@ -64,6 +64,12 @@
 	}
 
 	//-----------------------------------------------------
+	IWorld* OdeActor::getCreator() const
+	{
+		return mOdeWorld;
+	}
+
+	//-----------------------------------------------------
 	void OdeActor::setEnabled(const bool enabled)
 	{
 		YAKE_ASSERT( 0 && "NOT IMPLEMENTED" );



From codeandroid at berlios.de  Fri Sep 30 23:43:16 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:43:16 +0200
Subject: [Yake-svn] r969 - trunk/yake/src/yake/input
Message-ID: <200509302143.j8ULhGop008550@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:43:16 +0200 (Fri, 30 Sep 2005)
New Revision: 969

Modified:
   trunk/yake/src/yake/input/yakeActionMap.cpp
Log:
new ids,
operator < for ActionId

Modified: trunk/yake/src/yake/input/yakeActionMap.cpp
===================================================================
--- trunk/yake/src/yake/input/yakeActionMap.cpp	2005-09-30 21:42:44 UTC (rev 968)
+++ trunk/yake/src/yake/input/yakeActionMap.cpp	2005-09-30 21:43:16 UTC (rev 969)
@@ -35,6 +35,9 @@
 	const ActionId ACTIONID_FORWARD(1, "forward");
 	const ActionId ACTIONID_REVERSE(2, "reverse");
 	const ActionId ACTIONID_STRAFE_LEFT(3, "strafe_left");
+	const ActionId ACTIONID_STRAFE_RIGHT(4, "strafe_right");
+	const ActionId ACTIONID_UP(5, "up");
+	const ActionId ACTIONID_DOWN(6, "down");
 
 	const ActionId ACTIONID_USER(10000, "user");
 



From codeandroid at berlios.de  Fri Sep 30 23:43:37 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:43:37 +0200
Subject: [Yake-svn] r970 - trunk/yake/yake/input
Message-ID: <200509302143.j8ULhbmZ008624@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:43:36 +0200 (Fri, 30 Sep 2005)
New Revision: 970

Modified:
   trunk/yake/yake/input/yakeActionMap.h
Log:
new ids,
operator < for ActionId

Modified: trunk/yake/yake/input/yakeActionMap.h
===================================================================
--- trunk/yake/yake/input/yakeActionMap.h	2005-09-30 21:43:16 UTC (rev 969)
+++ trunk/yake/yake/input/yakeActionMap.h	2005-09-30 21:43:36 UTC (rev 970)
@@ -74,6 +74,10 @@
 	{
 		return lhs.id() + rhs;
 	}
+	inline bool operator < (const ActionId & lhs, const ActionId& rhs)
+	{
+		return lhs.id() < rhs.id();
+	}
 
 	class YAKE_INPUT_API ActionIdRegistry
 	{
@@ -89,6 +93,13 @@
 	extern YAKE_INPUT_API const ActionId ACTIONID_FORWARD;
 	extern YAKE_INPUT_API const ActionId ACTIONID_REVERSE;
 	extern YAKE_INPUT_API const ActionId ACTIONID_STRAFE_LEFT;
+	extern YAKE_INPUT_API const ActionId ACTIONID_STRAFE_RIGHT;
+	extern YAKE_INPUT_API const ActionId ACTIONID_ROTATE_LEFT;
+	extern YAKE_INPUT_API const ActionId ACTIONID_ROTATE_RIGHT;
+	extern YAKE_INPUT_API const ActionId ACTIONID_UP;
+	extern YAKE_INPUT_API const ActionId ACTIONID_DOWN;
+	extern YAKE_INPUT_API const ActionId ACTIONID_PITCH_UP;
+	extern YAKE_INPUT_API const ActionId ACTIONID_PITCH_DOWN;
 	extern YAKE_INPUT_API const ActionId ACTIONID_USER;
 	// example for a user defined action id:
 	//const ActionId ACTIONID_USER_CheerWildly( ACTIONID_USER+1, "cheerwildly" );



From codeandroid at berlios.de  Fri Sep 30 23:43:48 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:43:48 +0200
Subject: [Yake-svn] r971 - trunk/yake/yake/physics
Message-ID: <200509302143.j8ULhm2j008677@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:43:48 +0200 (Fri, 30 Sep 2005)
New Revision: 971

Modified:
   trunk/yake/yake/physics/yakePhysicsActor.h
Log:
added getCreator()

Modified: trunk/yake/yake/physics/yakePhysicsActor.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsActor.h	2005-09-30 21:43:36 UTC (rev 970)
+++ trunk/yake/yake/physics/yakePhysicsActor.h	2005-09-30 21:43:48 UTC (rev 971)
@@ -61,6 +61,7 @@
 		ACTOR_MOVABLE,
 		ACTOR_DYNAMIC
 	};
+	class IWorld;
 	class IActor : public Movable, public ListenerManager<IActorListener>
 	{
 	public:
@@ -75,6 +76,8 @@
 	public:
 		virtual ~IActor() {}
 
+		virtual IWorld* getCreator() const = 0;
+
 		virtual IShape* createShape( const IShape::Desc& rShapeDesc ) = 0;
 		virtual void destroyShape( IShape* pShape ) = 0;
 		virtual IShapePtrList getShapes() const = 0;



From codeandroid at berlios.de  Fri Sep 30 23:44:03 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:44:03 +0200
Subject: [Yake-svn] r972 - trunk/yake/yake/physics
Message-ID: <200509302144.j8ULi3Nu008715@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:44:02 +0200 (Fri, 30 Sep 2005)
New Revision: 972

Modified:
   trunk/yake/yake/physics/yakePhysicsJoint.h
Log:
added spring and damping

Modified: trunk/yake/yake/physics/yakePhysicsJoint.h
===================================================================
--- trunk/yake/yake/physics/yakePhysicsJoint.h	2005-09-30 21:43:48 UTC (rev 971)
+++ trunk/yake/yake/physics/yakePhysicsJoint.h	2005-09-30 21:44:02 UTC (rev 972)
@@ -205,6 +205,10 @@
 		//virtual void addTorque(const size_t axisIndex, const real torque, const real duration = real(-1)) = 0;
 		///setLow/HiStop
 		//setSpring/Damper
+		virtual void setSpring(real) = 0;
+		virtual real getSpring() const = 0;
+		virtual void setDamping(real) = 0;
+		virtual real getDamping() const = 0;
 	};
 	YAKE_PHYSICS_COMMON_POINTERS( IJoint );
 



From codeandroid at berlios.de  Fri Sep 30 23:44:26 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:44:26 +0200
Subject: [Yake-svn] r973 - in trunk/yake/yake/plugins: graphicsOgre physicsNX physicsODE
Message-ID: <200509302144.j8ULiQQO008759@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:44:25 +0200 (Fri, 30 Sep 2005)
New Revision: 973

Modified:
   trunk/yake/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.h
   trunk/yake/yake/plugins/graphicsOgre/yakeGraphicsWorld.h
   trunk/yake/yake/plugins/physicsNX/yakeActorNx.h
   trunk/yake/yake/plugins/physicsNX/yakeJointNx.h
   trunk/yake/yake/plugins/physicsODE/OdeActor.h
Log:
API enhancements

Modified: trunk/yake/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.h
===================================================================
--- trunk/yake/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.h	2005-09-30 21:44:02 UTC (rev 972)
+++ trunk/yake/yake/plugins/graphicsOgre/graphicsOgreParticleSystem.h	2005-09-30 21:44:25 UTC (rev 973)
@@ -37,6 +37,13 @@
 		virtual ~OgreParticleSystem();
 
 		virtual void setVisible( bool visible );
+		virtual size_t getNumEmitters() const;
+		virtual void setEmissionRate( const size_t emitter, const real particlesPerSec );
+		virtual real getEmissionRate( const size_t emitter ) const;
+		virtual void setMinVelocity( const size_t emitter, const real vel );
+		virtual real getMinVelocity( const size_t emitter ) const;
+		virtual void setMaxVelocity( const size_t emitter, const real vel );
+		virtual real getMaxVelocity( const size_t emitter ) const;
 
 		Ogre::ParticleSystem* getParticleSystem_() const
 		{

Modified: trunk/yake/yake/plugins/graphicsOgre/yakeGraphicsWorld.h
===================================================================
--- trunk/yake/yake/plugins/graphicsOgre/yakeGraphicsWorld.h	2005-09-30 21:44:02 UTC (rev 972)
+++ trunk/yake/yake/plugins/graphicsOgre/yakeGraphicsWorld.h	2005-09-30 21:44:25 UTC (rev 973)
@@ -61,6 +61,8 @@
 		/** Render a single frame. */
 		void render( real timeElapsed );
 
+		virtual void setSkyBox( const String& name );
+
 		virtual ISceneNode* createSceneNode( const String& tag = "" );
 		virtual IEntity* createEntity(const String & mesh);
 		virtual ILight* createLight();

Modified: trunk/yake/yake/plugins/physicsNX/yakeActorNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeActorNx.h	2005-09-30 21:44:02 UTC (rev 972)
+++ trunk/yake/yake/plugins/physicsNX/yakeActorNx.h	2005-09-30 21:44:25 UTC (rev 973)
@@ -42,6 +42,8 @@
 		ActorNx( NxScene & rScene, WorldNx& rWorld, bool bDynamic );
 		virtual ~ActorNx();
 
+		virtual IWorld* getCreator() const;
+
 		virtual IShape* createShape( const IShape::Desc & rkShapeDesc );
 		virtual void destroyShape( IShape* pShape );
 		virtual IShapePtrList getShapes() const;

Modified: trunk/yake/yake/plugins/physicsNX/yakeJointNx.h
===================================================================
--- trunk/yake/yake/plugins/physicsNX/yakeJointNx.h	2005-09-30 21:44:02 UTC (rev 972)
+++ trunk/yake/yake/plugins/physicsNX/yakeJointNx.h	2005-09-30 21:44:25 UTC (rev 973)
@@ -57,6 +57,10 @@
 		//virtual void addForce(const size_t axisIndex, const real force, const real duration = real(-1));
 		//virtual void addTorque(const size_t axisIndex, const real torque, const real duration = real(-1));
 		//
+		virtual void setSpring(real);
+		virtual real getSpring() const;
+		virtual void setDamping(real);
+		virtual real getDamping() const;
 		static JointNx* createFromDesc_( NxScene & rScene, const IJoint::DescBase & rkJointDesc );
 		static const Deque<JointType>& getSupportedTypes_();
 		static const AssocVector<NxJointType, JointType>& getNxJointMap();

Modified: trunk/yake/yake/plugins/physicsODE/OdeActor.h
===================================================================
--- trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-09-30 21:44:02 UTC (rev 972)
+++ trunk/yake/yake/plugins/physicsODE/OdeActor.h	2005-09-30 21:44:25 UTC (rev 973)
@@ -17,6 +17,8 @@
 		IBody& getBody() const;
 		IBody* getBodyPtr() const;
 
+		virtual IWorld* getCreator() const;
+
 		virtual void setPosition( const Vector3& rPosition );
 		virtual void setOrientation( const Quaternion& rOrientation );
 		virtual Vector3 getPosition() const;



From codeandroid at berlios.de  Fri Sep 30 23:45:28 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:45:28 +0200
Subject: [Yake-svn] r974 - trunk/yake/scripts/yapp
Message-ID: <200509302145.j8ULjSEN008856@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:45:28 +0200 (Fri, 30 Sep 2005)
New Revision: 974

Modified:
   trunk/yake/scripts/yapp/yapp.suo
Log:


Modified: trunk/yake/scripts/yapp/yapp.suo
===================================================================
(Binary files differ)



From codeandroid at berlios.de  Fri Sep 30 23:46:02 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:46:02 +0200
Subject: [Yake-svn] r975 - trunk/yake/scripts/yapp
Message-ID: <200509302146.j8ULk2h6008945@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:46:02 +0200 (Fri, 30 Sep 2005)
New Revision: 975

Modified:
   trunk/yake/scripts/yapp/yapp.sln
Log:
refactoring of yake::vehicle

Modified: trunk/yake/scripts/yapp/yapp.sln
===================================================================
--- trunk/yake/scripts/yapp/yapp.sln	2005-09-30 21:45:28 UTC (rev 974)
+++ trunk/yake/scripts/yapp/yapp.sln	2005-09-30 21:46:02 UTC (rev 975)
@@ -92,6 +92,10 @@
 	ProjectSection(ProjectDependencies) = postProject
 	EndProjectSection
 EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "vehicle", "vehicle.vcproj", "{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}"
+	ProjectSection(ProjectDependencies) = postProject
+	EndProjectSection
+EndProject
 Global
 	GlobalSection(SolutionConfiguration) = preSolution
 		Debug = Debug
@@ -182,6 +186,10 @@
 		{A2E804D9-C95C-47EB-87AB-FAA8A6CAC21B}.Debug.Build.0 = Debug|Win32
 		{A2E804D9-C95C-47EB-87AB-FAA8A6CAC21B}.Release.ActiveCfg = Release|Win32
 		{A2E804D9-C95C-47EB-87AB-FAA8A6CAC21B}.Release.Build.0 = Release|Win32
+		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Debug.ActiveCfg = Debug|Win32
+		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Debug.Build.0 = Debug|Win32
+		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Release.ActiveCfg = Release|Win32
+		{EAEC3A1F-2888-4EAC-869D-BFA70FD56A65}.Release.Build.0 = Release|Win32
 	EndGlobalSection
 	GlobalSection(ExtensibilityGlobals) = postSolution
 	EndGlobalSection



From codeandroid at berlios.de  Fri Sep 30 23:46:29 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:46:29 +0200
Subject: [Yake-svn] r976 - trunk/yake/scripts/yapp
Message-ID: <200509302146.j8ULkTeA009016@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:46:29 +0200 (Fri, 30 Sep 2005)
New Revision: 976

Modified:
   trunk/yake/scripts/yapp/yapp.vcproj
Log:
refactoring of yake::vehicle

Modified: trunk/yake/scripts/yapp/yapp.vcproj
===================================================================
--- trunk/yake/scripts/yapp/yapp.vcproj	2005-09-30 21:46:02 UTC (rev 975)
+++ trunk/yake/scripts/yapp/yapp.vcproj	2005-09-30 21:46:29 UTC (rev 976)
@@ -495,146 +495,12 @@
 			</File>
 		</Filter>
 		<Filter
-			Name="vehicle"
-			Filter="">
-			<File
-				RelativePath="..\..\yapp\model\yakeEngine.h">
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeVehicle.cpp">
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeVehicle.h">
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeVehiclePhysicalComponent.cpp">
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeVehiclePhysicalComponent.h">
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeVehicleTpl.cpp">
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeVehicleTpl.h">
-			</File>
-		</Filter>
-		<Filter
 			Name="trigger"
 			Filter="">
 			<File
 				RelativePath="..\..\yapp\trigger\yakeTrigger.h">
 			</File>
 		</Filter>
-		<Filter
-			Name="vehicleNative"
-			Filter="">
-			<File
-				RelativePath="..\..\src\yapp\model\yakeNativeEngine.cpp">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCLCompilerTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCLCompilerTool"/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeNativeEngine.h">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeNativeVehicleInputComponent.h">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeNativeVehiclePhysicalComponent.cpp">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCLCompilerTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCLCompilerTool"/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeNativeVehiclePhysicalComponent.h">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\..\src\yapp\model\yakeNativeWheel.cpp">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCLCompilerTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCLCompilerTool"/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="..\..\yapp\model\yakeNativeWheel.h">
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="TRUE">
-					<Tool
-						Name="VCCustomBuildTool"/>
-				</FileConfiguration>
-			</File>
-		</Filter>
 	</Files>
 	<Globals>
 	</Globals>



From codeandroid at berlios.de  Fri Sep 30 23:46:54 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:46:54 +0200
Subject: [Yake-svn] r977 - trunk/yake/scripts/yapp/samples/base
Message-ID: <200509302146.j8ULksI3009090@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:46:54 +0200 (Fri, 30 Sep 2005)
New Revision: 977

Modified:
   trunk/yake/scripts/yapp/samples/base/samplesVehicle.vcproj
Log:
refactoring of yake::vehicle

Modified: trunk/yake/scripts/yapp/samples/base/samplesVehicle.vcproj
===================================================================
--- trunk/yake/scripts/yapp/samples/base/samplesVehicle.vcproj	2005-09-30 21:46:29 UTC (rev 976)
+++ trunk/yake/scripts/yapp/samples/base/samplesVehicle.vcproj	2005-09-30 21:46:54 UTC (rev 977)
@@ -34,7 +34,7 @@
 				Name="VCCustomBuildTool"/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib"
+				AdditionalDependencies="base.lib graphics.lib physics.lib audio.lib data.lib input.lib yapp.lib scripting.lib vehicle.lib"
 				OutputFile="$(OutDir)/$(ProjectName).exe"
 				LinkIncremental="2"
 				AdditionalLibraryDirectories="../../../../common/lib/debug"



From codeandroid at berlios.de  Fri Sep 30 23:48:00 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:48:00 +0200
Subject: [Yake-svn] r978 - trunk/yake/src/yapp/samples/base/vehicle
Message-ID: <200509302148.j8ULm05i009173@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:48:00 +0200 (Fri, 30 Sep 2005)
New Revision: 978

Modified:
   trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
   trunk/yake/src/yapp/samples/base/vehicle/yakePCH.cpp
Log:
refactoring of yake::vehicle

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-09-30 21:46:54 UTC (rev 977)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakeDemo.cpp	2005-09-30 21:48:00 UTC (rev 978)
@@ -1,694 +1,253 @@
-//****************************************************************************
-//**
-//**    Sample
-//**
-//**	Simpler than simple sample! Beware!
-//**	It's WIP towards a real sample :)
-//**
-//**	When running, press ESC to exit.
-//**
-//**	You may want to try to use A and D for steering,
-//**	W for accelerating and RETURN and SHIFT to
-//**	shift up / down.
-//**
-//****************************************************************************
-
-//============================================================================
-//    IMPLEMENTATION HEADERS
-//============================================================================
 #include <yapp/samples/base/vehicle/yakePCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeModel.h>
+#include <yake/audio/yakeAudio.h>
+#include <yapp/raf/yakeRaf.h>
 #include <yapp/model/yakeModelMovableLink.h>
-#include <yapp/loader/yakeDotLinkLoader.h>
-#include <yake/samples/data/demo/yakeDotScene.h> // temporarily
-#include <yapp/samples/common/yakeHelper.h>
-#include <yapp/common/yakePawn.h>
-#include <yapp/model/yakeVehicleSystem.h>
+#include <yapp/vehicle/yakeVehicle.h>
+#include <yake/input/yakeInput.h>
 
-#define PROFILER_BEGINFRAME
-#define PROFILER_ENDFRAME
-#define PROFILER_DESTROY
-#define PROFILERMANAGER_DESTROY
-/*
-#include <yake/base/templates/yakeObjectLink.h>
-#include <yake/samples/common/yakeModelLink.h> // temporarily
-#include <yake/samples/common/yakeXODE.h> // temporarily
-#include <yake/samples/graphics/Profiler.h>
-*/
-#pragma warning( disable: 4305 ) // truncation from 'double' to 'float'
+// temporary stuff (until factory registration issues have been sorted out):
+#include <yapp/vehicle/yakeNativeOde.h>
 
 using namespace yake;
-using namespace yake::base::templates;
-using namespace yake::base::math;
-using namespace yake::graphics;
-using namespace yake::data;
 
-using namespace yapp;
-using namespace yake::app;
+/** Configuration of the application */
+struct TheConfiguration : public raf::ApplicationConfiguration
+{
+	virtual StringVector getLibraries()
+	{ return MakeStringVector() << "graphicsOgre" << "inputOgre" << "physicsNx"; }
 
-namespace yake {
-	struct LocalHumanInputData
-	{
-		input::InputSystem*				pInputSystem_;
-		input::KeyboardEventGenerator*	pKeyboardEventGenerator_;
-		input::MouseEventGenerator*		pMouseEventGenerator_;
-		const input::KeyboardDevice*			pKeyboard_;
-		LocalHumanInputData(
-			input::InputSystem* pInputSystem,
-			input::KeyboardEventGenerator* pKeyboardEventGenerator,
-			input::MouseEventGenerator* pMouseEventGenerator,
-			const input::KeyboardDevice* pKeyboard ) :
-					pInputSystem_( pInputSystem ),
-					pKeyboardEventGenerator_( pKeyboardEventGenerator ),
-					pMouseEventGenerator_( pMouseEventGenerator ),
-					pKeyboard_( pKeyboard )
-		{
-		}
-		bool isValid() const
-		{
-			return (pInputSystem_ && pKeyboardEventGenerator_ && pMouseEventGenerator_ );
-		}
-	};
-	class GameControl
-	{
-	public:
-		GameControl( const LocalHumanInputData & gatherInputData ) :
-		  mLastTime( native::getTime() ),
-		  mLocalHumanInputData( gatherInputData )
-		{}
-		typedef Signal1<void(const real)> VoidRealSignal;
-		typedef Signal0<void> VoidSignal;
+	//virtual StringVector getScriptingSystems()
+	//{ return MakeStringVector() << "lua"; }
 
-		typedef VoidSignal SenseSignal;
-		void subscribeToSense(const SenseSignal::slot_type & slot)
-		{ mSense.connect( slot ); }
+	virtual StringVector getGraphicsSystems()
+	{ return MakeStringVector() << "ogre3d"; }
 
-		typedef VoidSignal ThinkSignal;
-		void subscribeToThink(const ThinkSignal::slot_type & slot)
-		{ mThink.connect( slot ); }
+	virtual StringVector getInputSystems()
+	{ return MakeStringVector() << "ogre"; }
 
-		typedef VoidSignal ActStepSignal;
-		void subscribeToActStep(const ActStepSignal::slot_type & slot)
-		{ mActStep.connect( slot ); }
+	virtual StringVector getPhysicsSystems()
+	{ return MakeStringVector() << "nx"; }
+};
 
-		typedef VoidRealSignal PhysicsStepSignal;
-		void subscribeToPhysicsStep(const PhysicsStepSignal::slot_type & slot)
-		{ mPhysicsStep.connect( slot ); }
-
-		typedef VoidRealSignal PostPhysicsStepSignal;
-		void subscribeToPostPhysicsStep(const PostPhysicsStepSignal::slot_type & slot)
-		{ mPostPhysicsStep.connect( slot ); }
-
-		typedef VoidRealSignal RenderStepSignal;
-		void subscribeToRenderStep(const RenderStepSignal::slot_type & slot)
-		{ mRenderStep.connect( slot ); }
-
-		void update()
-		{
-			//sense
-			mSense();
-			//think about it, make decisions
-			mThink();
-			//act depending on decisions
-			mActStep();
-
-			//timing
-			static bool firstFrame = true;
-			real currentTime = native::getTime();
-			real timeElapsed = currentTime - mLastTime;
-			if (firstFrame)
-			{
-				firstFrame = false;
-				timeElapsed = 0.0;
-			}
-
-			//update physics
-			mPhysicsStep( timeElapsed );
-			//update graphics/audio/... from physics
-			mPostPhysicsStep( timeElapsed );
-			//render
-			mRenderStep( timeElapsed ),
-
-			// prepare for next frame
-			mLastTime = currentTime;
-		}
-		const LocalHumanInputData& getLocalHumanInputData() const
-		{ return mLocalHumanInputData; }
-	private:
-		LocalHumanInputData		mLocalHumanInputData;
-		real					mLastTime;
-		SenseSignal				mSense;
-		ThinkSignal				mThink;
-		ActStepSignal			mActStep;
-		PhysicsStepSignal		mPhysicsStep;
-		PostPhysicsStepSignal	mPostPhysicsStep;
-		RenderStepSignal		mRenderStep;
-	private:
-		task::TaskManager		mTaskMgr;
-	};
-	class PawnVisual : public model::VisualComponent
-	{
-	public:
-		void attachModel( model::complex::Model* pComplex )
-		{
-			YAKE_ASSERT( pComplex );
-			mComplex = pComplex;
-		}
-	private:
-		model::complex::Model*	mComplex;
-	};
-	class PawnLocalHumanInput : public model::InputComponent
-	{
-	public:
-		PawnLocalHumanInput( GameControl& gameCtrl ) : mpGameCtrl(&gameCtrl), mPull(false)
-		{
-		}
-		void update()
-		{
-			YAKE_ASSERT( mpGameCtrl );
-			YAKE_ASSERT( mpGameCtrl->getLocalHumanInputData().isValid() );
-			if (mpGameCtrl->getLocalHumanInputData().pKeyboard_->isKeyDown( input::KC_UP ))
-				mPull = true;
-			else
-				mPull = false;
-		}
-		bool isPulling() const
-		{ return mPull; }
-	private:
-		GameControl*	mpGameCtrl;
-		bool			mPull;
-	};
-	class PawnControl : public model::ActorControl
-	{
-	public:
-		PawnControl( PawnLocalHumanInput* pLHI ) : mLHI(pLHI)
-		{
-		}
-		void setControlledMovable( physics::IActor* pMovable )
-		{
-			mMovable = pMovable;
-		}
-		void update()
-		{
-			YAKE_ASSERT( mMovable );
-			if (!mLHI)
-				return;
-			if (mLHI->isPulling())
-			{
-				mMovable->getBody()->addForce( Vector3(0,20,0) );
-			}
-		}
-	private:
-		physics::IActor*		mMovable;
-		PawnLocalHumanInput*	mLHI;
-	};
-}
-
-class TheApp : public yake::exapp::ExampleApplication
+/** Main application state */
+class TheMainState : public raf::RtMainState
 {
-//private:
 public:
-	task::TaskManager					mTaskMgr;
-	//@{ tasks
-	// task: render
-	class RenderTask : public task::DefTask
+	TheMainState(raf::Application& owner) :
+		raf::RtMainState(owner),
+		mVehicle(0),
+		mComplex(0)
+	{}
+	~TheMainState()
 	{
-	private:
-		IWorld*	mWorld;
-	public:
-		RenderTask( IWorld* pWorld );
-		virtual void execute(real timeElapsed);
-	};
-	RenderTask*							mRenderTask;
-
-	// task: physics
-	class PhysicsTask : public task::DefTask
-	{
-	private:
-		physics::IWorld*	mWorld;
-	public:
-		PhysicsTask( physics::IWorld* pWorld );
-		virtual void execute(real timeElapsed);
-	};
-	PhysicsTask*						mPhysicsTask;
-
-	// task: input
-	class InputTask : public task::DefTask
-	{
-	private:
-		TheApp*	mApp;
-		//::yake::app::model::complex::vehicle::LandVehicle*	mCar;
-	public:
-		InputTask( 	TheApp* theApp/*, model::complex::vehicle::LandVehicle* theCar*/ );
-		virtual void execute(real timeElapsed);
-	};
-	InputTask*							mInputTask;
-	//@}
-
-	//@{ name worlds
-	SharedPtr< IWorld >			mGWorld;
-	physics::IWorld*						mPWorld;
-	audio::IWorld*							mpAWorld;
-	//@}
-
-	Vector<std::pair<IViewport*,ICamera*> >	mVPs; /// Viewport / Camera pairs
-
-	//@{ audio related
-	audio::IListener*					mpAListener;
-	audio::ISource*						mpASource;
-	audio::ISoundData*					mpAData;
-	//@}
-
-	//@{ testing stuff
-	graphics::ISceneNode*				mLightOneNode;
-	graphics::IParticleSystem*			mSmoke;
-
-	struct SimpleOne {
-		graphics::ISceneNode*			pSN;
-		graphics::IEntity*				pE;
-		physics::IActor*		pCO;
-		model::MovableUpdateController	updCtrl;
-	};
-	SimpleOne								mGround;
-	//@}
-	//@{ name controllable entities
-	model::Pawn*							mPawn1;
-	model::vehicle::Vehicle*				mVehicle1;
-	//@}
-public:
-	TheApp() : ExampleApplication( true /*graphics*/,
-									true /*physics*/,
-									false /*scripting*/,
-									true /*input*/,
-									false /*script bindings*/,
-									false /*audio*/),
-				mLightOneNode(0),
-				mRenderTask(0),
-				mPhysicsTask(0),
-				mInputTask(0),
-				mPawn1(0),
-				mVehicle1(0)
-	{
 	}
-	void onKey(const yake::input::KeyboardEvent & e)
+private:
+	void _createThrusterVisual(size_t mtPtIdx, graphics::ISceneNode& parentSN)
 	{
-		if (e.keyCode == input::KC_ESCAPE)
-			requestShutdown();
+		graphics::ISceneNode* pSN = parentSN.createChildNode();
+		graphics::IParticleSystem* pPS = getGraphicalWorld()->createParticleSystem("thruster1");
+		pSN->attachParticleSystem( pPS );
+		mComplex->addLink( mVehicle->getMountPoint(mtPtIdx), pSN );
+		_regThrusterPs( mtPtIdx, *pPS );
 	}
-	void onMB(uint8 btn)
+protected:
+	virtual void onCreateScene()
 	{
-	}
-	int createCameraViewportPair( real sx, real sy, real w, real h, int z )
-	{
-		ICamera* pC = mGWorld->createCamera();
-		YAKE_ASSERT( pC );
-		pC->setNearClipDistance( 1. );
+		YAKE_LOG_INFORMATION("Creating scene");
 
-		// used for shadows
-		// incase infinite far distance is not supported
-		//pC->setFarClipDistance( 2000. );
+		// create a light
+		graphics::ILight* pLight = getGraphicalWorld()->createLight();
+		pLight->setType( graphics::ILight::LT_DIRECTIONAL );
+		pLight->setDirection( Vector3(0,-1,1) );
+		getGraphicalWorld()->createSceneNode("lightnode0")->attachLight( pLight );
 
-		mVPs.push_back( std::pair<IViewport*,ICamera*>(mGWorld->createViewport( pC ), pC) );
-		size_t idx = mVPs.size()-1;
-		YAKE_ASSERT( mVPs.back().first );
-		mVPs.back().first->setDimensions( sx, sy, w, h );
-		mVPs.back().first->setZ( z );
-		return static_cast<int>(idx);
-	}
+		// position camera and look at the ninja
+		getDefaultCamera()->setFixedYawAxis(Vector3::kUnitY);
+		getDefaultCamera()->setPosition(Vector3(100,20,-400));
+		getDefaultCamera()->lookAt(Vector3(0,100,0));
 
-	void setupDotScene()
-	{
-		// dotScene test
+		// vehicle
+		SharedPtr<vehicle::IVehicleSystem> pVS = //create<vehicle::IVehicleSystem>("ode");
+			SharedPtr<vehicle::IVehicleSystem>(new vehicle::OdeVehicleSystem());
+		vehicle::VehicleTemplate tpl;
+		tpl.mChassis.mChassisShapes.push_back(
+			new physics::IShape::BoxDesc(Vector3(1,1,2)) );
+		// mount point 0 for right thruster
+		tpl.mMountPoints.push_back(
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(80,0,0), Vector3(1,0,0) ) );
+		// mount point 1 for left thruster
+		tpl.mMountPoints.push_back(
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(-80,0,0), Vector3(-1,0,0) ) );
+		// mount point 2 for rear thruster
+		tpl.mMountPoints.push_back(
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,-80), Vector3(0,0,-1) ) );
+		// mount point 3 for front thruster
+		tpl.mMountPoints.push_back(
+			vehicle::VehicleTemplate::MountPointTpl( Vector3(0,0,70), Vector3(0,0,1) ) );
+		// upward mount point - at center of vehicle
+		// thrusters
+		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,0) );
+		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,10.,1) );
+		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,2) );
+		tpl.mEngines.push_back( new vehicle::VehicleTemplate::ThrusterTpl(0.,20.,3) );
+		mVehicle = pVS->create( tpl, *getPhysicalWorld() );
 
-		// 1. read dotscene file into DOM
+		//pV->getChassisPosition();
 
-		dom::xml::XmlSerializer ser;
-		ser.parse("../../media/graphics.scenes/arena0/arena0_export.scene", false);
+		// create container (e.g. for graphical objects and links)
+		mComplex = new model::complex::Model();
+		model::Graphical* pG = new model::Graphical();
+		mComplex->addGraphical( SharedPtr<model::Graphical>(pG) );
 
-		// 2. parse DOM and create graphical scene
+		// create visuals
+		// - ship body
+		graphics::ISceneNode* pSN = getGraphicalWorld()->createSceneNode("root");
+		pSN->attachEntity( getGraphicalWorld()->createEntity("razor.mesh") );
+		pG->addSceneNode(pSN);
 
-		yake::data::serializer::dotscene::DotSceneSerializerV1 dss;
-		dss.load( ser.getDocumentNode(), mGWorld.get() );
+		// - thruster visuals
+		_createThrusterVisual( 0, *pSN );
+		_createThrusterVisual( 1, *pSN );
+		_createThrusterVisual( 2, *pSN );
+		_createThrusterVisual( 3, *pSN );
 
-		// create a root scene node for newly loaded scene
-		graphics::ISceneNode* pSN = mGWorld->createSceneNode();
-		YAKE_ASSERT( pSN );
+		// create visual <-> physics links
+		mComplex->addLink( mVehicle->getChassisMovable(), pSN );
 
-		// copy free root scene nodes into a parent scene node for newly loaded scene
-		yake::data::serializer::dotscene::SceneNodeList nodes = dss.getRootLevelSceneNodes();
-		for (yake::data::serializer::dotscene::SceneNodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			pSN->addChildNode( *it );
-		}
+		// sky box
+		getGraphicalWorld()->setSkyBox("Examples/SpaceSkyBox");
 	}
-	void setupGround()
+	virtual void onDestroyScene()
 	{
-		// setup GROUND
-
-		// setup physical representation
-		mGround.pCO = mPWorld->createMesh( "../../media/graphics.scenes/arena0/arena0ground.physics" );
-		//mGround.pCO = mPWorld->createPlane( Vector3(0, 1, 0), 0 );
-		YAKE_ASSERT( mGround.pCO );
-		mGround.pCO->setFriction( 1.5 );
-		mGround.pCO->setFriction2( 1.5 );
-
-		// create entity
-		mGround.pE = 0;
-		mGround.pSN = 0;
-
-		/*
-		mGround.pE = mGWorld->createEntity("plane_1x1.mesh");
-		YAKE_ASSERT( mGround.pE );
-		mGround.pE->setMaterial("Examples/BumpyMetal");
-		mGround.pE->setCastsShadow( false  );
-
-		// create scene node and attach entity to node
-		mGround.pSN = mGWorld->createSceneNode();
-		YAKE_ASSERT( mGround.pSN );
-		mGround.pSN->attachEntity( mGround.pE );
-		mGround.pSN->setScale(Vector3(100,1,100));
-		*/
+		YAKE_SAFE_DELETE( mComplex );
+		YAKE_SAFE_DELETE( mVehicle );
 	}
-	void setupLights()
+	virtual void onEnter()
 	{
-		if (mLightOneNode)
-			return;
-		mLightOneNode = mGWorld->createSceneNode();
-		YAKE_ASSERT( mLightOneNode );
-		graphics::ILight* pL = mGWorld->createLight();
-		YAKE_ASSERT( pL );
-		mLightOneNode->attachLight( pL );
-		//pL->setType( graphics::ILight::LT_POINT );
-		//pL->setType( graphics::ILight::LT_SPOT );
-		//pL->setSpotlightRange( 80, 100, 1 );
-		pL->setType( graphics::ILight::LT_DIRECTIONAL );
-		Vector3 n(-1,-1,0);
-		n.normalise();
-		pL->setDirection( n );
-		pL->setCastsShadow( true );
-		pL->setDiffuseColour( Color(0.75, 0.75, 0.78) );
-		pL->setAttenuation( 8000, 1, 0.0005, 0 );
-		pL->setSpecularColour( Color(0.9, 0.9, 1) );
-		mLightOneNode->setPosition(Vector3(0,50,0));
-	}
+		RtMainState::onEnter();
+		using namespace input;
+		mActionMap.reg( ACTIONID_STRAFE_LEFT,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_LEFT, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_STRAFE_LEFT, boost::bind(TheMainState::onStrafeLeft,this) );
 
-	model::Pawn* setupPawn(GameControl & gameCtrl)
-	{
-		// - model
-		model::complex::Model* pComplex = new model::complex::Model();
+		mActionMap.reg( ACTIONID_STRAFE_RIGHT,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_RIGHT, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_STRAFE_RIGHT, boost::bind(TheMainState::onStrafeRight,this) );
 
-		// - add physical representation
-		model::Physical* pPhysical = new model::Physical();
-		pComplex->addPhysical( SharedPtr<model::Physical>( pPhysical ), "basePhysical" );
+		mActionMap.reg( ACTIONID_FORWARD,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_UP, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_FORWARD, boost::bind(TheMainState::onForward,this) );
 
-		physics::IActor* pCO = mPWorld->createSphere( 2 );
-		YAKE_ASSERT( pCO );
-		pCO->setPosition( Vector3(0,15,-10) );
-		pCO->getBody()->setMass( 1 );
-		pPhysical->addComplex( SharedPtr<physics::IActor>( pCO ), "base" );
-
-		// - add graphical representation
-		model::Graphical* pGraphical = new model::Graphical();
-		pComplex->addGraphical( SharedPtr<model::Graphical>( pGraphical ), "baseGraphical" );
-
-		graphics::ISceneNode* pSN = mGWorld->createSceneNode();
-		graphics::IEntity* pE = mGWorld->createEntity("sphere_d1.mesh");
-		pSN->attachEntity( pE );
-		pGraphical->addSceneNode( pSN, "base", true );
-		pSN->setPosition( Vector3(0,5,0) );
-
-		// - model link
-		/*
-		//SharedPtr<app::model::ModelMovableLink> pMML = create<app::model::ModelMovableLink>("yake.movable");
-		SharedPtr<app::model::IObjectController> pMML = ::yake::createModelMovableLink( pCO, pSN, true, true );
-		pComplex->addController( pMML );
-		*/
-		app::model::DotLinkLoader dll;
-		dll.load( "../../media/dotlink_test.link", *pComplex );
-
-		// -- Pawn
-		model::Pawn* pPawn = new model::Pawn();
-
-		PawnVisual* pVis = new PawnVisual();
-		pPawn->addComponent( pVis, "defaultVis" );
-		pPawn->setModel( pComplex );
-
-		PawnLocalHumanInput* pRawInput = new PawnLocalHumanInput(gameCtrl);
-		pPawn->addComponent( pRawInput, "defaultInput" );
-
-		PawnControl* pCtrl = new PawnControl(pRawInput);
-		pPawn->addComponent( pCtrl, "defaultCtrl" );
-		pPawn->setMovable( pCO );
-		pCtrl->setControlledMovable( pCO );
-
-		gameCtrl.subscribeToPostPhysicsStep( Bind1( &model::Pawn::onPostPhysics, pPawn ) );
-		gameCtrl.subscribeToSense( boost::bind( &model::Pawn::onSense, pPawn ) );
-		gameCtrl.subscribeToThink( boost::bind( &model::Pawn::onThink, pPawn ) );
-		gameCtrl.subscribeToActStep( boost::bind( &model::Pawn::onAct, pPawn ) );
-
-		return pPawn;
+		mActionMap.reg( ACTIONID_REVERSE,
+			new input::KeyboardActionCondition( getApp().getKeyboard(), KC_DOWN, KAM_CONTINUOUS ) );
+		mActionMap.subscribeToActionId( ACTIONID_REVERSE, boost::bind(TheMainState::onReverse,this) );
 	}
-
-	void setupVehicle(GameControl & gameCtrl)
+	virtual void onExit()
 	{
-		if (mVehicle1)
-			return;
-		SharedPtr<model::vehicle::IVehicleSystem> pVS = create<model::vehicle::IVehicleSystem>("yake.native");
-		mVehicle1 = pVS->createVehicle("../../media/vehicles/fordboss.vehicle", mPWorld, mGWorld.get() );
-		gameCtrl.subscribeToActStep( boost::bind( &model::vehicle::Vehicle::act, mVehicle1 ) );
 	}
-	void cleanupVehicle()
+	virtual void onFrame(const real timeElapsed)
 	{
-		YAKE_SAFE_DELETE( mVehicle1 );
-	}
+		getApp().getInputSystem()->update();
+		getApp().getKeyboardEventGenerator()->update();
+		getApp().getMouseEventGenerator()->update();
+		mActionMap.update();
 
-	virtual void run()
-	{
-		// setup event input generators
-		mKeyboardEventGenerator.subscribeToKeyDown( Bind1( TheApp::onKey, this ) );
-		mMouseEventGenerator.subscribeToMouseButtonDown( Bind1( TheApp::onMB, this ) );
-
-		// graphics
-		mGWorld = getGraphicsSystem().createWorld();
-		YAKE_ASSERT( mGWorld );
-
-		createCameraViewportPair( 0.0, 0.0, 1, 1, 10 );
-		//createCameraViewportPair( 0.0, 0.0, 0.5, 0.5, 10 );
-		//createCameraViewportPair( 0.5, 0.0, 0.5, 0.5, 11 );
-		//createCameraViewportPair( 0.0, 0.5, 0.5, 0.5, 12 );
-		//createCameraViewportPair( 0.5, 0.5, 0.5, 0.5, 13 );
-
-		if (mVPs[0].second)
+		for (size_t i=0; i<4; ++i)
 		{
-			mVPs[0].second->translate( Vector3(0,1.6,20) );
-			//mVPs[0].second->pitch(-30);
-			mVPs[0].second->lookAt( Vector3(0,0,0) );
+			mVehicle->getEngineInterface(i)->setThrottle(
+				mVehicle->getEngineInterface(i)->getThrottle() - timeElapsed * 1.7 );
 		}
-		if (mVPs.size() > 1 && mVPs[1].second)
-			mVPs[1].second->setPosition( Vector3(0,2,-80) );
-		if (mVPs.size() > 2 && mVPs[2].second)
+		ConstDequeIterator< ActionIdList > itAction( mActiveActions );
+		while (itAction.hasMoreElements())
 		{
-			mVPs[2].second->translate( Vector3(0,15,30) );
-			mVPs[2].second->pitch(-30);
+			const input::ActionId activeId = itAction.getNext();
+			if (activeId == input::ACTIONID_STRAFE_LEFT)
+				mVehicle->getEngineInterface(1)->setThrottle(1.);
+			else if (activeId == input::ACTIONID_STRAFE_RIGHT)
+				mVehicle->getEngineInterface(0)->setThrottle(1.);
+			else if (activeId == input::ACTIONID_FORWARD)
+				mVehicle->getEngineInterface(2)->setThrottle(1.);
+			else if (activeId == input::ACTIONID_REVERSE)
+				mVehicle->getEngineInterface(3)->setThrottle(1.);
 		}
-		if (mVPs.size() > 3 && mVPs[3].second)
-		{
-			mVPs[3].second->setPosition( Vector3(0,50,0) );
-			mVPs[3].second->pitch(-90);
-		}
 
-		mGWorld->setShadowsEnabled( false );
+		mVehicle->updateSimulation( timeElapsed );
+		mComplex->updatePhysics( timeElapsed );
 
-		// physics
-		mPWorld = getPhysicsSystem().createWorld();
-		YAKE_ASSERT( mPWorld );
-		//mPWorld->setGlobalGravity( Vector3(0,-9.81,0) );
-		mPWorld->setGlobalGravity( Vector3(0,-9.81,0) );
+		_updateThrusterPs();
+		getDefaultCamera()->lookAt(mVehicle->getChassisPosition());
+		mComplex->updateGraphics( timeElapsed );
 
-		// audio
-		//setupAudio();
-
-		LocalHumanInputData gatherInputData( &getInputSystem(), &mKeyboardEventGenerator, &mMouseEventGenerator, getKeyboard() );
-		GameControl gameCtrl(gatherInputData);
-
-		// objects
-		setupLights();
-		//setupNinja();
-		setupGround();
-		setupDotScene();
-		//setupCar();
-		setupVehicle(gameCtrl);
-
-		/*CameraFollowController cfc( mVPs[0].second, mVPs[0].second, dbgChassis );
-		mVPs[0].second->setFixedYawEnabled( true );
-		mVPs[0].second->setFixedYawAxis( Vector3(0,1,0) );
-		mVPs[0].second->setPosition( Vector3(10,2,30) );*/
-
-		// tasks
-		mRenderTask = new RenderTask( mGWorld.get() );
-		YAKE_ASSERT( mRenderTask );
-		mTaskMgr.addTask( mRenderTask );
-
-		mPhysicsTask = new PhysicsTask( mPWorld );
-		YAKE_ASSERT( mPhysicsTask );
-		mTaskMgr.addTask( mPhysicsTask );
-
-		mInputTask = new InputTask( this );
-		YAKE_ASSERT( mInputTask );
-		mTaskMgr.addTask( mInputTask );
-
-		// main loop
-		mPawn1 = setupPawn(gameCtrl);
-		//gameCtrl.subscribeToGatherInputStep( Bind1( &InputTask::execute, mInputTask ) );
-		gameCtrl.subscribeToPhysicsStep( Bind1( &PhysicsTask::execute, mPhysicsTask ) );
-		gameCtrl.subscribeToRenderStep( Bind1( &RenderTask::execute, mRenderTask ) );
-		real lastTime = base::native::getTime();
-		while (!shutdownRequested())
-		{
-			getInputSystem().update();
-			mMouseEventGenerator.update();
-			mKeyboardEventGenerator.update();
-
-			gameCtrl.update();
-		}
-		mRenderTask = 0;
-		mPhysicsTask = 0;
-		mInputTask = 0;
-
-		// clean up (FIXME: still incomplete)
-		// TODO: use a yake::base::State for handling all scene specific stuff...
-
-		cleanupVehicle();
-
-		YAKE_SAFE_DELETE( mLightOneNode );
-
-		//YAKE_SAFE_DELETE( mCar );
-		//YAKE_SAFE_DELETE( mCarModel ); is done by destructor of mCar
-
-		YAKE_SAFE_DELETE( mPWorld );
-		mGWorld.reset();
-
-		//profiler::ProfilerManager::instance().getProfiler("default").logToCout();
-		PROFILER_DESTROY;
-		PROFILERMANAGER_DESTROY;
+		mActiveActions.clear();
 	}
-};
-
-	TheApp::RenderTask::RenderTask(IWorld* pWorld) :
-		DefTask( -1, task::TASKPRIO_HIGH ),
-		mWorld(pWorld)
+protected:
+	void onStrafeLeft()
+	{ mActiveActions.insert( input::ACTIONID_STRAFE_LEFT ); }
+	void onStrafeRight()
+	{ mActiveActions.insert( input::ACTIONID_STRAFE_RIGHT ); }
+	void onForward()
+	{ mActiveActions.insert( input::ACTIONID_FORWARD ); }
+	void onReverse()
+	{ mActiveActions.insert( input::ACTIONID_REVERSE ); }
+private:
+	void _regThrusterPs(size_t idx, graphics::IParticleSystem& ps)
 	{
-		YAKE_ASSERT( mWorld );
+		mEmitterMinVel[ idx ] = ps.getMinVelocity(0);
+		mEmitterMaxVel[ idx ] = ps.getMaxVelocity(0);
+		mEmitterEmissionRate[ idx ] = ps.getEmissionRate(0);
+		mThrusterPs[ idx ] = &ps;
 	}
-	void TheApp::RenderTask::execute(real timeElapsed)
+	void _updateThrusterPs()
 	{
-		YAKE_ASSERT( mWorld );
-		mWorld->render( timeElapsed );
-		//std::cout << "render(" << timeElapsed << ")!\n";
-	}
-
-	TheApp::PhysicsTask::PhysicsTask(physics::IWorld* pWorld) :
-		DefTask( -1, task::TASKPRIO_HIGH+1 ),
-		mWorld(pWorld)
-	{
-		YAKE_ASSERT( mWorld );
-	}
-	void TheApp::PhysicsTask::execute(real timeElapsed)
-	{
-		//std::cout << "physics(" << timeElapsed << ")!\n";
-		YAKE_ASSERT( mWorld );
-		mWorld->update( timeElapsed );
-	}
-
-	TheApp::InputTask::InputTask(
-			TheApp* theApp ) :
-		DefTask( -1, task::TASKPRIO_HIGH+2 ),
-		mApp(theApp)
-	{
-		YAKE_ASSERT( mApp );
-	}
-	void TheApp::InputTask::execute(real timeElapsed)
-	{
-		//std::cout << "input(" << timeElapsed << ")!\n";
-		YAKE_ASSERT( mApp );
-
-		// handle input
-		mApp->getInputSystem().update();
-		mApp->mMouseEventGenerator.update();
-		mApp->mKeyboardEventGenerator.update();
-
-		//
-		YAKE_ASSERT( mApp->getKeyboard() );
-		if (mApp->getKeyboard())
+		ConstDequeIterator< ThrusterPsMap > itM( mThrusterPs );
+		while (itM.hasMoreElements())
 		{
-			static iCam = 0;
-			real distance = -5. * timeElapsed;
-			if (mApp->getKeyboard()->isKeyDown(input::KC_LEFT))
-				mApp->mVPs[iCam].second->translate( Vector3(distance, 0, 0) );
-			if (mApp->getKeyboard()->isKeyDown(input::KC_RIGHT))
-				mApp->mVPs[iCam].second->translate( Vector3(-distance, 0, 0) );
-			if (mApp->getKeyboard()->isKeyDown(input::KC_UP))
-				mApp->mVPs[iCam].second->translate( Vector3(0, 0, distance) );
-			if (mApp->getKeyboard()->isKeyDown(input::KC_DOWN))
-				mApp->mVPs[iCam].second->translate( Vector3(0, 0, -distance) );
+			std::pair<size_t,graphics::IParticleSystem*> p = itM.getNext();
+			size_t idxMtPt = p.first;
+			graphics::IParticleSystem* ps = p.second;
+			const real throttle = mVehicle->getEngineInterface(idxMtPt)->getThrottle();
 
-/*
-			if (mApp->getKeyboard()->isKeyDown(input::KC_A))
-				mCar->setSteer( -0.7 );
-			else if (mApp->getKeyboard()->isKeyDown(input::KC_D))
-				mCar->setSteer( 0.7 );
-			else
-				mCar->setSteer( 0 );
+			real rate = throttle * mEmitterEmissionRate[ idxMtPt ];
+			ps->setEmissionRate( 0, rate );
 
-			if (mApp->getKeyboard()->isKeyDown(input::KC_W))
-			{
-				mCar->getEngine()->setThrottle(
-					mCar->getEngine()->getThrottle() + timeElapsed );
-			}
-			else
-				mCar->getEngine()->setThrottle(
-					mCar->getEngine()->getThrottle() - 2. * timeElapsed );
-			static real last = 0.;
-			last -= timeElapsed;
-			if (last < 0. && mApp->getKeyboard()->isKeyDown(input::KC_RETURN))
-			{
-				mCar->getEngine()->shiftGearUp();
-				last = 0.2;
-			}
-			if (last < 0. && mApp->getKeyboard()->isKeyDown(input::KC_RSHIFT))
-			{
-				mCar->getEngine()->shiftGearDown();
-				last = 0.2;
-			}
-			if (mApp->getKeyboard()->isKeyDown(input::KC_SPACE))
-				mCar->brake( 0, 1. );
-			else
-				mCar->brake( 0, 0. );
-			*/
+			real vel = throttle * mEmitterMaxVel[ idxMtPt ];
+			ps->setMaxVelocity( 0, vel );
+
+			vel = throttle * mEmitterMinVel[ idxMtPt ];
+			ps->setMinVelocity( 0, vel );
 		}
 	}
-//============================================================================
-//    IMPLEMENTATION FUNCTIONS
-//============================================================================
+private:
+	vehicle::IVehicle*		mVehicle;
+	model::complex::Model*	mComplex;
+	typedef AssocVector<size_t,real> EmitterRealMap;
+	EmitterRealMap			mEmitterMinVel;
+	EmitterRealMap			mEmitterMaxVel;
+	EmitterRealMap			mEmitterEmissionRate;
+	typedef AssocVector<size_t,graphics::IParticleSystem*> ThrusterPsMap;
+	ThrusterPsMap			mThrusterPs;
+	input::ActionMap		mActionMap;
 
-int main()
+	typedef std::set<input::ActionId> ActionIdList;
+	ActionIdList			mActiveActions;
+};
+
+/** The mighty application itself! */
+class TheApp : public raf::ExampleApplication<TheConfiguration>
 {
-	try
+public:
+	TheApp() {}
+protected:
+	virtual raf::MainState* createMainState()
 	{
-		std::cout << std::endl << "A simple vehicle demo :) provided for YAKE by Stephan Kaiser" << std::endl;
-		TheApp theApp;
-		theApp.initialise();
-		theApp.run();
+		return new TheMainState(*this);
 	}
-	catch (const yake::base::Exception & e)
-	{
-		std::cout << std::endl << e.what() << std::endl;
-	}
-#if defined( YAKE_DEBUG_BUILD )
-	std::cout << std::endl << "Waiting for you...";
-	std::cin.get();
-#endif
+};
 
-	return 0;
-}
\ No newline at end of file
+int main( int argc, char** argv )
+{
+	// Use default executor for convenience.
+	// It's always possible to manually execute TheApp::initialise() etc.
+	return (raf::runApplication( TheApp() )) ? 0 : 1;
+}
+

Modified: trunk/yake/src/yapp/samples/base/vehicle/yakePCH.cpp
===================================================================
--- trunk/yake/src/yapp/samples/base/vehicle/yakePCH.cpp	2005-09-30 21:46:54 UTC (rev 977)
+++ trunk/yake/src/yapp/samples/base/vehicle/yakePCH.cpp	2005-09-30 21:48:00 UTC (rev 978)
@@ -1,2 +1 @@
 #include <yapp/samples/base/vehicle/yakePCH.h>
-



From codeandroid at berlios.de  Fri Sep 30 23:48:35 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:48:35 +0200
Subject: [Yake-svn] r979 - in trunk/yake/yapp: . vehicle
Message-ID: <200509302148.j8ULmZbs009231@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:48:34 +0200 (Fri, 30 Sep 2005)
New Revision: 979

Added:
   trunk/yake/yapp/vehicle/
   trunk/yake/yapp/vehicle/yakeInterfaces.h
   trunk/yake/yapp/vehicle/yakeNativeOde.h
   trunk/yake/yapp/vehicle/yakePCH.h
   trunk/yake/yapp/vehicle/yakePrerequisites.h
   trunk/yake/yapp/vehicle/yakeVehicle.h
Log:
refactoring of yake::vehicle


Added: trunk/yake/yapp/vehicle/yakeInterfaces.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-09-30 21:48:00 UTC (rev 978)
+++ trunk/yake/yapp/vehicle/yakeInterfaces.h	2005-09-30 21:48:34 UTC (rev 979)
@@ -0,0 +1,363 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_INTERFACES_H
+#define YAKE_VEHICLE_INTERFACES_H
+
+#include "yakePrerequisites.h"
+
+namespace yake {
+namespace vehicle {
+
+	const size_t MPID_NO_PARENT = 0xffffffff;
+	struct VehicleTemplate
+	{
+		struct MountPointTpl
+		{
+			Vector3		mPosition;
+			Quaternion	mOrientation;
+			Vector3		mDirection;
+			size_t		mParentMountPointIdx;
+			bool		mUseDirection;
+			MountPointTpl(
+				const Vector3& pos = Vector3::kZero,
+				const Quaternion rot = Quaternion::kIdentity,
+				size_t parentMountPoint = MPID_NO_PARENT) :
+				mPosition(pos),
+				mOrientation(rot),
+				mParentMountPointIdx(parentMountPoint),
+				mUseDirection(false)
+			{}
+			MountPointTpl(
+				const Vector3& pos,
+				const Vector3& dir,
+				size_t parentMountPoint = MPID_NO_PARENT) :
+				mPosition(pos),
+				mDirection(dir),
+				mParentMountPointIdx(parentMountPoint),
+				mUseDirection(true)
+			{}
+		};
+		typedef Deque< MountPointTpl > MountPointTplList;
+		enum GearMode
+		{
+			GM_FORWARD,
+			GM_NEUTRAL,
+			GM_REVERSE
+		};
+		struct GearTpl
+		{
+			real				ratio_;
+			GearMode			mode_;
+			GearTpl() : ratio_(1.), mode_(GM_FORWARD) {}
+		};
+		typedef Vector<GearTpl> GearTplList;
+		struct EngineTpl
+		{
+			virtual ~EngineTpl() {}
+		};
+		struct ThrusterTpl : public EngineTpl
+		{
+			real				minForce;
+			real				maxForce;
+			size_t				mountPtIdx;
+			ThrusterTpl(real minF = 0., real maxF = 1., size_t mtPt = 0) : minForce(minF), maxForce(maxF), mountPtIdx(mtPt) {}
+		};
+		struct CarEngineTpl : public EngineTpl
+		{
+			real				rpmMin_;
+			real				rpmMax_;
+			real				rpmRedline_;
+			real				rpmDieOff_;
+			real				rpmRise_;
+			real				minShiftingTime_;
+			GearTplList			gears_;
+			//Curve*			torqueCurve_;
+			real				differentialRatio;
+			CarEngineTpl() :
+				rpmMin_(0.),
+				rpmMax_(8000.),
+				rpmRedline_(6000.),
+				rpmDieOff_(800.),
+				rpmRise_(2000.),
+				minShiftingTime_(0.15),
+				differentialRatio(3.14)
+			{}
+		};
+
+		typedef Deque<EngineTpl*> EngineTplList;
+
+		typedef Deque<physics::IShape::Desc*> ShapeTplList;
+
+		struct ChassisTpl
+		{
+			Vector3			mPosition; // initial position
+			real			mMass;
+			ShapeTplList	mChassisShapes;
+			String			mGfxReference; // e.g. dotScene file
+			ChassisTpl() : 
+				mPosition(Vector3::kZero),
+				mMass(1.6)
+			{}
+		};
+
+		struct WheelTpl
+		{
+			Vector3			mPosition;
+			Quaternion		mOrientation;
+			uint32			mSteeringGroup;
+			real			mRadius;
+			real			mMass;
+			bool			mMassRelativeToChassis;
+			real			mSuspensionSpring;
+			real			mSuspensionDamping;
+			String			mGfxReference; // e.g. dotScene file
+			String			mGfxReferenceType; // e.g. "dotscene"
+			WheelTpl() :
+				mPosition(Vector3::kZero),
+				mOrientation(Quaternion::kIdentity),
+				mSteeringGroup(0),
+				mRadius(0.8),
+				mMass(0.015),
+				mMassRelativeToChassis(true),
+				mSuspensionSpring(1),
+				mSuspensionDamping(0.9)
+			{}
+		};
+
+		typedef Deque< WheelTpl > WheelTplList;
+
+		//
+
+		ChassisTpl		mChassis;
+		MountPointTplList	mMountPoints;
+		EngineTplList	mEngines;
+		uint32			mSteeringGroups;
+		WheelTplList	mWheels;
+
+		VehicleTemplate() : mSteeringGroups(0)
+		{}
+		~VehicleTemplate()
+		{
+			ConstVectorIterator< EngineTplList > itEngine( mEngines );
+			while (itEngine.hasMoreElements())
+				delete itEngine.getNext();
+			mEngines.clear();
+			ConstVectorIterator< ShapeTplList > itShape( mChassis.mChassisShapes );
+			while (itShape.hasMoreElements())
+				delete itShape.getNext();
+			mChassis.mChassisShapes.clear();
+		}
+	};
+
+	/** Base class for objects that can be attached to mount points (MountPoint).
+		@see MountPoint
+	*/
+	class YAKE_VEH_API Mountable
+	{
+		friend class MountPoint;
+	protected:
+		virtual ~Mountable();
+		Mountable();
+	public:
+		MountPoint* getMountPoint() const;
+	protected:
+		void onAttached( MountPoint* mountpoint );
+		void onDetached();
+	private:
+		MountPoint*	mPt;
+	};
+
+	/** Base class for mount points. Mountable objects can be attached to it.
+		@see Mountable
+	*/
+	class YAKE_VEH_API MountPoint : public Mountable, public Movable
+	{
+	public:
+		MountPoint();
+		virtual ~MountPoint();
+
+		void setParent(MountPoint*);
+		void setOverrideParentMovable(Movable*);
+
+		void addChild(MountPoint*,bool transferOwnership = true);
+		MountPoint* createChild() const;
+
+		virtual bool isSuitableFor( const Mountable* mountable ) const;
+		void attach( Mountable* mountable );
+		void detach( Mountable* mountable );
+		void setDirection( const Vector3& dir );
+		Vector3 getDirection() const;
+		virtual void setOrientation( const Quaternion& );
+		virtual Quaternion getOrientation() const;
+		virtual void setPosition(const Vector3& rPosition );
+		virtual Vector3 getPosition() const;
+		Vector3 getDerivedPosition() const;
+		Quaternion getDerivedOrientation() const;
+		void lookAt(const Vector3&);
+	private:
+		typedef Deque< Mountable* > MountablePtrList;
+		MountablePtrList	mMountables;
+		Quaternion			mOrientation;
+		Vector3				mPosition;
+		typedef Deque< std::pair<MountPoint*,bool> > MountPointList;
+		MountPointList		mChildren;
+		MountPoint*			mParent;
+		Movable*			mOverrideParent;
+	};
+
+	class IVehicle;
+	class YAKE_VEH_API IVehicleSystem
+	{
+		YAKE_DECLARE_REGISTRY_0(IVehicleSystem,String);
+	public:
+		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld) = 0;
+	};
+
+	class IEngine;
+	class IWheel;
+	class YAKE_VEH_API IVehicle
+	{
+	public:
+		virtual ~IVehicle() {}
+
+		virtual void updateSimulation( real timeElapsed ) = 0;
+
+		//virtual void addMountPoint(MountPoint*) = 0;
+		//virtual MountPoint* removeMountPoint(MountPoint*) = 0;
+
+		virtual MountPoint* getMountPoint(size_t index) const = 0;
+		virtual IEngine* getEngineInterface(size_t index) const = 0;
+		virtual IWheel* getWheelInterface(size_t index) const = 0;
+
+		virtual Vector3 getChassisPosition() const = 0;
+		virtual Quaternion getChassisOrientation() const = 0;
+		virtual Movable* getChassisMovable() const = 0;
+	};
+
+	/** Interface to a vehicle engine.
+		@remarks This is work-in-progress and may be revised at any time.
+	*/
+	class YAKE_VEH_API IEngine
+	{
+	public:
+		virtual ~IEngine() 
+		{}
+
+		virtual void updateSimulation( real timeElapsed ) = 0;
+
+		virtual void setThrottle( real throttle ) = 0;
+		virtual real getThrottle() const = 0;
+	};
+
+	/** Interface to a vehicle engine.
+		@remarks This is work-in-progress and may be revised at any time.
+	*/
+	class YAKE_VEH_API ICarEngine : public IEngine
+	{
+	public:
+		virtual ~ICarEngine() 
+		{}
+
+		//virtual void setParameter( const String & name, const String & value );
+		virtual void setParamMinRPM( const real rpm ) = 0;
+		virtual void setParamMaxRPM( const real rpm ) = 0;
+		virtual void setParamRedlineRPM( const real rpm ) = 0;
+
+		virtual real getRPM() const = 0;
+		virtual uint8 getGear() const = 0;
+		virtual void shiftGear( uint8 gear ) = 0;
+		virtual void shiftGearUp() = 0;
+		virtual void shiftGearDown() = 0;
+
+		/** Returns the torque for the current engine data. [Nm] */
+		virtual real getDriveTorque() const = 0;
+	};
+
+	/** A thruster is a special kind of engine. It applies force to the vehicle
+		it's attached to at a specified offset, direction etc.
+		@see MountedThruster
+		@see vehicle::IEngine
+	*/
+	class YAKE_VEH_API IThruster : public IEngine
+	{
+	protected:
+		virtual ~IThruster();
+		IThruster();
+	public:
+		/** At least the following methods are inherited from vehicle::IEngine:
+
+		virtual void updateSimulation( real timeElapsed ) = 0;
+		virtual void setThrottle( real throttle ) = 0;
+		virtual real getThrottle() const = 0;
+		*/
+		void setMinimumForce( real force );
+		real getMinimumForce() const;
+		void setMaximumForce( real force );
+		real getMaximumForce() const;
+		real getForce() const;
+	protected:
+		void setForce( real force );
+	private:
+		real	mMaxForce;
+		real	mMinForce;
+		real	mForce;
+	};
+
+	/** A thruster that can be attached to a mount point.
+		@see Thruster
+	*/
+	class YAKE_VEH_API IMountedThruster : public Mountable
+	{
+	protected:
+		IMountedThruster();
+		virtual ~IMountedThruster();
+	public:
+		void setThruster(IThruster*);
+
+		void addTarget( physics::IBody* );
+		void removeTarget( physics::IBody* );
+		void applyToTargets();
+
+	protected:
+		virtual void onApplyToTargets() = 0;
+	protected:
+		typedef Deque<physics::IBody*> BodyPtrList;
+		BodyPtrList		mTargets;
+		IThruster*		mThruster;
+	};
+
+	class YAKE_VEH_API IWheel : public Movable
+	{
+	public:
+		virtual ~IWheel() {}
+	};
+
+} // namespace vehicle
+} // namespace yake
+
+
+#endif

Added: trunk/yake/yapp/vehicle/yakeNativeOde.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-09-30 21:48:00 UTC (rev 978)
+++ trunk/yake/yapp/vehicle/yakeNativeOde.h	2005-09-30 21:48:34 UTC (rev 979)
@@ -0,0 +1,194 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_NATIVEODE_H
+#define YAKE_VEHICLE_NATIVEODE_H
+
+#include "yakePrerequisites.h"
+
+namespace yake {
+namespace vehicle {
+
+	class YAKE_VEH_API OdeVehicleSystem : public IVehicleSystem
+	{
+		YAKE_DECLARE_CONCRETE(OdeVehicleSystem,"ode");
+	public:
+		OdeVehicleSystem();
+		virtual IVehicle* create(const VehicleTemplate&, physics::IWorld& PWorld);
+	};
+
+	class OdeWheel;
+	class OdeVehicle : public IVehicle
+	{
+	public:
+		OdeVehicle();
+		virtual ~OdeVehicle();
+
+		virtual void updateSimulation( real timeElapsed );
+
+		//virtual void addMountPoint(MountPoint*);
+		//virtual MountPoint* removeMountPoint(MountPoint*);
+
+		virtual MountPoint* getMountPoint(size_t index) const;
+
+		virtual IEngine* getEngineInterface(size_t index) const;
+		virtual IWheel* getWheelInterface(size_t index) const;
+
+		virtual Vector3 getChassisPosition() const;
+		virtual Quaternion getChassisOrientation() const;
+		virtual Movable* getChassisMovable() const;
+
+		void _create(const VehicleTemplate&, physics::IWorld& PWorld);
+
+		YAKE_MEMBERSIGNAL(private,void(real),UpdateThrusterSimulation);
+		YAKE_MEMBERSIGNAL(private,void(void),ApplyThrusterToTargets);
+	private:
+		typedef Deque<IEngine*> EnginePtrList;
+		EnginePtrList		mEngines; // owner of all engine objects
+
+		physics::IActorPtr	mpChassis;
+
+		typedef AssocVector<uint32,Deque<OdeWheel*> > SteeringGroupList;
+		SteeringGroupList	mSteeringGroups;
+
+		typedef Deque<OdeWheel*> WheelList;
+		WheelList			mWheels;
+
+		typedef Deque<MountPoint*> MountPointList;
+		MountPointList		mMountPoints;
+	};
+
+	class GearBox;
+	class OdeCarEngine : public ICarEngine
+	{
+	public:
+		OdeCarEngine();
+		virtual ~OdeCarEngine();
+
+		virtual void setThrottle(real throttle);
+		virtual real getThrottle() const;
+		virtual void updateSimulation( real timeElapsed );
+
+		//virtual void setParameter( const String & name, const String & value );
+		virtual void setParamMinRPM( const real rpm );
+		virtual void setParamMaxRPM( const real rpm );
+		virtual void setParamRedlineRPM( const real rpm );
+
+		virtual real getRPM() const;
+		virtual uint8 getGear() const;
+		virtual void shiftGear( uint8 gear );
+		virtual void shiftGearUp();
+		virtual void shiftGearDown();
+
+		/** Returns the torque for the current engine data. [Nm] */
+		virtual real getDriveTorque() const;
+
+		//---------------------------
+
+		GearBox& getGearBox();
+
+		real getMinRPM() const;
+		real getMaxRPM() const;
+
+		/** Get the amount the RPM can rise [RPM/sec]. */
+		real getRPMRise() const;
+		/** Amount of RPM when decreasing when throttle is 0. [RPM/sec] */
+		real getRPMDieOff() const;
+		/** Minimum time needed to shift gears. */
+		real getMinShiftingTime() const;
+	private:
+		void updateCurrentRPM( const real timeElapsed );
+		void updateGearRatios();
+		real getMaxTorque( const real rpm );
+	private:
+		real		mCurrentRPM;
+		real		mMaxRPM;
+		real		mMinRPM;
+		real		mThrottle;
+		real		mThrottleRPMRise;
+		real		mRPMDieOff;
+		real		mGearRatio;
+		real		mInvGearRatio;
+		real		mDifferentialRatio;
+		GearBox*	mpGearBox;
+		uint8		mCurrentGear;
+		real		mDriveTorque;
+	};
+
+	class OdeWheel : public IWheel
+	{
+		OdeWheel();
+	public:
+		~OdeWheel();
+		OdeWheel(	physics::IActorPtr chassisObj,
+					const VehicleTemplate::WheelTpl& tpl,
+					physics::IWorld& PWorld );
+
+		virtual void setPosition(const Vector3&) {}
+		virtual Vector3 getPosition() const;
+		virtual void setOrientation(const Quaternion&) {}
+		virtual Quaternion getOrientation() const;
+	private:
+		physics::IJointPtr		mpJoint;
+		physics::IActorPtr		mpWheel;
+	};
+
+	class OdeMountPoint : public MountPoint
+	{
+	public:
+		OdeMountPoint() {}
+
+	private:
+		//typedef Deque<IThruster*> ThrusterPtrList;
+		//ThrusterPtrList		mThrusters; // references thruster engines (does NOT own them!)
+	};
+
+	class OdeThruster : public IThruster
+	{
+	public:
+		OdeThruster();
+
+		virtual void setThrottle( real throttle );
+		virtual real getThrottle() const;
+		virtual void updateSimulation( real timeElapsed );
+
+	private:
+		real	mThrottle;
+	};
+	class OdeMountedThruster : public IMountedThruster
+	{
+	public:
+		OdeMountedThruster();
+
+		virtual void onApplyToTargets();
+	private:
+	};
+
+} // namespace vehicle
+} // namespace yake
+
+
+#endif

Added: trunk/yake/yapp/vehicle/yakePCH.h
===================================================================
--- trunk/yake/yapp/vehicle/yakePCH.h	2005-09-30 21:48:00 UTC (rev 978)
+++ trunk/yake/yapp/vehicle/yakePCH.h	2005-09-30 21:48:34 UTC (rev 979)
@@ -0,0 +1,34 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_PCH_H
+#define YAKE_VEHICLE_PCH_H
+
+#include <yake/base/yake.h>
+#include <yapp/base/yapp.h>
+#include <yapp/msg/yakeMsg.h>
+
+#endif

Added: trunk/yake/yapp/vehicle/yakePrerequisites.h
===================================================================
--- trunk/yake/yapp/vehicle/yakePrerequisites.h	2005-09-30 21:48:00 UTC (rev 978)
+++ trunk/yake/yapp/vehicle/yakePrerequisites.h	2005-09-30 21:48:34 UTC (rev 979)
@@ -0,0 +1,37 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_PREREQUISITES_H
+#define YAKE_VEHICLE_PREREQUISITES_H
+
+#if defined(YAKE_VEHICLE_EXPORTS)
+#	define YAKE_VEH_API DLLEXPORT
+#else
+#	define YAKE_VEH_API DLLIMPORT
+#endif
+
+
+#endif

Added: trunk/yake/yapp/vehicle/yakeVehicle.h
===================================================================
--- trunk/yake/yapp/vehicle/yakeVehicle.h	2005-09-30 21:48:00 UTC (rev 978)
+++ trunk/yake/yapp/vehicle/yakeVehicle.h	2005-09-30 21:48:34 UTC (rev 979)
@@ -0,0 +1,40 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#ifndef YAKE_VEHICLE_H
+#define YAKE_VEHICLE_H
+
+#if !defined(YAKE_VEHICLE_EXPORTS)
+#	if YAKE_PLATFORM == PLATFORM_WIN32
+#		pragma	comment(lib, "vehicle.lib")
+#	endif
+#endif
+
+#include <yake/base/yake.h>
+#include <yapp/base/yapp.h>
+#include <yapp/vehicle/yakeInterfaces.h>
+
+#endif



From codeandroid at berlios.de  Fri Sep 30 23:49:04 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:49:04 +0200
Subject: [Yake-svn] r980 - in trunk/yake/src/yapp: . vehicle
Message-ID: <200509302149.j8ULn4dN009319@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:49:04 +0200 (Fri, 30 Sep 2005)
New Revision: 980

Added:
   trunk/yake/src/yapp/vehicle/
   trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp
   trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
   trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
   trunk/yake/src/yapp/vehicle/yakePCH.cpp
   trunk/yake/src/yapp/vehicle/yakeVehicle.cpp
Log:
refactoring of yake::vehicle


Added: trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp	2005-09-30 21:48:34 UTC (rev 979)
+++ trunk/yake/src/yapp/vehicle/yakeMountPoint.cpp	2005-09-30 21:49:04 UTC (rev 980)
@@ -0,0 +1,156 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/vehicle/yakePCH.h>
+#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeNativeOde.h>
+
+namespace yake {
+namespace vehicle {
+
+	//-----------------------------------------------------
+	// Class: MountPoint
+	//-----------------------------------------------------
+	MountPoint::MountPoint() :
+		mPosition(Vector3::kZero),
+		mOrientation(Quaternion::kIdentity),
+		mParent(0),
+		mOverrideParent(0)
+	{
+	}
+	MountPoint::~MountPoint()
+	{
+		ConstVectorIterator< MountablePtrList > it( mMountables );
+		while (it.hasMoreElements())
+			detach( it.getNext() );
+		mMountables.clear();
+
+		ConstVectorIterator< MountPointList > itMP( mChildren );
+		while (itMP.hasMoreElements())
+		{
+			std::pair<MountPoint*,bool> mp = itMP.getNext();
+			if (mp.second)
+				delete mp.first;
+		}
+		mChildren.clear();
+	}
+	void MountPoint::setParent(MountPoint* parent)
+	{
+		mParent = parent;
+	}
+	void MountPoint::setOverrideParentMovable(Movable* mov)
+	{
+		mOverrideParent = mov;
+	}
+	bool MountPoint::isSuitableFor( const Mountable* mountable ) const
+	{
+		return true; // default
+	}
+	void MountPoint::attach( Mountable* mountable )
+	{
+		if (!mountable)
+			return;
+		if (std::find( mMountables.begin(), mMountables.end(), mountable ) == mMountables.end())
+		{
+			mMountables.push_back( mountable );
+			mountable->onAttached( this );
+		}
+	}
+	void MountPoint::detach( Mountable* mountable )
+	{
+		YAKE_ASSERT( mountable ).warning("Please tell me how detach a null mountable :/ Skip it!");
+		if (!mountable)
+			return;
+		MountablePtrList::iterator itFind = std::find( mMountables.begin(), mMountables.end(), mountable );
+		if (itFind == mMountables.end())
+			return;
+		mMountables.erase( itFind );
+		mountable->onDetached();
+	}
+	Vector3 MountPoint::getDirection() const
+	{ 
+		return getDerivedOrientation() * Vector3::kUnitZ; 
+	}
+	void MountPoint::setDirection( const Vector3& dir)
+	{
+		const Vector3 currDir = getDirection();
+		const Vector3 newDir = dir.normalisedCopy();
+		//@fixme Use tolerance for equality tests!
+		if (newDir == currDir)
+			return;
+		if (newDir == -currDir)
+		{
+			real angle = 0.;
+			Vector3 axis(Vector3::kUnitY);
+			mOrientation.ToAngleAxis(angle,axis);
+			mOrientation.FromAngleAxis(angle+Math::PI,axis);
+			return;
+		}
+		mOrientation = currDir.getRotationTo( newDir ) * mOrientation;
+	}
+	void MountPoint::setPosition(const Vector3& rPosition)
+	{
+		mPosition = rPosition;
+	}
+	Vector3 MountPoint::getPosition() const
+	{
+		return mPosition;
+	}
+	void MountPoint::setOrientation( const Quaternion& q )
+	{
+		mOrientation = q;
+	}
+	Quaternion MountPoint::getOrientation() const
+	{
+		return mOrientation;
+	}
+	Vector3 MountPoint::getDerivedPosition() const
+	{
+		if (mOverrideParent)
+			return mOverrideParent->getOrientation() * mPosition + mOverrideParent->getPosition();
+		if (mParent)
+			return mParent->getDerivedOrientation() * mPosition + mParent->getDerivedPosition();
+		return mPosition;
+	}
+	Quaternion MountPoint::getDerivedOrientation() const
+	{
+		if (mOverrideParent)
+			return mOverrideParent->getOrientation() * mOrientation;
+		if (mParent)
+			return mParent->getDerivedOrientation() * mOrientation;
+		return mOrientation;
+	}
+	void MountPoint::addChild(MountPoint* pt,bool transferOwnership /* = true */)
+	{
+		YAKE_ASSERT( pt );
+		if (!pt)
+			return;
+		mChildren.push_back( std::make_pair(pt,transferOwnership) );
+		pt->setParent(this);
+	}
+
+} // namespace vehicle
+} // namespace yake

Added: trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-09-30 21:48:34 UTC (rev 979)
+++ trunk/yake/src/yapp/vehicle/yakeNativeOde.cpp	2005-09-30 21:49:04 UTC (rev 980)
@@ -0,0 +1,329 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/vehicle/yakePCH.h>
+#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeNativeOde.h>
+
+namespace yake {
+namespace vehicle {
+
+	YAKE_IMPLEMENT_REGISTRY(IVehicleSystem);
+	YAKE_REGISTER_CONCRETE(OdeVehicleSystem);
+
+	//-----------------------------------------------------
+	// Class: OdeVehicleSystem
+	//-----------------------------------------------------
+	OdeVehicleSystem::OdeVehicleSystem()
+	{}
+	IVehicle* OdeVehicleSystem::create(const VehicleTemplate& tpl, physics::IWorld& PWorld)
+	{
+		OdeVehicle* pV = new OdeVehicle();
+		pV->_create( tpl, PWorld );
+		return pV;
+	}
+
+	//-----------------------------------------------------
+	// Class: OdeVehicle
+	//-----------------------------------------------------
+	OdeVehicle::OdeVehicle() : mpChassis(0)
+	{
+	}
+	OdeVehicle::~OdeVehicle()
+	{
+		for (SteeringGroupList::const_iterator it = mSteeringGroups.begin(); it != mSteeringGroups.end(); ++it)
+		{
+			ConstDequeIterator< WheelList > itWheel( it->second );
+			while (itWheel.hasMoreElements())
+				delete itWheel.getNext();
+		}
+		mSteeringGroups.clear();
+
+		ConstDequeIterator< EnginePtrList > itEngine( mEngines );
+		while (itEngine.hasMoreElements())
+			delete itEngine.getNext();
+		mEngines.clear();
+
+		ConstDequeIterator< MountPointList > itMP( mMountPoints );
+		while (itMP.hasMoreElements())
+			delete itMP.getNext();
+		mMountPoints.clear();
+
+		mpChassis->getCreator()->destroyActor( mpChassis );
+		mpChassis = 0;
+	}
+	void OdeVehicle::updateSimulation(real timeElapsed)
+	{
+		ConstDequeIterator< EnginePtrList > itEngine( mEngines );
+		while (itEngine.hasMoreElements())
+		{
+			IEngine* pEngine = itEngine.getNext();
+			pEngine->updateSimulation(timeElapsed);
+		}
+		//
+		mSigUpdateThrusterSimulation( timeElapsed );
+		mSigApplyThrusterToTargets();
+	}
+	MountPoint* OdeVehicle::getMountPoint(size_t index) const
+	{
+		YAKE_ASSERT( index < mMountPoints.size() );
+		if (index >= mMountPoints.size())
+			return 0;
+		return mMountPoints.at(index);
+	}
+	IEngine* OdeVehicle::getEngineInterface(size_t index) const
+	{
+		YAKE_ASSERT( index < mEngines.size() );
+		if (index >= mEngines.size())
+			return 0;
+		return mEngines.at(index);
+	}
+	IWheel* OdeVehicle::getWheelInterface(size_t index) const
+	{
+		YAKE_ASSERT( index < mWheels.size() );
+		if (index >= mWheels.size())
+			return 0;
+		return mWheels.at(index);
+	}
+	Vector3 OdeVehicle::getChassisPosition() const
+	{
+		YAKE_ASSERT( mpChassis );
+		return mpChassis->getPosition();
+	}
+	Quaternion OdeVehicle::getChassisOrientation() const
+	{
+		YAKE_ASSERT( mpChassis );
+		return mpChassis->getOrientation();
+	}
+	Movable* OdeVehicle::getChassisMovable() const
+	{
+		YAKE_ASSERT( mpChassis );
+		return mpChassis;
+	}
+	void OdeVehicle::_create(const VehicleTemplate& tpl, physics::IWorld& PWorld )
+	{
+		// chassis
+		mpChassis = PWorld.createActor( physics::ACTOR_DYNAMIC );
+		mpChassis->setPosition( tpl.mChassis.mPosition );
+		ConstDequeIterator< VehicleTemplate::ShapeTplList > itShapeTpl( tpl.mChassis.mChassisShapes );
+		while (itShapeTpl.hasMoreElements())
+		{
+			mpChassis->createShape( *itShapeTpl.getNext() );
+		}
+		mpChassis->getBody().setMass( tpl.mChassis.mMass );
+
+		// mount points
+		MountPointList allMPs;
+		ConstDequeIterator< VehicleTemplate::MountPointTplList > itMP( tpl.mMountPoints );
+		while (itMP.hasMoreElements())
+		{
+			const VehicleTemplate::MountPointTpl mptTpl = itMP.getNext();
+			MountPoint* pMP = new OdeMountPoint();
+			pMP->setPosition( mptTpl.mPosition );
+			if (mptTpl.mUseDirection)
+				pMP->setDirection( mptTpl.mDirection );
+			else
+				pMP->setOrientation( mptTpl.mOrientation );
+
+			allMPs.push_back( pMP );
+
+			if (mptTpl.mParentMountPointIdx == MPID_NO_PARENT)
+			{
+				mMountPoints.push_back( pMP );
+				pMP->setOverrideParentMovable( mpChassis );
+			}
+			//mptTpl.
+		}
+		size_t idx = 0;
+		itMP.reset( tpl.mMountPoints );
+		while (itMP.hasMoreElements())
+		{
+			const VehicleTemplate::MountPointTpl mptTpl = itMP.getNext();
+			if (mptTpl.mParentMountPointIdx != MPID_NO_PARENT)
+			{
+				allMPs.at(mptTpl.mParentMountPointIdx)->addChild( allMPs.at(idx), true );
+			}
+			++idx;
+		}
+		allMPs.clear();
+
+		// engines
+		ConstDequeIterator< VehicleTemplate::EngineTplList > itEngineTpl( tpl.mEngines );
+		while (itEngineTpl.hasMoreElements())
+		{
+			//@todo refactor to avoid casting... ?
+
+			const VehicleTemplate::EngineTpl* engineTpl = itEngineTpl.getNext();
+
+			//@todo replace dynamic_casts with static_casts in release mode ?
+
+			const VehicleTemplate::CarEngineTpl* carEngineTpl =
+					dynamic_cast<const VehicleTemplate::CarEngineTpl*>( engineTpl );
+			if (carEngineTpl)
+			{
+				OdeCarEngine* pEngine = new OdeCarEngine();
+				mEngines.push_back(pEngine);
+				pEngine->setParamMaxRPM( carEngineTpl->rpmMax_ );
+				pEngine->setParamMinRPM( carEngineTpl->rpmMin_ );
+				pEngine->setParamRedlineRPM( carEngineTpl->rpmRedline_ );
+			}
+			else
+			{
+				const VehicleTemplate::ThrusterTpl* thrusterTpl =
+						dynamic_cast<const VehicleTemplate::ThrusterTpl*>( engineTpl );
+				if (thrusterTpl)
+				{
+					// thruster itself
+					OdeThruster* pEngine = new OdeThruster();
+					mEngines.push_back(pEngine);
+					pEngine->setMinimumForce( thrusterTpl->minForce );
+					pEngine->setMaximumForce( thrusterTpl->maxForce );
+					pEngine->setThrottle(0.);
+					subscribeToUpdateThrusterSimulation(
+						boost::bind( OdeThruster::updateSimulation, pEngine, _1 ) );
+
+					// the mountable thruster wrapper
+					if (thrusterTpl->mountPtIdx != MPID_NO_PARENT)
+					{
+						OdeMountedThruster* pMounted = new OdeMountedThruster();
+						pMounted->setThruster( pEngine );
+
+						pMounted->addTarget( mpChassis->getBodyPtr() );
+
+						subscribeToApplyThrusterToTargets(
+							boost::bind( OdeMountedThruster::applyToTargets, pMounted ) );
+
+						mMountPoints[thrusterTpl->mountPtIdx]->attach( pMounted );
+					}
+				}
+			}
+		}
+	
+		// steering groups
+		uint32 numStGrps = tpl.mSteeringGroups > 0 ? tpl.mSteeringGroups : 1;
+		for (uint32 i=0; i<numStGrps; ++i)
+			mSteeringGroups.insert( std::make_pair(i,WheelList()) );
+
+		// wheels
+		ConstDequeIterator< VehicleTemplate::WheelTplList > itWheelTpl( tpl.mWheels );
+		while (itWheelTpl.hasMoreElements())
+		{
+			const VehicleTemplate::WheelTpl wheelTpl = itWheelTpl.getNext();
+			YAKE_ASSERT( wheelTpl.mSteeringGroup < mSteeringGroups.size() );
+			if (wheelTpl.mSteeringGroup >= mSteeringGroups.size())
+			{
+				mWheels.push_back( 0 ); // => need this so that the indices stay valid!
+				continue;
+			}
+
+			OdeWheel* pW = new OdeWheel(mpChassis,wheelTpl,PWorld);
+			mSteeringGroups[ wheelTpl.mSteeringGroup ].push_back( pW );
+			mWheels.push_back( pW );
+		}
+	}
+
+	//-----------------------------------------------------
+	// Class: OdeWheel
+	//-----------------------------------------------------
+	OdeWheel::OdeWheel(	physics::IActorPtr chassisObj,
+						const VehicleTemplate::WheelTpl& tpl,
+						physics::IWorld& PWorld ) :
+		mpJoint(0),
+		mpWheel(0)
+	{
+		YAKE_ASSERT( chassisObj );
+		mpWheel = PWorld.createActor( physics::ACTOR_DYNAMIC );
+		mpWheel->createShape( physics::IShape::SphereDesc( tpl.mRadius ) );
+		real mass = tpl.mMassRelativeToChassis ?
+							(tpl.mMass * chassisObj->getBody().getMass()) : tpl.mMass;
+		mpWheel->getBody().setMass( mass );
+
+		mpJoint = PWorld.createJoint( physics::IJoint::DescFixed( chassisObj, mpWheel ) );
+	}
+	OdeWheel::~OdeWheel()
+	{
+		YAKE_ASSERT( mpWheel );
+		YAKE_ASSERT( mpJoint );
+		mpWheel->getCreator()->destroyJoint( mpJoint );
+		mpJoint = 0;
+		mpWheel->getCreator()->destroyActor( mpWheel );
+		mpWheel = 0;
+	}
+	Vector3 OdeWheel::getPosition() const
+	{
+		YAKE_ASSERT( mpWheel );
+		return mpWheel->getPosition();
+	}
+	Quaternion OdeWheel::getOrientation() const
+	{
+		YAKE_ASSERT( mpWheel );
+		return mpWheel->getOrientation();
+	}
+
+	//-----------------------------------------------------
+	// Class: OdeThruster
+	//-----------------------------------------------------
+	OdeThruster::OdeThruster() : mThrottle(0)
+	{
+	}
+	void OdeThruster::setThrottle( real throttle )
+	{
+		mThrottle = (throttle < 0.) ? 0. : ((throttle > 1.) ? 1. : throttle);
+	}
+	real OdeThruster::getThrottle() const
+	{
+		return mThrottle;
+	}
+	void OdeThruster::updateSimulation( real timeElapsed )
+	{
+		setForce( getMinimumForce() + mThrottle * ( getMaximumForce() - getMinimumForce() ) );
+	}
+
+	//-----------------------------------------------------
+	// Class: OdeMountedThruster
+	//-----------------------------------------------------
+	OdeMountedThruster::OdeMountedThruster()
+	{
+	}
+	void OdeMountedThruster::onApplyToTargets()
+	{
+		YAKE_ASSERT(mThruster);
+		if (!mThruster)
+			return;
+		const MountPoint* mp = getMountPoint();
+		const Vector3 pos = mp ? mp->getDerivedPosition() : Vector3::kZero;
+		const Quaternion rot = mp ? mp->getDerivedOrientation() : Quaternion::kIdentity;
+		const Vector3 f = mThruster->getForce() * ( rot * -Vector3::kUnitZ );
+		
+		ConstDequeIterator< BodyPtrList > itBody( mTargets );
+		while (itBody.hasMoreElements())
+		{
+			physics::IBody* pBody = itBody.getNext();
+			pBody->addForceAtPos( f, pos );
+		}
+	}
+} // namespace vehicle
+} // namespace yake

Added: trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-09-30 21:48:34 UTC (rev 979)
+++ trunk/yake/src/yapp/vehicle/yakeOdeEngine.cpp	2005-09-30 21:49:04 UTC (rev 980)
@@ -0,0 +1,250 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/vehicle/yakePCH.h>
+#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeNativeOde.h>
+
+namespace yake {
+namespace vehicle {
+
+	//-----------------------------------------------------
+	// Class: GearBox
+	//-----------------------------------------------------
+	class GearBox
+	{
+	public:
+		enum GearMode {
+			GM_REVERSE,
+			GM_NEUTRAL,
+			GM_FORWARD
+		};
+		void setSpeed( uint8 numGears );
+		uint8 getSpeed() const;
+
+		void setGearRatio( uint8 gear, real ratio );
+		void setGearMode( uint8 gear, const GearMode mode );
+		real getGearRatio( uint8 gear );
+
+		void setFromTemplate( const VehicleTemplate::GearTplList & gears );
+	private:
+		struct Gear
+		{
+			real		ratio_;
+			GearMode	mode_;
+		};
+		typedef Vector< Gear > GearList;
+		GearList	mGears;
+	};
+	void GearBox::setSpeed(uint8 numGears)
+	{
+		mGears.resize( numGears );
+	}
+	uint8 GearBox::getSpeed() const
+	{
+		size_t size = mGears.size();
+		YAKE_ASSERT( size <= 255 );
+		return static_cast<uint8>(size);
+	}
+	void GearBox::setGearRatio(uint8 gear, real ratio)
+	{
+		YAKE_ASSERT( gear < getSpeed() );
+		Gear& g = mGears[gear];
+		g.ratio_ = ratio;
+	}
+	void GearBox::setGearMode( uint8 gear, const GearMode mode )
+	{
+		YAKE_ASSERT( gear < getSpeed() );
+		Gear& g = mGears[gear];
+		g.mode_ = mode;
+	}
+	real GearBox::getGearRatio( uint8 gear )
+	{
+		YAKE_ASSERT( gear < getSpeed() );
+		Gear& g = mGears[gear];
+		return g.ratio_;
+	}
+	void GearBox::setFromTemplate( const VehicleTemplate::GearTplList & gears )
+	{
+		mGears.clear();
+		ConstVectorIterator< VehicleTemplate::GearTplList > it( gears.begin(), gears.end() );
+		while (it.hasMoreElements())
+		{
+			const VehicleTemplate::GearTpl & tpl = it.getNext();
+			Gear g;
+			switch( tpl.mode_ )
+			{
+			case VehicleTemplate::GM_FORWARD:
+				g.mode_ = GM_FORWARD;
+				break;
+			case VehicleTemplate::GM_REVERSE:
+				g.mode_ = GM_REVERSE;
+				break;
+			case VehicleTemplate::GM_NEUTRAL:
+				g.mode_ = GM_NEUTRAL;
+				break;
+			};
+			g.ratio_ = tpl.ratio_;
+			mGears.push_back( g );
+		}
+	}
+
+	//-----------------------------------------------------
+	// Class: OdeCarEngine
+	//-----------------------------------------------------
+	OdeCarEngine::OdeCarEngine() :
+		mDifferentialRatio( real(3.42) ),
+		mThrottle(0),
+		mCurrentGear(0),
+		mDriveTorque(0),
+		mpGearBox(0),
+		mMinRPM(0),
+		mMaxRPM(3500),
+		mThrottleRPMRise(2500),
+		mRPMDieOff(3500)
+	{
+		mpGearBox = new GearBox();
+		YAKE_ASSERT( mpGearBox );
+		mpGearBox->setSpeed( 6 );
+		mpGearBox->setGearRatio( 0, real(-2.90 ) ); mpGearBox->setGearMode( 0, GearBox::GM_REVERSE );
+		mpGearBox->setGearRatio( 1, real( 2.66 ) ); mpGearBox->setGearMode( 1, GearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 2, real( 1.78 ) ); mpGearBox->setGearMode( 2, GearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 3, real( 1.30 ) ); mpGearBox->setGearMode( 3, GearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 4, real( 0.74 ) ); mpGearBox->setGearMode( 4, GearBox::GM_FORWARD );
+		mpGearBox->setGearRatio( 5, real( 0.50 ) ); mpGearBox->setGearMode( 5, GearBox::GM_FORWARD );
+	}
+	OdeCarEngine::~OdeCarEngine()
+	{
+		YAKE_SAFE_DELETE( mpGearBox );
+	}
+	void OdeCarEngine::updateSimulation( real timeElapsed )
+	{
+		updateCurrentRPM( timeElapsed );
+		updateGearRatios();
+
+		//engine torque = throttle position * max torque
+		//drive torque = engine_torque * gear_ratio * differential_ratio * transmission_efficiency
+		//drive torque gets delivered to the wheels
+		real engineTorque = mThrottle * getMaxTorque( mCurrentRPM );
+		mDriveTorque = engineTorque * mGearRatio * mDifferentialRatio * 0.75/*just a guess*/;
+	}
+	void OdeCarEngine::setThrottle( real throttle )
+	{
+		mThrottle = throttle;
+		if (mThrottle > 1)
+			mThrottle = 1;
+		else if (mThrottle < 0)
+			mThrottle = 0;
+	}
+	real OdeCarEngine::getThrottle() const
+	{
+		return mThrottle;
+	}
+	real OdeCarEngine::getRPM() const
+	{
+		return mCurrentRPM;
+	}
+	uint8 OdeCarEngine::getGear() const
+	{
+		return mCurrentGear;
+	}
+	void OdeCarEngine::shiftGear( uint8 gear )
+	{
+		if (gear < mpGearBox->getSpeed())
+			mCurrentGear = gear;
+	}
+	void OdeCarEngine::shiftGearUp()
+	{
+		if (mCurrentGear+1 < mpGearBox->getSpeed())
+			mCurrentGear++;
+	}
+	void OdeCarEngine::shiftGearDown()
+	{
+		if (mCurrentGear > 0)
+			mCurrentGear--;
+	}
+	real OdeCarEngine::getDriveTorque() const
+	{
+		return mDriveTorque;
+	}
+	real OdeCarEngine::getMinRPM() const
+	{
+		return mMinRPM;
+	}
+	real OdeCarEngine::getMaxRPM() const
+	{
+		return mMaxRPM;
+	}
+	real OdeCarEngine::getRPMRise() const
+	{
+		return mThrottleRPMRise;
+	}
+	real OdeCarEngine::getRPMDieOff() const
+	{
+		return mRPMDieOff;
+	}
+	real OdeCarEngine::getMinShiftingTime() const
+	{
+		return 0.;
+	}
+	real OdeCarEngine::getMaxTorque( const real rpm )
+	{
+		//TODO: look up in curve
+		return 500; // in Nm
+	}
+	void OdeCarEngine::updateGearRatios()
+	{
+		mGearRatio = mpGearBox->getGearRatio( mCurrentGear );
+		mInvGearRatio = (mGearRatio != 0.) ? (1.0 / mGearRatio) : 0.;
+	}
+	void OdeCarEngine::updateCurrentRPM(real timeElapsed)
+	{
+		if (mThrottle > 0.)
+		{
+			mCurrentRPM += mThrottle * (mThrottleRPMRise * timeElapsed);
+			if (mCurrentRPM > mMaxRPM)
+				mCurrentRPM = mMaxRPM;
+		}
+		else
+		{
+			mCurrentRPM -= mRPMDieOff * timeElapsed;
+			if (mCurrentRPM < mMinRPM)
+				mCurrentRPM = mMinRPM;
+		}
+	}
+	void OdeCarEngine::setParamMinRPM( const real rpm )
+	{
+		mMinRPM = rpm;
+	}
+	void OdeCarEngine::setParamMaxRPM( const real rpm )
+	{
+		mMaxRPM = rpm;
+	}
+	void OdeCarEngine::setParamRedlineRPM( const real rpm )
+	{
+	}
+} // namespace vehicle
+} // namespace yake

Added: trunk/yake/src/yapp/vehicle/yakePCH.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakePCH.cpp	2005-09-30 21:48:34 UTC (rev 979)
+++ trunk/yake/src/yapp/vehicle/yakePCH.cpp	2005-09-30 21:49:04 UTC (rev 980)
@@ -0,0 +1,27 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/vehicle/yakePCH.h>

Added: trunk/yake/src/yapp/vehicle/yakeVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/vehicle/yakeVehicle.cpp	2005-09-30 21:48:34 UTC (rev 979)
+++ trunk/yake/src/yapp/vehicle/yakeVehicle.cpp	2005-09-30 21:49:04 UTC (rev 980)
@@ -0,0 +1,128 @@
+/*
+   ------------------------------------------------------------------------------------
+   This file is part of YAKE
+   Copyright ? 2004 The YAKE Team
+   For the latest information visit http://www.yake.org 
+   ------------------------------------------------------------------------------------
+   This program is free software; you can redistribute it and/or modify it under
+   the terms of the GNU Lesser General Public License as published by the Free Software
+   Foundation; either version 2 of the License, or (at your option) any later
+   version.
+
+   This program is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public License along with
+   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+   http://www.gnu.org/copyleft/lesser.txt.
+   ------------------------------------------------------------------------------------
+   If you are interested in another license model contact the Yake Team via
+   E-Mail: team at yake.org.
+   For more information see the LICENSE file in the root directory of the
+   source code distribution.
+   ------------------------------------------------------------------------------------
+*/
+#include <yapp/vehicle/yakePCH.h>
+#include <yapp/vehicle/yakeInterfaces.h>
+#include <yapp/vehicle/yakeNativeOde.h>
+
+namespace yake {
+namespace vehicle {
+
+	//-----------------------------------------------------
+	// Class: Mountable
+	//-----------------------------------------------------
+	Mountable::Mountable() : mPt(0)
+	{
+	}
+	Mountable::~Mountable()
+	{
+		YAKE_ASSERT( !mPt ).debug("Still attached... but d'tor called!");
+		mPt = 0;
+	}
+	MountPoint* Mountable::getMountPoint() const
+	{
+		return mPt;
+	}
+	void Mountable::onAttached( MountPoint* mountpoint )
+	{
+		YAKE_ASSERT( !mPt ).debug("Detach before reattaching!");
+		mPt = mountpoint;
+	}
+	void Mountable::onDetached()
+	{
+		mPt = 0;
+	}
+
+	//-----------------------------------------------------
+	// Class: IThruster
+	//-----------------------------------------------------
+	IThruster::IThruster() :
+		mMinForce(0.),
+		mMaxForce(1.),
+		mForce(0.)
+	{
+	}
+	IThruster::~IThruster()
+	{
+	}
+	void IThruster::setForce( real force )
+	{
+		mForce = force;
+	}
+	void IThruster::setMinimumForce( real force )
+	{
+		mMinForce = force;
+	}
+	real IThruster::getMinimumForce() const
+	{
+		return mMinForce;
+	}
+	void IThruster::setMaximumForce( real force )
+	{
+		mMaxForce = force;
+	}
+	real IThruster::getMaximumForce() const
+	{
+		return mMaxForce;
+	}
+	real IThruster::getForce() const
+	{
+		return mForce;
+	}
+
+	//-----------------------------------------------------
+	// Class: IMountedThruster
+	//-----------------------------------------------------
+	IMountedThruster::IMountedThruster() : mThruster(0)
+	{
+	}
+	IMountedThruster::~IMountedThruster()
+	{
+		mTargets.clear();
+	}
+	void IMountedThruster::setThruster(IThruster*t)
+	{
+		mThruster = t;
+	}
+	void IMountedThruster::addTarget( physics::IBody* body )
+	{
+		YAKE_ASSERT( body );
+		if (body)
+			mTargets.push_back( body );
+	}
+	void IMountedThruster::removeTarget( physics::IBody* body )
+	{
+		YAKE_ASSERT( body );
+		if (body)
+			mTargets.erase( find( mTargets, body ) );
+	}
+	void IMountedThruster::applyToTargets()
+	{
+		onApplyToTargets();
+	}
+
+} // namespace vehicle
+} // namespace yake



From codeandroid at berlios.de  Fri Sep 30 23:49:49 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:49:49 +0200
Subject: [Yake-svn] r981 - trunk/yake
Message-ID: <200509302149.j8ULnnUW009417@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:49:49 +0200 (Fri, 30 Sep 2005)
New Revision: 981

Modified:
   trunk/yake/README
Log:
beta

Modified: trunk/yake/README
===================================================================
--- trunk/yake/README	2005-09-30 21:49:04 UTC (rev 980)
+++ trunk/yake/README	2005-09-30 21:49:49 UTC (rev 981)
@@ -1,8 +1,8 @@
 
 	YAKE
 	
-	Yake is still HIGHLY EXPERIMENTAL code.
-	Especially Yapp is in a very early experimental stage.
+	Yake is still BETA code.
+
 	Use it in your applications AT YOUR OWN RISK.
 	
 	You know the drill :)



From codeandroid at berlios.de  Fri Sep 30 23:53:15 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:53:15 +0200
Subject: [Yake-svn] r982 - trunk/yake
Message-ID: <200509302153.j8ULrFme009747@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:53:15 +0200 (Fri, 30 Sep 2005)
New Revision: 982

Modified:
   trunk/yake/BUILD
Log:
updated

Modified: trunk/yake/BUILD
===================================================================
--- trunk/yake/BUILD	2005-09-30 21:49:49 UTC (rev 981)
+++ trunk/yake/BUILD	2005-09-30 21:53:15 UTC (rev 982)
@@ -6,7 +6,7 @@
 
 0. Prologue
 1. BUILD INSTRUCTIONS FOR YAKE ON PC/WIN
-2. BUILD INSTRUCTIONS FOR YAKE 0.1b2 ON PC/LINUX
+2. BUILD INSTRUCTIONS FOR YAKE ON PC/LINUX
 
 0. Prologue
 -----------
@@ -35,18 +35,27 @@
 
 (yake_root_dir)/scripts/yapp/yapp.sln
 
+If you don't have the dependencies package containing prebuilt libraries,
+then you have to compile these yourself.
 
+See the file <yakeroot>/dependencies/DEPENDENCIES for more information.
 
-2. BUILD INSTRUCTIONS FOR YAKE 0.1b2 ON PC/LINUX
-------------------------------------------------
 
+2. BUILD INSTRUCTIONS FOR YAKE ON PC/LINUX
+------------------------------------------
+
+Last modified: 30/9/2005 by Stephan Kaiser (psy)
 Last modified: 22/9/2004 by Nikita Buida (mj)
 
-This instruction applies to CVS version of Yake.
+This instruction applies to SVN (Subversion) version of Yake.
 
+If you encounter problems and need the very latest instructions, please
+visit www.yake.org and search the forums and the wiki. You will most likely
+find the solution there.
+
 Assuming that you are in yake root directory.
 
-#. Copy all files except CVS to yake root dir from ./scripts/linux.
+#. Copy all files except SVN related ones to yake root dir from ./scripts/linux.
 #. Set up ./dependencies dir.
 Its structure should look like this:
 /dependencies



From codeandroid at berlios.de  Fri Sep 30 23:54:54 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:54:54 +0200
Subject: [Yake-svn] r983 - trunk/yake
Message-ID: <200509302154.j8ULssBf010194@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:54:54 +0200 (Fri, 30 Sep 2005)
New Revision: 983

Modified:
   trunk/yake/AUTHORS
Log:
updated

Modified: trunk/yake/AUTHORS
===================================================================
--- trunk/yake/AUTHORS	2005-09-30 21:53:15 UTC (rev 982)
+++ trunk/yake/AUTHORS	2005-09-30 21:54:54 UTC (rev 983)
@@ -15,14 +15,16 @@
 Nikita Buida (mj)                     : Linux port, SCons, various enhancements
                                         and fixes and samples, rewrite of physicsODE
 ? (Poldi)                             : Linux port
-Jan Eickmann ( jeickmann )            : Fixes
+Jan Eickmann (jeickmann)			  : Fixes
+Joel Croteau (TV4fun)                 : physics component enhancements, various fixes
 
 
 If we've forgotten you in the above list, please contact us!
 
 -----
 
-Copyright 2004 The YAKE Team.
+YAKE
+Copyright (c) The YAKE Team.
 
 -----
 



From codeandroid at berlios.de  Fri Sep 30 23:55:38 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:55:38 +0200
Subject: [Yake-svn] r984 - trunk/yake
Message-ID: <200509302155.j8ULtcNE010325@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:55:37 +0200 (Fri, 30 Sep 2005)
New Revision: 984

Modified:
   trunk/yake/INSTALL
Log:
updated

Modified: trunk/yake/INSTALL
===================================================================
--- trunk/yake/INSTALL	2005-09-30 21:54:54 UTC (rev 983)
+++ trunk/yake/INSTALL	2005-09-30 21:55:37 UTC (rev 984)
@@ -2,3 +2,7 @@
 =============================
 
 For build instructions see BUILD.
+
+If you encounter problems visit:
+  the forums at http://www.yake.org/forum
+  the wiki at http://www.yake.org/wiki



From codeandroid at berlios.de  Fri Sep 30 23:56:08 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:56:08 +0200
Subject: [Yake-svn] r985 - trunk/yake/common/bin/release
Message-ID: <200509302156.j8ULu8Gf010361@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:56:08 +0200 (Fri, 30 Sep 2005)
New Revision: 985

Modified:
   trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg
Log:
added skybox

Modified: trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg
===================================================================
--- trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg	2005-09-30 21:55:37 UTC (rev 984)
+++ trunk/yake/common/bin/release/yake.graphics.ogre_resources.cfg	2005-09-30 21:56:08 UTC (rev 985)
@@ -20,3 +20,4 @@
 FileSystem=../../media/gui.cegui.imagesets
 FileSystem=../../media/gui.cegui.fonts/
 FileSystem=../../media/gui.cegui.layouts/
+Zip=../../media/skybox.zip



From codeandroid at berlios.de  Fri Sep 30 23:32:55 2005
From: codeandroid at berlios.de (Stephan Kaiser at BerliOS)
Date: Fri, 30 Sep 2005 23:32:55 +0200
Subject: [Yake-svn] r953 - trunk/yake/src/yapp/model
Message-ID: <200509302132.j8ULWt5a007108@sheep.berlios.de>

Author: codeandroid
Date: 2005-09-30 23:32:54 +0200 (Fri, 30 Sep 2005)
New Revision: 953

Removed:
   trunk/yake/src/yapp/model/yakeNativeEngine.cpp
   trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp
   trunk/yake/src/yapp/model/yakeNativeWheel.cpp
   trunk/yake/src/yapp/model/yakeVehicle.cpp
   trunk/yake/src/yapp/model/yakeVehiclePhysicalComponent.cpp
   trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp
   trunk/yake/src/yapp/model/yakeVehicleSystem.cpp
   trunk/yake/src/yapp/model/yakeVehicleTpl.cpp
Log:
refactoring of yake::vehicle

Deleted: trunk/yake/src/yapp/model/yakeNativeEngine.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeNativeEngine.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeNativeEngine.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,240 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright  2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeVehicleSystem.h>
-#include <yapp/model/yakeEngine.h>
-#include <yapp/model/yakeNativeEngine.h>
-#include <yapp/model/yakeVehiclePhysicalComponent.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-
-	void NativeGearBox::setSpeed(uint8 numGears)
-	{
-		mGears.resize( numGears );
-	}
-	uint8 NativeGearBox::getSpeed() const
-	{
-		size_t size = mGears.size();
-		YAKE_ASSERT( size <= 255 );
-		return static_cast<uint8>(size);
-	}
-	void NativeGearBox::setGearRatio(uint8 gear, real ratio)
-	{
-		YAKE_ASSERT( gear < getSpeed() );
-		Gear& g = mGears[gear];
-		g.ratio_ = ratio;
-	}
-	void NativeGearBox::setGearMode( uint8 gear, const GearMode mode )
-	{
-		YAKE_ASSERT( gear < getSpeed() );
-		Gear& g = mGears[gear];
-		g.mode_ = mode;
-	}
-	real NativeGearBox::getGearRatio( uint8 gear )
-	{
-		YAKE_ASSERT( gear < getSpeed() );
-		Gear& g = mGears[gear];
-		return g.ratio_;
-	}
-	void NativeGearBox::setFromTemplate( const VehicleTemplate::GearTemplateList & gears )
-	{
-		mGears.clear();
-		ConstVectorIterator< VehicleTemplate::GearTemplateList > it( gears.begin(), gears.end() );
-		while (it.hasMoreElements())
-		{
-			const VehicleTemplate::GearTemplate & tpl = it.getNext();
-			Gear g;
-			switch( tpl.mode_ )
-			{
-			case VehicleTemplate::GM_FORWARD:
-				g.mode_ = GM_FORWARD;
-				break;
-			case VehicleTemplate::GM_REVERSE:
-				g.mode_ = GM_REVERSE;
-				break;
-			case VehicleTemplate::GM_NEUTRAL:
-				g.mode_ = GM_NEUTRAL;
-				break;
-			};
-			g.ratio_ = tpl.ratio_;
-			mGears.push_back( g );
-		}
-	}
-
-
-	NativeCarEngine::NativeCarEngine() :
-		mDifferentialRatio( real(3.42) ),
-		mThrottle(0),
-		mCurrentGear(0),
-		mDriveTorque(0),
-		mpGearBox(0),
-		mMinRPM(0),
-		mMaxRPM(3500),
-		mThrottleRPMRise(2500),
-		mRPMDieOff(3500)
-	{
-		mpGearBox = new NativeGearBox();
-		YAKE_ASSERT( mpGearBox );
-		mpGearBox->setSpeed( 6 );
-		mpGearBox->setGearRatio( 0, real(-2.90 ) ); mpGearBox->setGearMode( 0, NativeGearBox::GM_REVERSE );
-		mpGearBox->setGearRatio( 1, real( 2.66 ) ); mpGearBox->setGearMode( 1, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 2, real( 1.78 ) ); mpGearBox->setGearMode( 2, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 3, real( 1.30 ) ); mpGearBox->setGearMode( 3, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 4, real( 0.74 ) ); mpGearBox->setGearMode( 4, NativeGearBox::GM_FORWARD );
-		mpGearBox->setGearRatio( 5, real( 0.50 ) ); mpGearBox->setGearMode( 5, NativeGearBox::GM_FORWARD );
-	}
-	NativeCarEngine::~NativeCarEngine()
-	{
-		YAKE_SAFE_DELETE( mpGearBox );
-	}
-	void NativeCarEngine::setFromTemplate( const VehicleTemplate::EngineTemplate & tpl )
-	{
-		const VehicleTemplate::CarEngineTemplate& engineTpl =
-			static_cast<const VehicleTemplate::CarEngineTemplate&>(tpl);
-		mMinRPM				= engineTpl.rpmMin_;
-		mMaxRPM				= engineTpl.rpmMax_;
-		mThrottleRPMRise	= engineTpl.rpmRise_;
-		mRPMDieOff			= engineTpl.rpmDieOff_;
-		mDifferentialRatio	= engineTpl.differentialRatio;
-		YAKE_ASSERT( mpGearBox );
-		mpGearBox->setFromTemplate( engineTpl.gears_ );
-	}
-	void NativeCarEngine::updateSimulation( real timeElapsed )
-	{
-		updateCurrentRPM( timeElapsed );
-		updateGearRatios();
-
-		//engine torque = throttle position * max torque
-		//drive torque = engine_torque * gear_ratio * differential_ratio * transmission_efficiency
-		//drive torque gets delivered to the wheels
-		real engineTorque = mThrottle * getMaxTorque( mCurrentRPM );
-		mDriveTorque = engineTorque * mGearRatio * mDifferentialRatio * 0.75/*just a guess*/;
-	}
-	void NativeCarEngine::setThrottle( real throttle )
-	{
-		mThrottle = throttle;
-		if (mThrottle > 1)
-			mThrottle = 1;
-		else if (mThrottle < 0)
-			mThrottle = 0;
-	}
-	real NativeCarEngine::getThrottle() const
-	{
-		return mThrottle;
-	}
-	real NativeCarEngine::getRPM() const
-	{
-		return mCurrentRPM;
-	}
-	uint8 NativeCarEngine::getGear() const
-	{
-		return mCurrentGear;
-	}
-	void NativeCarEngine::shiftGear( uint8 gear )
-	{
-		if (gear < mpGearBox->getSpeed())
-			mCurrentGear = gear;
-	}
-	void NativeCarEngine::shiftGearUp()
-	{
-		if (mCurrentGear+1 < mpGearBox->getSpeed())
-			mCurrentGear++;
-	}
-	void NativeCarEngine::shiftGearDown()
-	{
-		if (mCurrentGear > 0)
-			mCurrentGear--;
-	}
-	real NativeCarEngine::getDriveTorque() const
-	{
-		return mDriveTorque;
-	}
-	real NativeCarEngine::getMinRPM() const
-	{
-		return mMinRPM;
-	}
-	real NativeCarEngine::getMaxRPM() const
-	{
-		return mMaxRPM;
-	}
-	real NativeCarEngine::getRPMRise() const
-	{
-		return mThrottleRPMRise;
-	}
-	real NativeCarEngine::getRPMDieOff() const
-	{
-		return mRPMDieOff;
-	}
-	real NativeCarEngine::getMinShiftingTime() const
-	{
-		return 0.;
-	}
-	real NativeCarEngine::getMaxTorque( const real rpm )
-	{
-		//TODO: look up in curve
-		return 500; // in Nm
-	}
-	void NativeCarEngine::updateGearRatios()
-	{
-		mGearRatio = mpGearBox->getGearRatio( mCurrentGear );
-		mInvGearRatio = (mGearRatio != 0.) ? (1.0 / mGearRatio) : 0.;
-	}
-	void NativeCarEngine::updateCurrentRPM(real timeElapsed)
-	{
-		if (mThrottle > 0.)
-		{
-			mCurrentRPM += mThrottle * (mThrottleRPMRise * timeElapsed);
-			if (mCurrentRPM > mMaxRPM)
-				mCurrentRPM = mMaxRPM;
-		}
-		else
-		{
-			mCurrentRPM -= mRPMDieOff * timeElapsed;
-			if (mCurrentRPM < mMinRPM)
-				mCurrentRPM = mMinRPM;
-		}
-	}
-	void NativeCarEngine::setParamMinRPM( const real rpm )
-	{
-		mMinRPM = rpm;
-	}
-	void NativeCarEngine::setParamMaxRPM( const real rpm )
-	{
-		mMaxRPM = rpm;
-	}
-	void NativeCarEngine::setParamRedlineRPM( const real rpm )
-	{
-	}
-
-} // ns vehicle
-} // ns model
-} // ns yake
-

Deleted: trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeNativeVehiclePhysicalComponent.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,381 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeActor.h>
-#include <yapp/model/yakeVehicleSystem.h>
-#include <yapp/model/yakeEngine.h>
-#include <yapp/model/yakeNativeEngine.h>
-#include <yapp/model/yakeNativeWheel.h>
-#include <yapp/model/yakeVehiclePhysicalComponent.h>
-#include <yapp/model/yakeNativeVehiclePhysicalComponent.h>
-#include <yapp/model/yakeVehicleSerializerXML.h> // temporarily
-#include <yake/data/yakeData.h>
-
-#ifdef YAKE_DEBUG
-#	define COUTLN( X ) \
-		std::cout << X << std::endl;
-#	define COUTLN_V3( X ) \
-		std::cout << #X << " (" << X.x << ", " << X.y << ", " << X.z << ")" << std::endl;
-#else
-#	define COUTLN( X )
-#	define COUTLN_V3( X )
-#endif
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	//-----------------------------------------------------
-	namespace privatePhysCo {
-		YAKE_REGISTER_CONCRETE( NativePhysicalVehicleComponent );
-	}
-
-	//-----------------------------------------------------
-	NativePhysicalVehicleComponent::NativePhysicalVehicleComponent(physics::IWorld* pWorld) : 
-		mpPWorld(pWorld),
-		mpPhysical(0),
-		mpChassis(0)
-	{
-		YAKE_ASSERT( mpPWorld );
-	}
-	//-----------------------------------------------------
-	NativePhysicalVehicleComponent::~NativePhysicalVehicleComponent()
-	{
-		_reset();
-	}
-	//-----------------------------------------------------
-	Movable* NativePhysicalVehicleComponent::getChassisMovable()
-	{
-		return mpChassis;
-	}
-	//-----------------------------------------------------
-	Movable* NativePhysicalVehicleComponent::getWheelMovable(const size_t index)
-	{
-		return _getWheel( index );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::_reset()
-	{
-		YAKE_SAFE_DELETE( mpPhysical );
-
-		// wheels
-		VectorIterator< WheelList > itWheel( mWheels.begin(), mWheels.end() );
-		while (itWheel.hasMoreElements())
-		{
-			NativeWheel* pW = itWheel.getNext();
-			if (pW)
-				delete pW;
-		}
-		mWheels.clear();
-		// steer groups
-		VectorIterator< SteerGroupList > itSG( mSteerGroups.begin(), mSteerGroups.end() );
-		while (itSG.hasMoreElements())
-		{
-			SteerGroup* pSG = itSG.getNext();
-			if (pSG)
-				delete pSG;
-		}
-		mSteerGroups.clear();
-		// axles
-		VectorIterator< AxleList > itAxle( mAxles.begin(), mAxles.end() );
-		while (itAxle.hasMoreElements())
-		{
-			Axle* pA = itAxle.getNext();
-			if (pA)
-				delete pA;
-		}
-		mAxles.clear();
-		// engines
-		VectorIterator< EngineList > itEngine( mEngines.begin(), mEngines.end() );
-		while (itEngine.hasMoreElements())
-		{
-			IEngine* pEngine = itEngine.getNext();
-			if (pEngine)
-				delete pEngine;
-		}
-		mEngines.clear();
-		mCarEngines.clear();
-		// chassis
-		YAKE_SAFE_DELETE( mpChassis );
-	}
-	//-----------------------------------------------------
-	bool NativePhysicalVehicleComponent::createFromTemplate( const VehicleTemplate & tpl )
-	{
-		COUTLN("NativePhysicalVehicleComponent::createFromTemplate");
-		_reset();
-
-		// chassis
-		YAKE_ASSERT( mpChassis == 0 );
-		if (mpChassis)
-			return false;
-		//mpChassis = mpPWorld->createBox(1,1,1);
-		mpChassis = mpPWorld->createActor( physics::ACTOR_DYNAMIC );
-		mpChassis->setPosition( tpl.chassisTpl_.position_ );
-		mpChassis->getBody().addMass(
-			physics::IBody::BoxMassDesc( tpl.chassisTpl_.dimensions_.x, tpl.chassisTpl_.dimensions_.y, tpl.chassisTpl_.dimensions_.z, 1.,
-			Vector3( 0,-1,0) ) );
-		mpChassis->getBody().setMass( tpl.chassisTpl_.mass_ );
-
-		//@FIXME material
-		/*
-		mpChassis->setSoftness( 0.01 );
-		mpChassis->setFriction( 5 ); // 100
-		mpChassis->setFriction2( 0.1 ); // 2
-		*/
-
-		ConstVectorIterator< VehicleTemplate::ShapeTemplateList > geomIt( tpl.chassisTpl_.collisionShapes_ );
-		while (geomIt.hasMoreElements())
-		{
-			const VehicleTemplate::ShapeTemplate & shapeTpl = geomIt.getNext();
-			COUTLN(	"  shape type=" << shapeTpl.type_ );
-			physics::IShape* pShape = mpChassis->createShape( *shapeTpl.pDesc_ );
-			YAKE_ASSERT( pShape );
-			if (!pShape)
-				continue;
-		}
-
-		YAKE_ASSERT( mpPhysical == 0 );
-		mpPhysical = new Physical();
-		YAKE_ASSERT( mpPhysical );
-
-		// engines
-		for (size_t i=0; i<tpl.getNumEngines(); ++i)
-		{
-			COUTLN("engine");
-			const VehicleTemplate::EngineTemplate& engineTpl = tpl.getEngine(i);
-
-			try {
-				const VehicleTemplate::CarEngineTemplate& carEngineTpl =
-					static_cast<const VehicleTemplate::CarEngineTemplate&>( engineTpl );
-				NativeCarEngine* pEngine = new NativeCarEngine();
-				if (!pEngine)
-					continue;
-				mEngines.push_back( pEngine );
-				mCarEngines.push_back( pEngine );
-
-				pEngine->setFromTemplate( engineTpl );
-			}
-			catch(...)
-			{
-				YAKE_ASSERT("Only car engine creators supported currently.");
-				YAKE_EXCEPT("Only car engine creators supported currently.");
-			}
-		}
-
-		// axles
-		for (size_t i=0; i<tpl.getNumAxles(); ++i)
-		{
-			const VehicleTemplate::AxleTemplate& axleTpl = tpl.getAxle(i);
-			COUTLN("  axle " << i << " engine= " << axleTpl.idxEngine_);
-
-			YAKE_ASSERT( _getCarEngine( axleTpl.idxEngine_ ) != 0 );
-			// create axle
-			Axle* pAxle = new Axle();
-			YAKE_ASSERT( pAxle );
-			pAxle->engine = _getCarEngine(axleTpl.idxEngine_);
-			YAKE_ASSERT( pAxle->engine );
-			// store axle
-			mAxles.push_back( pAxle );
-		}
-
-		// steer groups
-		for (size_t i=0; i<tpl.getNumSteeringGroups(); ++i)
-		{
-			COUTLN("  steer group " << i);
-			mSteerGroups.push_back( new SteerGroup() );
-		}
-
-		// wheels
-		for (size_t i=0; i<tpl.getNumWheels(); ++i)
-		{
-			const VehicleTemplate::WheelTemplate& wheelTpl = tpl.getWheel(i);
-			COUTLN("  wheel " << i);
-
-			YAKE_ASSERT( _getAxle( wheelTpl.idxAxle_ ) != 0 );
-
-			// create wheel
-			NativeWheel* pW = new NativeWheel(mpPWorld);
-			YAKE_ASSERT( pW );
-			pW->setPosition( wheelTpl.position_ );
-			pW->setRadius( wheelTpl.radius_ );
-			// add wheel to steering group
-			if (wheelTpl.idxSteeringGroup_ >= 0)
-			{
-				SteerGroup* pSG = _getSteerGroup(wheelTpl.idxSteeringGroup_);
-				YAKE_ASSERT( pSG );
-				pSG->wheels.push_back( pW );
-			}
-			// add wheel to axle
-			Axle* pAxle = _getAxle(wheelTpl.idxAxle_);
-			YAKE_ASSERT( pAxle );
-			pAxle->wheels.push_back( pW );
-			// store wheel
-			mWheels.push_back( pW );
-			// create wheel joint
-			physics::IJointPtr pJ = mpPWorld->createJoint( physics::IJoint::DescHinge2(
-				mpChassis, pW->getPhysicsComplex(), Vector3::kUnitY, Vector3::kUnitX, pW->getPosition() ) );
-			YAKE_ASSERT( pJ );
-			pJ->setLimits( 0, 0.f, 0.f );
-			//@FIXME
-			/*
-			pJ->setSpring( 100 );
-			pJ->setDamping( 10 );
-			*/
-			//
-			pW->setJoint( pJ );
-			mpPhysical->addJoint( pJ );
-			//
-			pW->setSuspension( wheelTpl.suspensionSpring_, wheelTpl.suspensionDamping_ );
-		}
-
-		return true;
-	}
-	//-----------------------------------------------------
-	NativePhysicalVehicleComponent::SteerGroup* 
-		NativePhysicalVehicleComponent::_getSteerGroup(const size_t index) const
-	{
-		if (index >= mSteerGroups.size())
-			return 0;
-		return mSteerGroups[index];
-	}
-	//-----------------------------------------------------
-	IEngine* 
-		NativePhysicalVehicleComponent::_getEngine(const size_t index) const
-	{
-		if (index >= mEngines.size())
-			return 0;
-		return mEngines.at(index);
-	}
-	//-----------------------------------------------------
-	NativeCarEngine* 
-		NativePhysicalVehicleComponent::_getCarEngine(const size_t index) const
-	{
-		if (index >= mCarEngines.size())
-			return 0;
-		return mCarEngines.at(index);
-	}
-	//-----------------------------------------------------
-	NativePhysicalVehicleComponent::Axle* 
-		NativePhysicalVehicleComponent::_getAxle(const size_t index) const
-	{
-		if (index >= mAxles.size())
-			return 0;
-		return mAxles[index];
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::update(const real timeElapsed)
-	{
-		//YAKE_ASSERT( mpModel );
-		//mpModel->updatePhysics( timeElapsed );
-		//mpModel->updateControllers( timeElapsed );
-	}
-	//-----------------------------------------------------
-	IEngine* NativePhysicalVehicleComponent::getEngine(const size_t index)
-	{
-		return _getEngine(index);
-	}
-	//-----------------------------------------------------
-	NativeWheel* NativePhysicalVehicleComponent::_getWheel(const size_t index) const
-	{
-		if (index >= mWheels.size())
-			return 0;
-		return mWheels[index];
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setWheelMass(const size_t index, const real mass)
-	{
-		NativeWheel* pWheel = _getWheel( index );
-		YAKE_ASSERT( pWheel );
-		pWheel->setMass( mass );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setWheelRadius(const size_t index, const real r)
-	{
-		NativeWheel* pWheel = _getWheel( index );
-		YAKE_ASSERT( pWheel );
-		pWheel->setRadius( r );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setWheelPosition(const size_t index, const Vector3 & position)
-	{
-		NativeWheel* pWheel = _getWheel( index );
-		YAKE_ASSERT( pWheel );
-		pWheel->setPosition( position );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setWheelSuspension(const size_t index, const real stiffness) 
-	{
-		NativeWheel* pWheel = _getWheel( index );
-		YAKE_ASSERT( pWheel );
-		YAKE_ASSERT( 1== 0 );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setWheelFriction(const size_t index, const real f) 
-	{
-		NativeWheel* pWheel = _getWheel( index );
-		YAKE_ASSERT( pWheel );
-		YAKE_ASSERT( 1== 0 );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setWheelLateralFriction(const size_t index, const real f)
-	{
-		NativeWheel* pWheel = _getWheel( index );
-		YAKE_ASSERT( pWheel );
-		YAKE_ASSERT( 1== 0 );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setSteer(const size_t index, const real steerValue) 
-	{
-		SteerGroup* pSG = _getSteerGroup(index);
-		YAKE_ASSERT( pSG );
-		pSG->steer = steerValue;
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setBrake(const size_t index, const real brakeValue)
-	{
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::setEngineThrottle(const size_t index, const real throttle)
-	{
-		IEngine* pEngine = _getEngine(index);
-		YAKE_ASSERT( pEngine );
-		pEngine->setThrottle( throttle );
-	}
-	//-----------------------------------------------------
-	void NativePhysicalVehicleComponent::translate( const Vector3 & d )
-	{
-		YAKE_ASSERT( mpChassis );
-		mpChassis->translate( d );
-		VectorIterator< WheelList > itW( mWheels.begin(), mWheels.end() );
-		while (itW.hasMoreElements())
-			itW.getNext()->translate( d );
-	}
-
-} // ns vehicle
-} // ns model
-} // ns yake

Deleted: trunk/yake/src/yapp/model/yakeNativeWheel.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeNativeWheel.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeNativeWheel.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,229 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeNativeWheel.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	//-----------------------------------------------------
-	NativeWheel::NativeWheel(physics::IWorld* pPWorld) : mCO(0), mJoint(0)
-	{
-		YAKE_ASSERT( pPWorld );
-		mCO = pPWorld->createActor( physics::ACTOR_DYNAMIC );
-		YAKE_ASSERT( mCO );
-
-		mCO->createShape( physics::IShape::SphereDesc(1) );
-
-		mCO->getBody().setMass( physics::IBody::SphereMassDesc(1,1) );
-		mCO->getBody().setMass( 1 );
-
-		mCO->setPosition(Vector3::kZero);
-		mCO->setOrientation(Quaternion::kIdentity);
-
-		//@fixme lateral slip
-		//mCO->setLateralSlipEnabled( true );
-		//mCO->setSlipCoefficients( 0.1, 0. );
-		//mCO->setSlipNormalSource( this );
-
-	}
-	//-----------------------------------------------------
-	NativeWheel::~NativeWheel()
-	{
-		YAKE_ASSERT( mCO );
-		if (mJoint)
-			mCO->getCreator()->destroyJoint( mJoint );
-		mCO->getCreator()->destroyActor( mCO );
-		mCO = 0;
-	}
-	//-----------------------------------------------------
-	void NativeWheel::setRadius( const real radius )
-	{
-		YAKE_ASSERT( mCO );
-		physics::IShapePtrList v = mCO->getShapes();
-		YAKE_ASSERT( v.size() == 1 );
-		physics::IShape* pShape = v.front();
-		mCO->destroyShape( pShape );
-
-		mCO->createShape( physics::IShape::SphereDesc(radius) );
-	}
-	//-----------------------------------------------------
-	void NativeWheel::setMass( const real mass )
-	{
-		YAKE_ASSERT( mCO );
-		mCO->getBody().setMass( mass );
-	}
-	//-----------------------------------------------------
-	void NativeWheel::setPosition(const Vector3 & rPosition)
-	{
-		YAKE_ASSERT( mCO );
-		mCO->setPosition( rPosition );
-	}
-	//-----------------------------------------------------
-	void NativeWheel::setOrientation(const Quaternion& rOrientation)
-	{
-		YAKE_ASSERT( mCO );
-		mCO->setOrientation( rOrientation );
-	}
-	//-----------------------------------------------------
-	Vector3 NativeWheel::getPosition() const
-	{
-		YAKE_ASSERT( mCO );
-		return mCO->getPosition();
-	}
-	//-----------------------------------------------------
-	Quaternion NativeWheel::getOrientation() const
-	{
-		YAKE_ASSERT( mCO );
-		return mCO->getOrientation();
-	}
-	//-----------------------------------------------------
-	SharedPtr<model::CachedInterpolator<real> > NativeWheel::_getLinSkidCache()
-	{
-		if (mLinSkidCache.get() == 0)
-		{
-			mLinSkidCache.reset( new model::CachedInterpolator<real>(8) );
-			mLinSkidCache->setWeight(0, real(1.0));
-			mLinSkidCache->setWeight(0, real(0.8));
-			mLinSkidCache->setWeight(0, real(0.6));
-			mLinSkidCache->setWeight(0, real(0.5));
-			mLinSkidCache->setWeight(0, real(0.4));
-			mLinSkidCache->setWeight(0, real(0.3));
-			mLinSkidCache->setWeight(0, real(0.2));
-			mLinSkidCache->setWeight(0, real(0.1));
-		}
-		return mLinSkidCache;
-	}
-	//-----------------------------------------------------
-	SharedPtr<model::CachedInterpolator<real> > NativeWheel::_getAngSkidCache()
-	{
-		if (mAngSkidCache.get() == 0)
-		{
-			mAngSkidCache.reset( new model::CachedInterpolator<real>(8) );
-			mAngSkidCache->setWeight(0, real(1.0));
-			mAngSkidCache->setWeight(0, real(0.8));
-			mAngSkidCache->setWeight(0, real(0.6));
-			mAngSkidCache->setWeight(0, real(0.5));
-			mAngSkidCache->setWeight(0, real(0.4));
-			mAngSkidCache->setWeight(0, real(0.3));
-			mAngSkidCache->setWeight(0, real(0.2));
-			mAngSkidCache->setWeight(0, real(0.1));
-		}
-		return mAngSkidCache;
-	}
-	//-----------------------------------------------------
-	physics::IActor* NativeWheel::getPhysicsComplex() const
-	{
-		return mCO;
-	}
-	//-----------------------------------------------------
-	Vector3 NativeWheel::getLateralSlipNormal() const
-	{
-		//YAKE_ASSERT( mJoint );
-		//return mJoint->getAxis2();
-		YAKE_ASSERT( 1==0 && "NEEDS IMPLEMENTATION!" ).warning("NEEDS IMPLEMENTATION");
-		return Vector3();
-	}
-	//-----------------------------------------------------
-	void NativeWheel::setJoint( physics::IJointPtr jt )
-	{
-		mJoint = jt;
-	}
-	//-----------------------------------------------------
-	void NativeWheel::setSuspension( const real spring, const real damping )
-	{
-		YAKE_ASSERT( mJoint );
-		mJoint->setSpring( spring );
-		mJoint->setDamping( damping );
-	}
-	//-----------------------------------------------------
-	real NativeWheel::getSuspensionSpring() const
-	{
-		YAKE_ASSERT( mJoint );
-		return mJoint->getSpring();
-	}
-	//-----------------------------------------------------
-	real NativeWheel::getSuspensionDamping() const
-	{
-		YAKE_ASSERT( mJoint );
-		return mJoint->getDamping();
-	}
-	//-----------------------------------------------------
-	void NativeWheel::applySteer( real steer )
-	{
-		real epsilon = real(0.015);
-		//if (steer < 0) epsilon *= -1;
-		if (steer > -0.04 && steer < 0.04)
-		{
-			steer = 0;
-			epsilon = 0;
-		}
-		//mJoint->setLowStop( steer - epsilon );
-		//mJoint->setHighStop( steer + epsilon );
-		mJoint->setLimits( 0, steer - epsilon, steer + epsilon );
-	}
-	//-----------------------------------------------------
-	void NativeWheel::applyTq( const Vector3 & torque )
-	{
-		mCO->getBody().addTorque( mCO->getOrientation() * torque );
-	}
-	//-----------------------------------------------------
-	void NativeWheel::applyBrakeTq( const Vector3 & torque )
-	{
-		Vector3 linVel = mCO->getBody().getLinearVelocity();
-		Vector3 dir = mCO->getOrientation() * Vector3::kUnitZ;
-		if (dir.dotProduct(linVel) > 0)
-			mCO->getBody().addLocalTorque( torque );
-		else
-			mCO->getBody().addLocalTorque( -torque );
-	}
-	//-----------------------------------------------------
-	void NativeWheel::apply( real velocity, real fmax )
-	{
-		if (mJoint->getType() == physics::JT_HINGE)
-		{
-			mJoint->setMotorEnabled(0,true);
-			mJoint->setMotor(0, velocity, fmax );
-		}
-		else
-		{
-			mJoint->setMotorEnabled(1,true);
-			mJoint->setMotor(1, velocity, fmax );
-		}
-	}
-	//-----------------------------------------------------
-	physics::IJoint* NativeWheel::getJoint() const
-	{
-		return mJoint;
-	}
-
-
-}
-}
-}

Deleted: trunk/yake/src/yapp/model/yakeVehicle.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicle.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeVehicle.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,86 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeVehiclePhysicalComponent.h>
-//#include <yake/samples/common/yakeTrailGeometryCreator.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	//-----------------------------------------------------
-	Vehicle::Vehicle() : mComplex(0), mPhysics(0)
-	{
-	}
-	//-----------------------------------------------------
-	Vehicle::~Vehicle()
-	{
-		YAKE_SAFE_DELETE( mComplex );
-		YAKE_SAFE_DELETE( mPhysics );
-	}
-	//-----------------------------------------------------
-	void Vehicle::setPhysicalComponent(IPhysicalVehicleComponent* pPhysical)
-	{
-		YAKE_ASSERT( !mPhysics );
-		mPhysics = pPhysical;
-	}
-	//-----------------------------------------------------
-	void Vehicle::update(real timeElapsed)
-	{
-		if (mPhysics)
-			mPhysics->update(timeElapsed);
-		if (mComplex)
-		{
-			mComplex->updatePhysics(timeElapsed);
-			mComplex->updateGraphics(timeElapsed);
-		}
-	}
-	//-----------------------------------------------------
-	//void Vehicle::onAct()
-	//{
-	//	IPhysicalVehicleComponent* pPC = 
-	//		static_cast<IPhysicalVehicleComponent*>(getComponent("core"));
-	//	if (!pPC)
-	//		return;
-	//	pPC->update(real(0.01)); //@todo use elapsed time!
-
-	//	YAKE_ASSERT( mComplex );
-	//	mComplex->updatePhysics( real(0.01) ); //@todo use elapsed time!
-	//	mComplex->updateGraphics( real(0.01) ); //@todo use elapsed time!
-	//}
-	//-----------------------------------------------------
-	void Vehicle::setModel( complex::Model* pComplex )
-	{
-		YAKE_ASSERT( pComplex );
-		mComplex = pComplex;
-	}
-
-
-}
-}
-}

Deleted: trunk/yake/src/yapp/model/yakeVehiclePhysicalComponent.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehiclePhysicalComponent.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeVehiclePhysicalComponent.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,45 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeActor.h>
-#include <yapp/model/yakeVehicleSystem.h>
-#include <yapp/model/yakeVehiclePhysicalComponent.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	//-----------------------------------------------------
-	YAKE_IMPLEMENT_REGISTRY( IPhysicalVehicleComponent );
-	YAKE_IMPLEMENT_REGISTRY( IVehicleSystem );
-	YAKE_REGISTER_CONCRETE( NativeVehicleSystem );
-
-} // ns vehicle
-} // ns model
-} // ns yake
-

Deleted: trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeVehicleSerializerXML.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,447 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright  2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yake/data/yakeData.h>
-#include <yapp/model/yakeVehicleSerializerXML.h>
-
-#pragma warning(disable: 4244)
-
-#ifdef YAKE_DEBUG
-#	define COUTLN( X ) \
-		std::cout << X << std::endl;
-#	define COUTLN_V3( X ) \
-		std::cout << #X << " (" << X.x << ", " << X.y << ", " << X.z << ")" << std::endl;
-#else
-#	define COUTLN( X )
-#	define COUTLN_V3( X )
-#endif
-
-namespace yake {
-namespace data {
-namespace serializer {
-namespace vehicle {
-	
-	//------------------------------------------------------
-	VehicleSerializer::VehicleSerializer() : mpTpl(0)
-	{
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::reset()
-	{
-		mDocNode.reset();
-		mpTpl = 0;
-	}
-
-	//------------------------------------------------------
-	bool VehicleSerializer::load(	const SharedPtr<dom::INode> & docNode,
-									model::vehicle::VehicleTemplate& tpl)
-	{
-		COUTLN( "load()" );
-		YAKE_ASSERT( docNode.get() );
-		if (!docNode.get())
-			return false;
-		mDocNode = docNode;
-		mpTpl = &tpl;
-		//
-		COUTLN( "parsing vehicle..." );
-		readVehicle( mDocNode );
-
-		//
-		return true;
-	}
-
-	//------------------------------------------------------
-	void VehicleSerializer::readVehicle( const SharedPtr<dom::INode> & pNode )
-	{
-		
-		const String name = pNode->getName();
-		COUTLN( "readVehicle() [" << name << "]" );
-		YAKE_ASSERT( pNode );
-
-		SharedPtr<dom::INode> pNodes = pNode->getNodeByName( "chassis" );
-		COUTLN( "scene: found chassis = " << (pNodes.get() ? "yes" : "no") );
-		if (pNodes.get())
-			readChassis( pNodes );
-
-		pNodes = pNode->getNodeByName("engines");
-		COUTLN( "scene: found engines = " << (pNodes.get() ? "yes" : "no") );
-		if (pNodes.get())
-			readEngines( pNodes );
-
-		pNodes = pNode->getNodeByName("axles");
-		COUTLN( "scene: found axles = " << (pNodes.get() ? "yes" : "no") );
-		if (pNodes.get())
-			readAxles( pNodes );
-
-		pNodes = pNode->getNodeByName("wheels");
-		COUTLN( "scene: found wheels = " << (pNodes.get() ? "yes" : "no") );
-		if (pNodes.get())
-			readWheels( pNodes );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readEngines( const SharedPtr<dom::INode> & pNodes )
-	{
-		COUTLN( "readEngines()" );
-		YAKE_ASSERT( pNodes );
-		const dom::NodeList & nodes = pNodes->getNodes();
-		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			readEngine( (*it) );
-		}
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readEngine( const SharedPtr<dom::INode> & pNode )
-	{
-		String id = pNode->getAttributeValueAs<String>( "id" );
-		String tag = pNode->getAttributeValueAs<String>( "tag" );
-		COUTLN( "readEngine() [id=" << id << " tag=" << tag << "]" );
-		YAKE_ASSERT( pNode );
-
-		// create template
-		model::vehicle::VehicleTemplate::CarEngineTemplate engineTpl;
-
-		const dom::NodeList & nodes = pNode->getNodes();
-		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			String childNodeName = (*it)->getName();
-			childNodeName = ::yake::StringUtil::toLowerCase(childNodeName);
-			COUTLN( "   (child: " <<  childNodeName << ")" );
-
-			const SharedPtr<dom::INode> & pChild = (*it);
-			if (childNodeName == "rpm")
-			{
-				readRPM( pChild, engineTpl );
-			}
-		}
-
-		YAKE_ASSERT( mpTpl );
-		mpTpl->addEngine( engineTpl );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readRPM( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl )
-	{
-		COUTLN( "  readRPM()" );
-		YAKE_ASSERT( pNode );
-
-		engineTpl.rpmMin_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "min" ) );
-		engineTpl.rpmMax_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "max" ) );
-		engineTpl.rpmRedline_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "redline" ) );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readGearbox( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::CarEngineTemplate& engineTpl )
-	{
-		using namespace model::vehicle;
-		COUTLN( "  readGearbox()" );
-		YAKE_ASSERT( pNode );
-		const dom::NodeList & nodes = pNode->getNodes();
-		ConstVectorIterator< dom::NodeList > it( nodes.begin(), nodes.end() );
-		while (it.hasMoreElements())
-		{
-			const SharedPtr<dom::INode> & pGearNode = it.getNext();
-			VehicleTemplate::GearTemplate gear;
-			String mode = pGearNode->getAttributeValueAs<String>("mode");
-			if (mode == "reverse")
-				gear.mode_ = VehicleTemplate::GM_REVERSE;
-			else if (mode == "neutral")
-				gear.mode_ = VehicleTemplate::GM_NEUTRAL;
-			else
-				gear.mode_ = VehicleTemplate::GM_FORWARD;
-			if (gear.mode_ != VehicleTemplate::GM_NEUTRAL)
-				gear.ratio_ = StringUtil::toReal( pNode->getAttributeValueAs<String>("ratio") );
-			else
-				gear.ratio_ = 0.;
-
-			engineTpl.gears_.push_back( gear );
-		}
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readAxles( const SharedPtr<dom::INode> & pNodes )
-	{
-		COUTLN( "readAxles()" );
-		YAKE_ASSERT( pNodes );
-		const dom::NodeList & nodes = pNodes->getNodes();
-		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			readAxle( (*it) );
-		}
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readAxle( const SharedPtr<dom::INode> & pNode )
-	{
-		String id = pNode->getAttributeValueAs<String>( "id" );
-		String tag = pNode->getAttributeValueAs<String>( "tag" );
-		String engineId = pNode->getAttributeValueAs<String>( "engine" );
-		COUTLN( "readAxle() [id=" << id << " tag=" << tag << " engine=" << engineId << "]" );
-		YAKE_ASSERT( pNode );
-
-		model::vehicle::VehicleTemplate::AxleTemplate axleTpl;
-		axleTpl.efficiency_ = 0.75;
-		axleTpl.idxEngine_ = StringUtil::toInt32(engineId);
-
-		YAKE_ASSERT( mpTpl );
-		mpTpl->addAxle( axleTpl );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readWheels( const SharedPtr<dom::INode> & pNodes )
-	{
-		COUTLN( "readWheels()" );
-		YAKE_ASSERT( pNodes );
-		const dom::NodeList & nodes = pNodes->getNodes();
-		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			readWheel( (*it) );
-		}
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readWheel( const SharedPtr<dom::INode> & pNode )
-	{
-		String id = pNode->getAttributeValueAs<String>( "id" );
-		String tag = pNode->getAttributeValueAs<String>( "tag" );
-		String axleId = pNode->getAttributeValueAs<String>( "axle" );
-		COUTLN( "readWheel() [id=" << id << " tag=" << tag << " axle=" << axleId << "]" );
-		YAKE_ASSERT( pNode );
-
-		model::vehicle::VehicleTemplate::WheelTemplate wheelTpl;
-
-		// physical representation of the wheel
-		wheelTpl.radius_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "radius" ) );
-		wheelTpl.mass_ = StringUtil::toReal( pNode->getAttributeValueAs<String>( "mass" ) );
-		Vector3 position(0,0,0);
-		SharedPtr<dom::INode> pPosNode = pNode->getNodeByName("position");
-		if (pPosNode.get())
-		{
-			readPosition( pPosNode, position );
-		}
-
-		String gfxName;
-		SharedPtr<dom::INode> pGfxNode = pNode->getNodeByName("gfx");
-		if (pGfxNode.get())
-		{
-			gfxName = pGfxNode->getAttributeValueAs<String>( "name" );
-			COUTLN( "  gfx = " << gfxName );
-		}
-
-		wheelTpl.position_ = position;
-		wheelTpl.bMassIsRelativeToChassisMass_ = 
-					( pGfxNode->getAttributeValueAs<String>( "name" ) == "relative");
-		wheelTpl.gfxDescriptor_ = gfxName;
-		wheelTpl.gfxDescriptorType_ = "scene";
-		wheelTpl.idxAxle_ = StringUtil::toInt32( axleId );
-		//wheelTpl.idxSteeringGroup_ = StringUtil::toInt32( steerId );
-		wheelTpl.idxSteeringGroup_ = -1;
-
-		SharedPtr<dom::INode> pSuspNode = pNode->getNodeByName("suspension");
-		if (pSuspNode.get())
-		{
-			readSuspension( pSuspNode, wheelTpl.suspensionSpring_, wheelTpl.suspensionDamping_ );
-		}
-		else
-		{
-			wheelTpl.suspensionSpring_ = 30;
-			wheelTpl.suspensionDamping_ = 3;
-		}
-
-		YAKE_ASSERT( mpTpl );
-		mpTpl->addWheel( wheelTpl );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readSuspension( const SharedPtr<dom::INode> & pNode, real & spring, real & damping )
-	{
-		COUTLN( "readSuspension()" );
-		YAKE_ASSERT( pNode );
-		spring = atof( pNode->getAttributeValueAs<String>("spring").c_str() );
-		damping = atof( pNode->getAttributeValueAs<String>("damping").c_str() );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readChassis( const SharedPtr<dom::INode> & pNode )
-	{
-		COUTLN( "readChassis()" );
-		YAKE_ASSERT( pNode );
-
-		model::vehicle::VehicleTemplate::ChassisTemplate chassisTpl;
-		chassisTpl.mass_ = 1.5;
-
-		const dom::NodeList & nodes = pNode->getNodes();
-		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			String childNodeName = (*it)->getName();
-			childNodeName = ::yake::StringUtil::toLowerCase(childNodeName);
-			COUTLN( "   (child: " <<  childNodeName << ")" );
-
-			const SharedPtr<dom::INode> & pChild = (*it);
-			if (childNodeName == "physics")
-			{
-				chassisTpl.mass_ = StringUtil::toReal( pChild->getAttributeValueAs<String>( "mass" ) );
-			}
-		}
-
-		String gfxName;
-		SharedPtr<dom::INode> pGfxNode = pNode->getNodeByName("gfx");
-		if (pGfxNode.get())
-		{
-			gfxName = pGfxNode->getAttributeValueAs<String>( "name" );
-		}
-
-		chassisTpl.gfxDescriptor_ = gfxName;
-
-		chassisTpl.position_ = Vector3(0,0,0);
-		SharedPtr<dom::INode> pPosNode = pNode->getNodeByName("position");
-		if (pPosNode.get())
-			readPosition( pPosNode, chassisTpl.position_ );
-
-		SharedPtr<dom::INode> pDimNode = pNode->getNodeByName("dimensions");
-		if (pDimNode.get())
-			readGeomDimensions( pDimNode, chassisTpl.dimensions_ );
-
-		SharedPtr<dom::INode> pGeomsNode = pNode->getNodeByName("geoms");
-		if (pGeomsNode.get())
-			readGeoms( pGeomsNode, chassisTpl );
-
-		YAKE_ASSERT( mpTpl );
-		mpTpl->chassisTpl_ = chassisTpl;
-
-		COUTLN(	" pos=" << chassisTpl.position_.x << ", " << chassisTpl.position_.y << ", " << chassisTpl.position_.z <<
-				" dim=" << chassisTpl.dimensions_.x << ", " << chassisTpl.dimensions_.y << ", " << chassisTpl.dimensions_.z );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readGeoms( const SharedPtr<dom::INode> & pNodes, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl )
-	{
-		YAKE_ASSERT( pNodes );
-		COUTLN("readGeoms() (children=" << pNodes->getNodes().size() << ")");
-		const dom::NodeList & nodes = pNodes->getNodes();
-		for (dom::NodeList::const_iterator it = nodes.begin(); it != nodes.end(); ++it)
-		{
-			readGeom( (*it), chassisTpl );
-			const model::vehicle::VehicleTemplate::ShapeTemplate & geomTpl = chassisTpl.collisionShapes_.back();
-			COUTLN(	"  geom type=" << geomTpl.type_ <<
-					" pos=" << geomTpl.position_.x << ", " << geomTpl.position_.y << ", " << geomTpl.position_.z );
-//					" dim=" << geomTpl.dimensions_.x << ", " << geomTpl.dimensions_.y << ", " << geomTpl.dimensions_.z );
-		}
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readGeom( const SharedPtr<dom::INode> & pNode, model::vehicle::VehicleTemplate::ChassisTemplate & chassisTpl )
-	{
-		YAKE_ASSERT( pNode );
-		COUTLN("readGeom() == " << pNode->getAttributeValueAs<String>("type"));
-		model::vehicle::VehicleTemplate::ShapeTemplate geomTpl;
-
-		// dimensions
-		SharedPtr<dom::INode> pTmpNode = pNode->getNodeByName("dimensions");
-		//if (pTmpNode.get())
-		//{
-		//	readGeomDimensions( pTmpNode, geomTpl.dimensions_ );
-		//	String mode = StringUtil::toLowerCase( pTmpNode->getAttributeValueAs<String>("mode") );
-		//	if (mode == "relative")
-		//	{
-		//		geomTpl.dimensions_.x *= chassisTpl.dimensions_.x;
-		//		geomTpl.dimensions_.y *= chassisTpl.dimensions_.y;
-		//		geomTpl.dimensions_.z *= chassisTpl.dimensions_.z;
-		//	}
-		//}
-		//else
-		//	geomTpl.dimensions_ = Vector3(0.1,0.1,0.1);
-
-		geomTpl.position_ = Vector3(0,0,0);
-		pTmpNode = pNode->getNodeByName("position");
-		if (pTmpNode.get())
-			readPosition( pTmpNode, geomTpl.position_ );
-
-		String geomType = StringUtil::toLowerCase( pNode->getAttributeValueAs<String>("type") );
-		if (geomType == "sphere")
-		{
-			geomTpl.type_ = physics::ST_SPHERE;
-			real radius = atof( pNode->getAttributeValueAs<String>("radius").c_str() );
-			geomTpl.pDesc_.reset( new physics::IShape::SphereDesc(radius) );
-		}
-		else if (geomType == "box")
-		{
-			geomTpl.type_ = physics::ST_BOX;
-			Vector3 dimensions(1,1,1);
-			dimensions.x = atof( pNode->getAttributeValueAs<String>("boxx").c_str() );
-			dimensions.y = atof( pNode->getAttributeValueAs<String>("boxy").c_str() );
-			dimensions.z = atof( pNode->getAttributeValueAs<String>("boxz").c_str() );
-			geomTpl.pDesc_.reset( new physics::IShape::BoxDesc(dimensions) );
-		}
-
-		COUTLN("  -> type= " << geomType );
-
-		chassisTpl.collisionShapes_.push_back( geomTpl );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readGeomDimensions( const SharedPtr<dom::INode> & pNode, Vector3 & dimensions )
-	{
-		COUTLN("  readGeomDimensions()");
-		YAKE_ASSERT( pNode );
-		dimensions.x = atof( pNode->getAttributeValueAs<String>("x").c_str() );
-		dimensions.y = atof( pNode->getAttributeValueAs<String>("y").c_str() );
-		dimensions.z = atof( pNode->getAttributeValueAs<String>("z").c_str() );
-	}
-	//------------------------------------------------------
-	void VehicleSerializer::readPosition( const SharedPtr<dom::INode> & pNode, Vector3 & position )
-	{
-		YAKE_ASSERT( pNode );
-		position.x = atof( pNode->getAttributeValueAs<String>("x").c_str() );
-		position.y = atof( pNode->getAttributeValueAs<String>("y").c_str() );
-		position.z = atof( pNode->getAttributeValueAs<String>("z").c_str() );
-	}
-
-	//------------------------------------------------------
-	void VehicleSerializer::readOrientation( const SharedPtr<dom::INode> & pNode, Quaternion & orientation )
-	{
-		YAKE_ASSERT( pNode );
-		if (pNode->getAttributeValueAs<String>("qx") != "")
-		{
-			orientation.x = atof( pNode->getAttributeValueAs<String>("qx").c_str() );
-			orientation.y = atof( pNode->getAttributeValueAs<String>("qy").c_str() );
-			orientation.z = atof( pNode->getAttributeValueAs<String>("qz").c_str() );
-			orientation.w = atof( pNode->getAttributeValueAs<String>("qw").c_str() );
-		}
-		if (pNode->getAttributeValueAs<String>("axisx") != "")
-		{
-			Vector3 axis;
-			axis.x = atof( pNode->getAttributeValueAs<String>("axisx").c_str() );
-			axis.y = atof( pNode->getAttributeValueAs<String>("axisy").c_str() );
-			axis.z = atof( pNode->getAttributeValueAs<String>("axisz").c_str() );
-			orientation.FromAxes( &axis );
-		}
-		if (pNode->getAttributeValueAs<String>("anglex") != "")
-		{
-			Vector3 axis;
-			axis.x = atof( pNode->getAttributeValueAs<String>("anglex").c_str() );
-			axis.y = atof( pNode->getAttributeValueAs<String>("anglex").c_str() );
-			axis.z = atof( pNode->getAttributeValueAs<String>("anglex").c_str() );
-			real angle = atof( pNode->getAttributeValueAs<String>("angle").c_str() );;
-			orientation.FromAngleAxis( angle, axis );
-		}
-	}
-
-} // dotscene
-} // serializer
-} // data
-} // yake

Deleted: trunk/yake/src/yapp/model/yakeVehicleSystem.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicleSystem.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeVehicleSystem.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,237 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeActor.h>
-#include <yapp/model/yakeVehicleSystem.h>
-#include <yapp/model/yakeEngine.h>
-#include <yapp/model/yakeNativeEngine.h>
-#include <yapp/model/yakeNativeWheel.h>
-#include <yapp/model/yakeVehiclePhysicalComponent.h>
-#include <yapp/model/yakeNativeVehiclePhysicalComponent.h>
-#include <yapp/model/yakeVehicleSerializerXML.h> // temporarily
-#include <yake/data/yakeData.h>
-
-#ifdef YAKE_DEBUG
-#	define COUTLN( X ) \
-		std::cout << X << std::endl;
-#	define COUTLN_V3( X ) \
-		std::cout << #X << " (" << X.x << ", " << X.y << ", " << X.z << ")" << std::endl;
-#else
-#	define COUTLN( X )
-#	define COUTLN_V3( X )
-#endif
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	//-----------------------------------------------------
-	YAKE_REGISTER_CONCRETE( NativeVehicleSystem );
-
-	//-----------------------------------------------------
-	class VehicleCreatorHelperV1
-	{
-	public:
-		VehicleCreatorHelperV1( VehicleTemplate & tpl, IPhysicalVehicleComponent* pPC, model::complex::Model* pComplex, graphics::IWorld* pGWorld );
-		bool create();
-	protected:
-		virtual void onChassis( VehicleTemplate::ChassisTemplate & tpl );
-		virtual void onEngine( const size_t index, const VehicleTemplate::EngineTemplate & tpl );
-		virtual void onAxle( const size_t index, const VehicleTemplate::AxleTemplate & tpl );
-		virtual void onWheel( const size_t index, const VehicleTemplate::WheelTemplate & tpl );
-	private:
-		model::complex::Model*				mComplex;
-		graphics::IWorld*			mGWorld;
-		VehicleTemplate						mTpl;
-		IPhysicalVehicleComponent*			mPC;
-	};	
-	//-----------------------------------------------------
-	VehicleCreatorHelperV1::VehicleCreatorHelperV1(VehicleTemplate & tpl, IPhysicalVehicleComponent* pPC, model::complex::Model* pComplex, graphics::IWorld* pGWorld ) :
-			mTpl( tpl ),
-			mComplex( pComplex ),
-			mGWorld( pGWorld ),
-			mPC( pPC )
-	{
-		YAKE_ASSERT( mComplex );
-		YAKE_ASSERT( mGWorld );
-		YAKE_ASSERT( mPC );
-	}
-	//-----------------------------------------------------
-	bool VehicleCreatorHelperV1::create()
-	{
-		// physical representation of the wheel
-		YAKE_ASSERT( mPC );
-		mPC->createFromTemplate( mTpl );
-
-		// graphics representation
-		onChassis( mTpl.chassisTpl_ );
-
-		for (size_t i=0; i<mTpl.getNumEngines(); ++i)
-			onEngine( i, mTpl.getEngine(i) );
-		for (size_t i=0; i<mTpl.getNumWheels(); ++i)
-			onWheel( i, mTpl.getWheel(i) );
-
-		return true;
-	}
-	//-----------------------------------------------------
-	void VehicleCreatorHelperV1::onChassis( VehicleTemplate::ChassisTemplate & tpl )
-	{
-		COUTLN("onChassis");
-		// graphics representation
-		model::Graphical* pGraphical = new model::Graphical();
-		YAKE_ASSERT( pGraphical );
-		pGraphical->fromDotScene( tpl.gfxDescriptor_, mGWorld );
-		mComplex->addGraphical( SharedPtr<model::Graphical>(pGraphical) );
-
-		// tie all root scene nodes to the physics object
-		const model::Graphical::SceneNodeList & nodes = pGraphical->getSceneNodes();
-		ConstVectorIterator< model::Graphical::SceneNodeList > it(nodes.begin(), nodes.end());
-		while (it.hasMoreElements())
-		{
-			graphics::ISceneNode* pSN = it.getNext();
-			YAKE_ASSERT( pSN );
-
-			Movable* pM = mPC->getChassisMovable();
-			COUTLN("  binding sn to chassis (pos=" << pM->getPosition().x << ", " << pM->getPosition().y << ", " << pM->getPosition().z << ")");
-
-			model::MovableUpdateController* pMUC = new model::MovableUpdateController();
-			YAKE_ASSERT( pMUC );
-			mComplex->addGraphicsController( SharedPtr<model::IObjectController>(pMUC) );
-			pMUC->setUpdateSource( mPC->getChassisMovable() );
-			pMUC->subscribeToPositionChanged( pSN );
-			pMUC->subscribeToOrientationChanged( pSN );
-		}
-	}
-	//-----------------------------------------------------
-	void VehicleCreatorHelperV1::onEngine( const size_t index, const VehicleTemplate::EngineTemplate & tpl )
-	{
-	}
-	//-----------------------------------------------------
-	void VehicleCreatorHelperV1::onAxle( const size_t index, const VehicleTemplate::AxleTemplate & tpl )
-	{
-	}
-	//-----------------------------------------------------
-	void VehicleCreatorHelperV1::onWheel( const size_t index, const VehicleTemplate::WheelTemplate & tpl )
-	{
-		COUTLN("onWheel");
-
-		YAKE_ASSERT( mPC );
-		YAKE_ASSERT( mComplex );
-
-		// graphics representation
-		model::Graphical* pGraphical = new model::Graphical();
-		YAKE_ASSERT( pGraphical );
-		pGraphical->fromDotScene( tpl.gfxDescriptor_, mGWorld );
-		mComplex->addGraphical( SharedPtr<model::Graphical>(pGraphical) );
-
-		// tie all root scene nodes to the physics object
-		const model::Graphical::SceneNodeList & nodes = pGraphical->getSceneNodes();
-		ConstVectorIterator< model::Graphical::SceneNodeList > it(nodes.begin(), nodes.end());
-		while (it.hasMoreElements())
-		{
-			graphics::ISceneNode* pSN = it.getNext();
-			YAKE_ASSERT( pSN );
-
-			Movable* pM = mPC->getWheelMovable(index);
-			COUTLN("  binding sn to wheel (pos=" << pM->getPosition().x << ", " << pM->getPosition().y << ", " << pM->getPosition().z << ")");
-
-			model::MovableUpdateController* pMUC = new model::MovableUpdateController();
-			YAKE_ASSERT( pMUC );
-			mComplex->addGraphicsController( SharedPtr<model::IObjectController>(pMUC) );
-			pMUC->setUpdateSource( mPC->getWheelMovable(index) );
-			pMUC->subscribeToPositionChanged( pSN );
-			pMUC->subscribeToOrientationChanged( pSN );
-		}
-	}
-
-	//-----------------------------------------------------
-	Vehicle* NativeVehicleSystem::createVehicle(const ::yake::String & rTemplate, physics::IWorld* pPWorld, graphics::IWorld* pGWorld)
-	{
-		YAKE_ASSERT( pPWorld );
-		YAKE_ASSERT( pGWorld );
-		Vehicle* pVehicle = new Vehicle();
-		YAKE_ASSERT( pVehicle );
-
-		::yake::model::complex::Model* pModel = new ::yake::model::complex::Model();
-		YAKE_ASSERT( pModel );
-
-		// create physics component
-		pVehicle->setModel( pModel );
-		NativePhysicalVehicleComponent* pPhysicsComponent = //create<IPhysicalVehicleComponent>("yake.native");
-			new NativePhysicalVehicleComponent( pPWorld );
-		YAKE_ASSERT( pPhysicsComponent );
-		pVehicle->setPhysicalComponent( pPhysicsComponent );
-
-		// load vehicle (physics + graphics)
-		_loadModelFromDotVehicle( pModel, rTemplate, pPWorld, pGWorld, pPhysicsComponent );
-
-		// create input component
-		// create control component
-
-		pPhysicsComponent->translate( Vector3(0,10,0) );
-
-		return pVehicle;
-	}
-	//-----------------------------------------------------
-	bool NativeVehicleSystem::_loadModelFromDotVehicle(::yake::model::complex::Model* pModel,
-								const ::yake::String & rFN, 
-								physics::IWorld* pPWorld,
-								graphics::IWorld* pGWorld,
-								IPhysicalVehicleComponent* pPC
-								)
-	{
-		using namespace data;
-		YAKE_ASSERT( pPWorld );
-		YAKE_ASSERT( pGWorld );
-		YAKE_ASSERT( pModel );
-
-		// 1. read DOM
-
-		dom::xml::XmlSerializer ser;
-		ser.parse(rFN, false);
-
-		// 2. parse DOM - load vehicle template
-
-		VehicleTemplate tpl;
-		serializer::vehicle::VehicleSerializerV1 vs1;
-		YAKE_ASSERT( ser.getDocumentNode().get() );
-		vs1.load( ser.getDocumentNode(), tpl );
-
-		VehicleCreatorHelperV1 vc( tpl, static_cast<NativePhysicalVehicleComponent*>(pPC), pModel, pGWorld );
-		bool bRet = vc.create();
-		YAKE_ASSERT( bRet );
-		if (!bRet)
-			return false;
-
-		return true;
-	}
-
-}// ns vehicle
-} // ns model
-} // ns yake
-

Deleted: trunk/yake/src/yapp/model/yakeVehicleTpl.cpp
===================================================================
--- trunk/yake/src/yapp/model/yakeVehicleTpl.cpp	2005-09-30 21:31:19 UTC (rev 952)
+++ trunk/yake/src/yapp/model/yakeVehicleTpl.cpp	2005-09-30 21:32:54 UTC (rev 953)
@@ -1,91 +0,0 @@
-/*
-   ------------------------------------------------------------------------------------
-   This file is part of YAKE
-   Copyright ? 2004 The YAKE Team
-   For the latest information visit http://www.yake.org 
-   ------------------------------------------------------------------------------------
-   This program is free software; you can redistribute it and/or modify it under
-   the terms of the GNU Lesser General Public License as published by the Free Software
-   Foundation; either version 2 of the License, or (at your option) any later
-   version.
-
-   This program is distributed in the hope that it will be useful, but WITHOUT
-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-   FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public License along with
-   this program; if not, write to the Free Software Foundation, Inc., 59 Temple
-   Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-   http://www.gnu.org/copyleft/lesser.txt.
-   ------------------------------------------------------------------------------------
-   If you are interested in another license model contact the Yake Team via
-   E-Mail: team at yake.org.
-   For more information see the LICENSE file in the root directory of the
-   source code distribution.
-   ------------------------------------------------------------------------------------
-*/
-#include <yapp/base/yappPCH.h>
-#include <yapp/base/yapp.h>
-#include <yapp/model/yakeVehicleTpl.h>
-
-namespace yake {
-namespace model {
-namespace vehicle {
-
-	VehicleTemplate::VehicleTemplate() : mNumSteerGroups(1)
-	{
-	}
-	VehicleTemplate::~VehicleTemplate()
-	{
-	}
-	size_t VehicleTemplate::getNumEngines() const
-	{
-		return mEngines.size();
-	}
-	const VehicleTemplate::EngineTemplate& VehicleTemplate::getEngine(const size_t index) const
-	{
-		YAKE_ASSERT( index < mEngines.size() );
-		return mEngines[ index ];
-	}
-	void VehicleTemplate::addEngine( const EngineTemplate & tpl)
-	{
-		mEngines.push_back( tpl );
-	}
-	size_t VehicleTemplate::getNumAxles() const
-	{
-		return mAxles.size();
-	}
-	const VehicleTemplate::AxleTemplate& VehicleTemplate::getAxle(const size_t index) const
-	{
-		YAKE_ASSERT( index < mAxles.size() );
-		return mAxles[ index ];
-	}
-	void VehicleTemplate::addAxle( const AxleTemplate & tpl)
-	{
-		mAxles.push_back( tpl );
-	}
-	size_t VehicleTemplate::getNumSteeringGroups() const
-	{
-		return mNumSteerGroups;
-	}
-	void VehicleTemplate::addSteeringGroup()
-	{
-		mNumSteerGroups++;
-	}
-	size_t VehicleTemplate::getNumWheels() const
-	{
-		return mWheels.size();
-	}
-	const VehicleTemplate::WheelTemplate& VehicleTemplate::getWheel(const size_t index) const
-	{
-		YAKE_ASSERT( index < mWheels.size() );
-		return mWheels[ index ];
-	}
-	void VehicleTemplate::addWheel( const WheelTemplate & tpl)
-	{
-		mWheels.push_back( tpl );
-	}
-
-}
-}
-}



